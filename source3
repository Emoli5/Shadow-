local ver = '2.5.5' --// 26 December 2022 EST 
 if not game:IsLoaded() then game.Loaded:Wait() end --// Wait for game to load to prevent errors 
 --// Services 
 local Players = game:GetService('Players') 
 local UIS = game:GetService('UserInputService') 
 local RunService = game:GetService('RunService') 
 local CoreGUI = game:GetService('CoreGui') 
 local Http = game:GetService('HttpService') 
 local TweenService = game:GetService('TweenService') 
 local ContentProvider = game:GetService('ContentProvider') 
 local RepStorage = game:GetService('ReplicatedStorage') 
 local TeleportService = game:GetService('TeleportService') 
 local Lighting = game:GetService('Lighting') 
 --\\ 
 --// Important Variables 
 local chatevents = RepStorage.DefaultChatSystemChatEvents 
 local user = Players.LocalPlayer 
  
 local Functions = {} 
 local function addFunction(func) table.insert(Functions, func) end 
 local function loadstr(str) loadstring(game:HttpGet((str), true))() end 
 local function chat(str) chatevents.SayMessageRequest:FireServer(str, "All") end 
 --\\ 
 --// GUI 
 local CmdGUI = Instance.new('ScreenGui') 
 CmdGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling 
 CmdGUI.Name = 'YmirAdmin_GUI' 
 CmdGUI:SetAttribute('IntroDone', false) 
  
 local CmdMain = Instance.new('Frame') 
 CmdMain.Name = 'YmirAdmin_Main' 
 CmdMain.Parent = CmdGUI 
 CmdMain.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 
 CmdMain.BorderColor3 = Color3.fromRGB(31, 31, 31) 
 CmdMain.BorderSizePixel = 0 
 CmdMain.Position = UDim2.new(0.5, 0, 0.5, 0) 
 CmdMain.Size = UDim2.new(0,0,0,0) 
 CmdMain.AnchorPoint = Vector2.new(0.5, 0.5) 
  
 local CmdBox = Instance.new('Frame') 
 CmdBox.Name = 'YmirAdmin_Box' 
 CmdBox.Parent = CmdMain 
 CmdBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 
 CmdBox.BorderColor3 = Color3.fromRGB(140, 140, 140) 
 CmdBox.BorderSizePixel = 0 
 CmdBox.Position = UDim2.new(0, 0, 0.632000029, 0) 
 CmdBox.Size = UDim2.new(0.996109784, 0, 0.36981371, 0) 
 CmdBox.Visible = false 
  
 local CmdNotif = Instance.new('TextLabel') 
 CmdNotif.Name = 'YmirAdmin_NotifText' 
 CmdNotif.Parent = CmdBox 
 CmdNotif.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdNotif.BackgroundTransparency = 1.000 
 CmdNotif.Position = UDim2.new(0.0128824329, 0, 0.201365471, 0) 
 CmdNotif.Size = UDim2.new(0.986970961, 0, 0.820274472, 0) 
 CmdNotif.Visible = false 
 CmdNotif.ZIndex = 10 
 CmdNotif.Font = Enum.Font.SourceSans 
 CmdNotif.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdNotif.TextSize = 14.000 
 CmdNotif.TextWrapped = true 
  
 local CmdLogHandler = Instance.new('ScrollingFrame') 
 CmdLogHandler.Name = 'YmirAdmin_LogHandler' 
 CmdLogHandler.Parent = CmdBox 
 CmdLogHandler.Active = true 
 CmdLogHandler.Visible = false 
 CmdLogHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 
 CmdLogHandler.BorderSizePixel = 0 
 CmdLogHandler.Position = UDim2.new(0.0331288725, 0, 0.207801834, 0) 
 CmdLogHandler.Size = UDim2.new(0.966870666, 0, 0.785972178, 0) 
 CmdLogHandler.CanvasSize = UDim2.new(0.1, 0, 0.1, 0) 
 CmdLogHandler.AutomaticCanvasSize = 'Y' 
 CmdLogHandler.ScrollingDirection = 'Y' 
 CmdLogHandler.ScrollBarThickness = 6 
  
 local CmdLogExample = Instance.new('TextLabel') 
 CmdLogExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdLogExample.BackgroundTransparency = 1.000 
 CmdLogExample.Size = UDim2.new(0.928425848, 0, 0.14037393, 0) 
 CmdLogExample.Font = Enum.Font.SourceSans 
 CmdLogExample.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdLogExample.TextSize = 14.000 
 CmdLogExample.TextWrapped = true 
 CmdLogExample.TextXAlignment = Enum.TextXAlignment.Left 
 CmdLogExample.AutomaticSize = 'Y' 
  
 local CmdBoxTitle = Instance.new('TextLabel') 
 CmdBoxTitle.Name = 'YmirAdmin_BoxTitle' 
 CmdBoxTitle.Parent = CmdBox 
 CmdBoxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdBoxTitle.BackgroundTransparency = 1 
 CmdBoxTitle.Position = UDim2.new(0.0128824329, 0, 0, 0) 
 CmdBoxTitle.Size = UDim2.new(0.987117469, 0, 0.207801759, 0) 
 CmdBoxTitle.Font = Enum.Font.SourceSansBold 
 CmdBoxTitle.Text = 'Logs' 
 CmdBoxTitle.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdBoxTitle.TextSize = 14.000 
  
 local CmdHandler = Instance.new('ScrollingFrame') 
 CmdHandler.Name = 'YmirAdmin_CmdHandler' 
 CmdHandler.Parent = CmdMain 
 CmdHandler.Active = true 
 CmdHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 
 CmdHandler.BorderSizePixel = 0 
 CmdHandler.Position = UDim2.new(0.0299999993, 0, 0.207689703, 0) 
 CmdHandler.Size = UDim2.new(0, 194, 0, 213) 
 CmdHandler.CanvasSize = UDim2.new(0, 0, 0, 0) 
 CmdHandler.AutomaticCanvasSize = 'Y' 
 CmdHandler.ScrollingDirection = 'Y' 
 CmdHandler.Visible = false 
  
 local CmdExample = Instance.new('TextButton') 
 CmdExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdExample.BackgroundTransparency = 1.000 
 CmdExample.Size = UDim2.new(0, 194, 0, 18) 
 CmdExample.ZIndex = 10 
 CmdExample.Font = Enum.Font.SourceSans 
 CmdExample.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdExample.TextSize = 14.000 
 CmdExample.TextXAlignment = Enum.TextXAlignment.Left 
  
 local CmdBar = Instance.new('TextBox') 
 CmdBar.Name = 'YmirAdmin_CmdBar' 
 CmdBar.Parent = CmdMain 
 CmdBar.BackgroundColor3 = Color3.fromRGB(53, 53, 53) 
 CmdBar.BorderSizePixel = 0 
 CmdBar.Position = UDim2.new(0.0299999993, 0, 0.0876345932, 0) 
 CmdBar.Size = UDim2.new(0, 187, 0, 22) 
 CmdBar.Font = Enum.Font.SourceSans 
 CmdBar.PlaceholderText = 'Command Bar' 
 CmdBar.Text = '' 
 CmdBar.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdBar.TextSize = 14.000 
 CmdBar.TextXAlignment = Enum.TextXAlignment.Left 
 CmdBar.ClearTextOnFocus = false 
 CmdBar.Visible = false 
 CmdBar.BackgroundTransparency = 1 
 CmdBar.TextTransparency = 1 
  
 local CmdTitle = Instance.new('TextLabel') 
 CmdTitle.Name = 'YmirAdmin_Title' 
 CmdTitle.Parent = CmdMain 
 CmdTitle.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 
 CmdTitle.BackgroundTransparency = 1 
 CmdTitle.BorderSizePixel = 0 
 CmdTitle.Size = UDim2.new(0, 200, 0, 23) 
 CmdTitle.Font = Enum.Font.SourceSansBold 
 CmdTitle.Text = 'Ymir Admin '..ver 
 CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdTitle.TextSize = 14.000 
 CmdTitle.TextTransparency = 1 
  
 local CmdDescBox = Instance.new('Frame') 
 CmdDescBox.Name = 'YmirAdmin_DescBox' 
 CmdDescBox.Parent = CmdMain 
 CmdDescBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30) 
 CmdDescBox.BackgroundTransparency = 0.2500 
 CmdDescBox.Position = UDim2.new(-0.00237113237, 0, 0.307555377, 0) 
 CmdDescBox.Size = UDim2.new(0, 194, 0, 71) 
 CmdDescBox.Visible = false 
  
 local CmdDescTitle = Instance.new('TextLabel') 
 CmdDescTitle.Name = 'YmirAdmin_DescTitle' 
 CmdDescTitle.Parent = CmdDescBox 
 CmdDescTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdDescTitle.BackgroundTransparency = 1.000 
 CmdDescTitle.Size = UDim2.new(0, 191, 0, 23) 
 CmdDescTitle.Font = Enum.Font.SourceSansBold 
 CmdDescTitle.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdDescTitle.TextSize = 13.500 
  
 local CmdDescription = Instance.new('TextLabel') 
 CmdDescription.Name = 'YmirAdmin_Description' 
 CmdDescription.Parent = CmdDescBox 
 CmdDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 CmdDescription.BackgroundTransparency = 1.000 
 CmdDescription.Position = UDim2.new(0, 0, 0.324, 0) 
 CmdDescription.Size = UDim2.new(0, 191, 0, 48) 
 CmdDescription.ZIndex = 10 
 CmdDescription.Font = Enum.Font.SourceSans 
 CmdDescription.Text = '' 
 CmdDescription.TextColor3 = Color3.fromRGB(255, 255, 255) 
 CmdDescription.TextSize = 14.000 
 CmdDescription.TextWrapped = true 
  
 Instance.new('UIListLayout', CmdLogHandler).SortOrder = Enum.SortOrder.LayoutOrder 
 Instance.new('UIListLayout', CmdHandler).SortOrder = Enum.SortOrder.LayoutOrder 
 --\\ 
 --// Save and load data 
 _G.settings = { 
         prefix = '.', 
         ChatCmd = true, 
         notifs = true, 
         logsOpen = false, 
         mainPos = {x1 = CmdMain.Position.X.Scale, x2 = CmdMain.Position.X.Offset, y1 = CmdMain.Position.Y.Scale, y2 = CmdMain.Position.Y.Offset}, 
         KillTool = 'AK-47', 
         TPTool = 'M9', 
         Whitelisted = {}, 
         Ranked = {}, 
 } 
 local file = 'YmirAdminSettings.pl' 
 local function load() 
         if (readfile and isfile and isfile(file)) then 
                 _G.settings = Http:JSONDecode(readfile(file)) 
         end 
 end 
 load() 
  
 local function save() 
         spawn(function() 
                 local json 
                 if (writefile) then 
                         json = Http:JSONEncode(_G.settings) 
                         writefile(file, json) 
                 end 
         end) 
 end 
 wait() 
 local prefix = _G.settings.prefix 
 local ChatCmd = _G.settings.ChatCmd 
 local notifs = _G.settings.notifs 
 local logsOpen = _G.settings.logsOpen 
 local mainPos =  _G.settings.mainPos 
 CmdMain.Position =  UDim2.new(mainPos.x1, mainPos.x2, mainPos.y1, mainPos.y2) 
 if ChatCmd then 
         CmdBar.PlaceholderText = 'Command Bar ('..prefix..')' 
 end 
 --\\ 
 --// Notifications and logs 
 local notified = false 
 local function notif(txt, notimer) 
         if notifs and not logsOpen then 
                 local counter = 0 
                 CmdNotif.Visible = true 
                 CmdLogHandler.Visible = false 
                 if not notified then 
                         CmdNotif.Text = txt 
                         if not notimer then wait(0.5) end 
                         notified = true 
                         local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)}) 
                         tween:Play() 
                         notified = true 
                         tween.Completed:Wait() 
                         wait(1) 
                         if not logsOpen then 
                                 tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)}) 
                                 tween:Play() 
                                 notified = false 
                         end 
                 else  
                         local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)}) 
                         tween:Play() 
                         notified = false 
                         tween.Completed:Wait() 
                         CmdNotif.Text = txt 
                         tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)}) 
                         tween:Play() 
                         notified = true 
                         tween.Completed:Wait() 
                         wait(1) 
                         if not logsOpen then 
                                 tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)}) 
                                 tween:Play() 
                                 notified = false 
                         end 
                 end 
         end 
 end 
  
  
 local function log(txt) 
         spawn(function() 
                 local clone = CmdLogExample:Clone() 
                 clone.Text = txt 
                 clone.Name = 'Log' 
                 clone.TextTransparency = 1 
                 clone.Parent = CmdLogHandler 
                 CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y) 
                 local f = TweenService:Create(clone, TweenInfo.new(.2), {TextTransparency = 0}) 
                 f:Play() 
         end) 
 end 
  
 local function toggleLogs(tog) 
         _G.settings.logsOpen = tog 
         save() 
         if tog then 
                 logsOpen = true 
                 CmdLogHandler.Visible = true 
                 CmdBox:TweenPosition(UDim2.new(1, 0, 0.632000029, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5) 
         else 
                 logsOpen = false 
                 local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingDirection.In, Enum.EasingStyle.Quart, 0.5), {Position = UDim2.new(0, 0, 0.632000029, 0)}) 
                 tween:Play(); tween.Completed:Wait() 
                 CmdLogHandler.Visible = false 
         end 
         CmdNotif.Visible = false 
 end 
 --\\ 
 --// Dragging 
 local dragToggle, dragInput, dragStart, dragPos 
 local dragSpeed = .25  
  
 function Update(input) 
         local delta = input.Position - dragStart 
         local pos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) 
         TweenService:Create(CmdMain, TweenInfo.new(.25), {Position = pos}):Play() 
         _G.settings.mainPos = {x1 = pos.X.Scale, x2 = pos.X.Offset, y1 = pos.Y.Scale, y2 = pos.Y.Offset} 
         save() 
 end 
  
 CmdMain.InputBegan:Connect(function(input) 
         if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 
                 dragToggle = true 
                 dragStart = input.Position 
                 startPos = CmdMain.Position 
                 input.Changed:Connect(function() 
                         if (input.UserInputState == Enum.UserInputState.End) then 
                                 dragToggle = false 
                         end 
                 end) 
         end 
 end) 
  
 CmdMain.InputChanged:Connect(function(input) 
         if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 
                 dragInput = input 
         end 
 end) 
  
 UIS.InputChanged:Connect(function(input) 
         if input == dragInput and dragToggle then 
                 Update(input) 
         end 
 end) 
 --\\ 
 --// Adding commands 
 local Cmd = {} 
 Cmd[#Cmd + 1] = {Name='whitelist / wl <plr>',Desc='Whitelist the player from getting tased/killed/arrested and etc.'} 
 Cmd[#Cmd + 1] = {Name='unwhitelist / unwl <plr>',Desc='Unwhitelists the player'} 
 Cmd[#Cmd + 1] = {Name='getwhitelist / getwl',Desc='Logs whitelisted players in the current server'} 
 Cmd[#Cmd + 1] = {Name='rank / admin <plr>',Desc='Ranks player to recieve admin commands'} 
 Cmd[#Cmd + 1] = {Name='unrank / unadmin <plr>',Desc='Removes admin rank from player'} 
 Cmd[#Cmd + 1] = {Name='permarank / permaadmin <plr>',Desc='Ranks a player everytime they join your server'} 
 Cmd[#Cmd + 1] = {Name='unpermarank / unpermaadmin <plr>',Desc='Removes permanent rank from player'} 
 Cmd[#Cmd + 1] = {Name='ranked / admins',Desc='Logs players in the current server you ranked'} 
 Cmd[#Cmd + 1] = {Name='tase / taze <plr / team / all>',Desc='Tases the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='looptase / looptaze <plr / team / all>',Desc='Loop tases the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='unlooptase / unlooptaze <plr / team / all>',Desc='Disables loop tasing the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='clearlooptase / clearlooptaze',Desc='Removes all loop tases'} 
 Cmd[#Cmd + 1] = {Name='antitaser / taserbypass',Desc='Prevents you from being tased'} 
 Cmd[#Cmd + 1] = {Name='unantitaser / notaserbypass',Desc='Disables taser bypass'} 
 Cmd[#Cmd + 1] = {Name='arrest <plr / all>',Desc='Arrests the player or all criminals if you choose all'} 
 Cmd[#Cmd + 1] = {Name='clickarrest',Desc="Arrests the player you click if you're near them"} 
 Cmd[#Cmd + 1] = {Name='noclickarrest / unclickarrest',Desc='Disables click arrest'} 
 Cmd[#Cmd + 1] = {Name='spamarrest <plr>',Desc='Spam arrests the player (Causes lag)'} 
 Cmd[#Cmd + 1] = {Name='unspamarrest [plr]',Desc='Stops spam arresting'} 
 Cmd[#Cmd + 1] = {Name='arrestaura',Desc='Arrests everyone who is near you'} 
 Cmd[#Cmd + 1] = {Name='noarrestaura / unarrestaura',Desc='Disables arrest aura'} 
 Cmd[#Cmd + 1] = {Name='killtool / killgun [tool]',Desc='View or sets the gun that you will use for killing players via command'} 
 Cmd[#Cmd + 1] = {Name='kill <plr / team / all>',Desc='Kills the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='loopkill / lk <plr / team / all>',Desc='Loop kills the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='unloopkill / unlk <plr / team / all>',Desc='Disables loop killing the player/team/all if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='clearloopkill / clearloopkills',Desc='Removes all loop kills'} 
 Cmd[#Cmd + 1] = {Name='clickkill',Desc='Kills the player you click'} 
 Cmd[#Cmd + 1] = {Name='noclickkill / unclickkill',Desc='Disables click kill'} 
 Cmd[#Cmd + 1] = {Name='killaura / aura [plr] [range]',Desc='Kills everyone who is near you or the player or sets kill aura range'} 
 Cmd[#Cmd + 1] = {Name='nokillaura / noaura [plr]',Desc='Disables kill aura for you or the player'} 
 Cmd[#Cmd + 1] = {Name='inmate / inmates',Desc='Join the inmate team'} 
 Cmd[#Cmd + 1] = {Name='guard / guards',Desc='Join the guard team'} 
 Cmd[#Cmd + 1] = {Name='criminal / crim [plr / all]',Desc='Join the criminal team, make player a criminal or all players if you choose all'} 
 Cmd[#Cmd + 1] = {Name='neutral / neutrals',Desc='Join the neutral team'} 
 Cmd[#Cmd + 1] = {Name='red',Desc='Join the custom red team'} 
 Cmd[#Cmd + 1] = {Name='orange',Desc='Join the custom orange team'} 
 Cmd[#Cmd + 1] = {Name='yellow',Desc='Join the custom yellow team'} 
 Cmd[#Cmd + 1] = {Name='green',Desc='Join the custom green team'} 
 Cmd[#Cmd + 1] = {Name='blue',Desc='Join the custom blue team'} 
 Cmd[#Cmd + 1] = {Name='purple',Desc='Join the custom purple team'} 
 Cmd[#Cmd + 1] = {Name='pink',Desc='Join the custom pink team'} 
 Cmd[#Cmd + 1] = {Name='white',Desc='Join the custom white team'} 
 Cmd[#Cmd + 1] = {Name='grey',Desc='Join the custom grey team'} 
 Cmd[#Cmd + 1] = {Name='brown',Desc='Join the custom brown team'} 
 Cmd[#Cmd + 1] = {Name='black',Desc='Join the custom black team'} 
 Cmd[#Cmd + 1] = {Name='makecriminal / makecrim <plr / all>',Desc='Makes player join the criminal team or all players if you choose all'} 
 Cmd[#Cmd + 1] = {Name='lag <duration>',Desc='Lags for an amount of time'} 
 Cmd[#Cmd + 1] = {Name='unlag',Desc='Stops lag'} 
 Cmd[#Cmd + 1] = {Name='crash / crashserver',Desc='Lags and crashes the server'} 
 Cmd[#Cmd + 1] = {Name='uncrash / uncrashserver',Desc="Stops crashing the server"} 
 Cmd[#Cmd + 1] = {Name='dropfps / spikefps',Desc='Makes the server drop FPS'} 
 Cmd[#Cmd + 1] = {Name='undropfps / unspikefps',Desc='Stops FPS spiking'} 
 Cmd[#Cmd + 1] = {Name='infstamina',Desc="Enables infinite stamina"} 
 Cmd[#Cmd + 1] = {Name='uninfstamina / noinfstamina',Desc='Disables infinite stamina'} 
 Cmd[#Cmd + 1] = {Name='earbang / earrape [intensity]',Desc='Makes the whole server except you hear a loud noise'} 
 Cmd[#Cmd + 1] = {Name='noearbang / noearrape',Desc='Disables earbang'} 
 Cmd[#Cmd + 1] = {Name='reset / oof',Desc='Reset your character'} 
 Cmd[#Cmd + 1] = {Name='respawn / res',Desc='Respawns you on a spawn location'} 
 Cmd[#Cmd + 1] = {Name='refresh / re',Desc='Respawns you on your old location'} 
 Cmd[#Cmd + 1] = {Name='autorefresh / autore',Desc='Automatically respawn on your old location when you die'} 
 Cmd[#Cmd + 1] = {Name='unautorefresh / unautore',Desc='Disables autorefresh'} 
 Cmd[#Cmd + 1] = {Name='god / godmode',Desc='Grants immunity via reanimation'} 
 Cmd[#Cmd + 1] = {Name='ungod / ungodmode',Desc='Disables god mode'} 
 Cmd[#Cmd + 1] = {Name='swatgod',Desc='Grants immunity by spamming swat vest (Guard team only and requires SWAT gamepass)'} 
 Cmd[#Cmd + 1] = {Name='unswatgod',Desc='Disables swat god mode'} 
 Cmd[#Cmd + 1] = {Name='nodaycycle / alwaysday',Desc='Disables day cycle'} 
 Cmd[#Cmd + 1] = {Name='daycycle / unalwaysday',Desc='Enables day cycle'} 
 Cmd[#Cmd + 1] = {Name='showinventory / showinv',Desc='Shows inventory'} 
 Cmd[#Cmd + 1] = {Name='autoshowinventory / autoshowinv',Desc='Auto shows inventory'} 
 Cmd[#Cmd + 1] = {Name='unautoshowinventory / unautoshowinv',Desc='Disables auto show inventory'} 
 Cmd[#Cmd + 1] = {Name='view / spectate <plr>',Desc='Spectates the player'} 
 Cmd[#Cmd + 1] = {Name='unview / unspectate [plr]',Desc='Stops spectating'} 
 Cmd[#Cmd + 1] = {Name='goto / to <plr>',Desc='Teleports you to the player'} 
 Cmd[#Cmd + 1] = {Name='bring <plr / team / all>',Desc='Teleports the player/team/all/enemies to you if you choose one of them'} 
 Cmd[#Cmd + 1] = {Name='tptool [tool]',Desc='View or sets the tool for bringing players via commands'} 
 Cmd[#Cmd + 1] = {Name='loopbring <plr / team / all>',Desc='Loop teleports the player/team/all to your position'} 
 Cmd[#Cmd + 1] = {Name='unloopbring [plr / team / all]',Desc='Stops loop bringing'} 
 Cmd[#Cmd + 1] = {Name='antibring',Desc='Prevents you from being brought by other exploiters'} 
 Cmd[#Cmd + 1] = {Name='unantibring',Desc='Disables antibring'} 
 Cmd[#Cmd + 1] = {Name='fling <plr>',Desc='Flings the player'} 
 Cmd[#Cmd + 1] = {Name='loopfling <plr>',Desc='Loop flings the player'} 
 Cmd[#Cmd + 1] = {Name='unloopfling [plr]',Desc='Stops loopflinging'} 
 Cmd[#Cmd + 1] = {Name='antifling',Desc='Prevents you from being flinged'} 
 Cmd[#Cmd + 1] = {Name='unantifling',Desc='Disables antifling'} 
 Cmd[#Cmd + 1] = {Name='fastpunch',Desc='Activates fast punching'} 
 Cmd[#Cmd + 1] = {Name='nofastpunch / slowpunch',Desc='Disables fast punching'} 
 Cmd[#Cmd + 1] = {Name='onepunch / oneshotpunch',Desc='Activates one punching'} 
 Cmd[#Cmd + 1] = {Name='unonepunch / unoneshotpunch',Desc='Disables one punching'} 
 Cmd[#Cmd + 1] = {Name='freepunch',Desc='Running or crawling will not affect punching'} 
 Cmd[#Cmd + 1] = {Name='unfreepunch / nofreepunch',Desc='Disables free punching'} 
 Cmd[#Cmd + 1] = {Name='superpunch / allpunch',Desc='Enables fast, free, and one punching'} 
 Cmd[#Cmd + 1] = {Name='nosuperpunch / noallpunch',Desc='Disables super punching'} 
 Cmd[#Cmd + 1] = {Name='dropitems [plr]',Desc='Drops a bunch of items by loop killing you, follows player if you choose a player'} 
 Cmd[#Cmd + 1] = {Name='undropitems',Desc='Disables item dropping'} 
 Cmd[#Cmd + 1] = {Name='food [plr]',Desc="Looks for breakfast/lunch/dinner if it's available and adds it to your backpack or give it to a player"} 
 Cmd[#Cmd + 1] = {Name='handcuffs / cuffs <plr>',Desc="Switches to guard teams and gives cuffs to a player"} 
 Cmd[#Cmd + 1] = {Name='keycard / key [plr]',Desc='Finds for key card or you spawn a key card and auto pick it up, or give keycard to a player'} 
 Cmd[#Cmd + 1] = {Name='findkeycard / findkey ',Desc='Finds for a key card'} 
 Cmd[#Cmd + 1] = {Name='unfindkeycard / unfindkey ',Desc='Stops finding for a key card'} 
 Cmd[#Cmd + 1] = {Name='crudeknife / knife [plr]',Desc='Adds crude knife to your backpack or give it to a player'} 
 Cmd[#Cmd + 1] = {Name='superknife / oneshotknife',Desc='Enables or adds super knife to your backpack'} 
 Cmd[#Cmd + 1] = {Name='unsuperknife / normalknife',Desc='Disables super knife'} 
 Cmd[#Cmd + 1] = {Name='hammer [plr]',Desc='Adds hammer to your backpack or give it to a player'} 
 Cmd[#Cmd + 1] = {Name='baseballbat / bat',Desc='Adds one shot bat to your backpack'} 
 Cmd[#Cmd + 1] = {Name='shield [plr]',Desc='Adds shield to your backpack or give it to a player (Requires SWAT Gamepass)'} 
 Cmd[#Cmd + 1] = {Name='antishield / antishields',Desc='Removes shields from other players'} 
 Cmd[#Cmd + 1] = {Name='unantishield / unantishields',Desc='Restores shields from other players'} 
 Cmd[#Cmd + 1] = {Name='m9 / pistol',Desc='Adds M9 to your backpack'} 
 Cmd[#Cmd + 1] = {Name='remington / shotgun',Desc='Adds Remington 870 to your backpack'} 
 Cmd[#Cmd + 1] = {Name='ak / ak47',Desc='Adds AK-47 to your backpack'} 
 Cmd[#Cmd + 1] = {Name='m4 / m4a1',Desc='Adds M4A1 to your backpack (Requires SWAT Gamepass)'} 
 Cmd[#Cmd + 1] = {Name='pp / willy',Desc='Equips all guns and turns them into a penis'} 
 Cmd[#Cmd + 1] = {Name='nopp / nowilly',Desc='Removes penis (ouch)'} 
 Cmd[#Cmd + 1] = {Name='gun / guns',Desc='Adds all possible guns to your backpack'} 
 Cmd[#Cmd + 1] = {Name='autogun / autoguns',Desc='Automatically adds all possible guns to your backpack'} 
 Cmd[#Cmd + 1] = {Name='unautogun / unautoguns',Desc='Disables autoguns'} 
 Cmd[#Cmd + 1] = {Name='refreshgun / regun',Desc="Refreshes the gun you're holding"} 
 Cmd[#Cmd + 1] = {Name='refreshguns / reguns',Desc='Refreshes all the guns in your inventory'} 
 Cmd[#Cmd + 1] = {Name='oneshotgun',Desc="Makes the gun you're holding one shot"} 
 Cmd[#Cmd + 1] = {Name='firerate <num>',Desc="Changes the firerate of the gun you're holding"} 
 Cmd[#Cmd + 1] = {Name='autofire / rapidfire',Desc="Makes the gun you're holding shoot really fast"} 
 Cmd[#Cmd + 1] = {Name='modgun / supergun',Desc="Enables all gun mods for the gun you're holding"} 
 Cmd[#Cmd + 1] = {Name='automodguns / autosuperguns',Desc='Auto enables all gun mods for all your guns'} 
 Cmd[#Cmd + 1] = {Name='unautomodguns / unautosuperguns',Desc='Disables auto gun mods'} 
 Cmd[#Cmd + 1] = {Name='gate / frontgate',Desc='Teleports you to the gate'} 
 Cmd[#Cmd + 1] = {Name='opengate / openfrontgate',Desc='Opens the gate'} 
 Cmd[#Cmd + 1] = {Name='gateroom',Desc='Teleports you in the gateroom'} 
 Cmd[#Cmd + 1] = {Name='gatetower',Desc='Teleports you to the tower beside the gate'} 
 Cmd[#Cmd + 1] = {Name='tower',Desc='Teleports you to the tower on yard'} 
 Cmd[#Cmd + 1] = {Name='yard',Desc='Teleports you to the yard'} 
 Cmd[#Cmd + 1] = {Name='armory / guardroom',Desc='Teleports you to the armory'} 
 Cmd[#Cmd + 1] = {Name='nexus / prison',Desc='Teleports you in the nexus'} 
 Cmd[#Cmd + 1] = {Name='backnexus / backnex',Desc='Teleports you in the back of the nexus'} 
 Cmd[#Cmd + 1] = {Name='sewer / sewers',Desc='Teleports you in the sewer'} 
 Cmd[#Cmd + 1] = {Name='cafeteria / cafe',Desc='Teleports you in the cafeteria'} 
 Cmd[#Cmd + 1] = {Name='roof',Desc='Teleports you to the roof'} 
 Cmd[#Cmd + 1] = {Name='criminalbase / crimbase',Desc='Teleports you in the criminal base'} 
 Cmd[#Cmd + 1] = {Name='neutralspawn',Desc='Teleports you to the neutral spawn'} 
 Cmd[#Cmd + 1] = {Name='antifall / antivoid',Desc='Teleports you above if you almost fall to the void'} 
 Cmd[#Cmd + 1] = {Name='unantifall / unantivoid',Desc='Disables antifall'} 
 Cmd[#Cmd + 1] = {Name='antiafk',Desc='Prevents you from being kicked for being AFK'} 
 Cmd[#Cmd + 1] = {Name='unantiafk',Desc='Disables anti-afk'} 
 Cmd[#Cmd + 1] = {Name='rejoin / rj',Desc='Rejoin the server'} 
 Cmd[#Cmd + 1] = {Name='serverhop / shop',Desc='Join a different server'} 
 Cmd[#Cmd + 1] = {Name='prefix [prefix]',Desc='View or set prefix for commands'} 
 Cmd[#Cmd + 1] = {Name='chatcmd / enablechatcmd',Desc='Enable commands in chat'} 
 Cmd[#Cmd + 1] = {Name='nochatcmd / disablechatcmd',Desc='Disable commands in chat'} 
 Cmd[#Cmd + 1] = {Name='notifs / notifications',Desc='Enable notifications you whenever you use a command'} 
 Cmd[#Cmd + 1] = {Name='nonotifs / nonotifications',Desc='Disable notifications'} 
 Cmd[#Cmd + 1] = {Name='logs / openlogs',Desc='Open command logs'} 
 Cmd[#Cmd + 1] = {Name='nologs / closelogs',Desc='Minimize command logs'} 
 Cmd[#Cmd + 1] = {Name='version / ver',Desc='Checks for current version and updated version'} 
 Cmd[#Cmd + 1] = {Name='reload / reloadscript',Desc='Reloads script'} 
 Cmd[#Cmd + 1] = {Name='destroy / destroyscript',Desc='Destroys script'} 
 --\\ 
 --// Intro and loading script 
 local reload = false 
 if CoreGUI:FindFirstChild('YmirAdmin_GUI') then 
         local oldGUI = CoreGUI['YmirAdmin_GUI'] 
         if oldGUI:GetAttribute('IntroDone') == false then  
                 oldGUI:GetAttributeChangedSignal('IntroDone'):Wait() 
                 wait(.5) 
         end 
         reload = true  
         local oldMain = oldGUI[CmdMain.Name] 
         CmdMain.Position = oldMain.Position 
         CmdMain.Size = oldMain.Size 
         local oldHandler = oldMain[CmdHandler.Name] 
         CmdHandler.CanvasPosition = oldHandler.CanvasPosition 
         local oldBox = oldMain[CmdBox.Name] 
         CmdBox.Position = oldBox.Position 
         local oldNotif = oldBox[CmdNotif.Name] 
         CmdNotif.Visible = oldNotif.Visible 
         local oldNotifHandler = oldBox[CmdLogHandler.Name]:Clone() 
         CmdLogHandler:Destroy() 
         oldNotifHandler.Parent = CmdBox 
         CmdLogHandler = oldNotifHandler 
         CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y) 
         oldGUI:Destroy() 
         CmdGUI.Parent = par 
         CmdHandler.Visible = true 
         CmdBox.Visible = true 
         CmdBar.Visible = true 
         CmdTitle.BackgroundTransparency = 0 
         CmdTitle.TextTransparency = 0 
         CmdBar.TextTransparency = 0 
         CmdBar.BackgroundTransparency = 0 
 else --//vvv INTRO vvv\\-- 
         CmdGUI.Parent = CoreGUI 
         local f1 = TweenService:Create(CmdMain, TweenInfo.new(), {Size = UDim2.new(0, 200, 0, 269)}) 
         f1:Play() 
         f1.Completed:Wait() 
         CmdTitle.BackgroundTransparency = 0 
         wait(.1) 
         local f2 = TweenService:Create(CmdTitle, TweenInfo.new(.2), {TextTransparency = 0}) 
         f2:Play() 
         f2.Completed:Wait() 
         wait(.1) 
         CmdBar.Visible = true 
         local f3 = TweenService:Create(CmdBar, TweenInfo.new(.2), {BackgroundTransparency = 0}) 
         local f4 = TweenService:Create(CmdBar, TweenInfo.new(.2), {TextTransparency = 0}) 
         f3:Play() 
         f4:Play() 
         f4.Completed:Wait() 
         wait(.1) 
         CmdHandler.Visible = true 
         CmdBox.Visible = true 
         CmdBar:ReleaseFocus() 
         CmdBar.Text = '' 
         if logsOpen then 
                 CmdLogHandler.Visible = true 
                 local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, 0, 0.632000029, 0)}) 
                 tween:Play() 
                 tween.Completed:Wait() 
         end 
 end 
 for i = 1, #Cmd do 
         local clone = CmdExample:Clone()         
         clone.Text = Cmd[i].Name 
         clone.Name = 'Cmd' 
         local desc = Instance.new('StringValue', clone) 
         desc.Name = 'Desc' 
         desc.Value = Cmd[i].Desc 
         clone.Parent = CmdHandler 
         if Cmd[i].Disabled then 
                 local disabled = Instance.new('BoolValue', clone) 
                 disabled.Name = 'Disabled' 
                 disabled.Value = true 
                 clone.Text = clone.Text..' ⚠️' 
                 clone.TextColor3 = Color3.new(0.988235, 1, 0.176471) 
         else  
                 clone.MouseButton1Click:Connect(function() 
                         CmdBar:CaptureFocus() 
                         CmdBar.Text = clone.Text:split(' ')[1] 
                         CmdBar.CursorPosition = #CmdBar.Text + 1 
                 end) 
         end 
         if reload == false and i <= 11 then 
                 clone.TextTransparency = 1 
                 local f = TweenService:Create(clone, TweenInfo.new(.2-0.05), {TextTransparency = 0}) 
                 f:Play() 
                 f.Completed:Wait() 
         end 
 end 
 CmdGUI:SetAttribute('IntroDone', true) 
 if not reload then  
         log('[ ✅ ]: Loaded admin commands') 
 else  
         notif('Reloaded admin commands', true) 
         log('[ ✅ ]: Reloaded admin commands') 
 end 
 --\\ 
 --// Command descriptions 
 local Mouse = user:GetMouse() 
 addFunction(Mouse.Move:Connect(function() 
         local Guis = CoreGUI:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) 
         local Gui 
         for _, v in pairs(Guis) do 
                 if v.Parent == CmdHandler then 
                         Gui = v 
                 end 
         end 
         if Gui ~= nil then 
                 local X = Mouse.X - CmdMain.AbsolutePosition.X 
                 local Y = Mouse.Y - CmdMain.AbsolutePosition.Y 
                 if Mouse.X > 200 then 
                         X = X - 191 
                 end 
                 if Mouse.Y > (Mouse.ViewSizeY-96) then 
                         Y = Y - 57 
                 end 
                 CmdDescBox.Visible = true 
                 CmdDescBox.Position = UDim2.new(0, X, 0, Y) 
                 CmdDescTitle.Text = Gui.Text 
                 if Gui:FindFirstChild('Disabled') then 
                         CmdDescTitle.TextColor3 = Color3.new(0.988235, 1, 0.176471) 
                         CmdDescription.Text = 'Command is temporarily disabled until further notice.' 
                 else  
                         CmdDescTitle.TextColor3 = Color3.new(1, 1, 1) 
                         CmdDescription.Text = Gui.Desc.Value 
                 end 
         else 
                 CmdDescBox.Visible = false 
         end 
 end)) 
 --\\ 
 --// Command variables 
 local LoopKilled = {} 
 local LoopTased = {} 
 local Aura = {} 
 local Ranked = _G.settings.Ranked 
 local Whitelisted = _G.settings.Whitelisted  
 local ModdedGuns = {} 
 local Toggles = {} 
 local Spectating = nil 
 local Bringing = nil 
 local Flinging = nil 
 local SpamArresting = nil 
 local KillTool = _G.settings.KillTool 
 local TPTool = _G.settings.TPTool 
 local AuraRange = 10 
 local punchCooldown 
 local knifeCooldown  
 local batCooldown 
 local SWAT = game:GetService('MarketplaceService'):UserOwnsGamePassAsync(user.UserId, 96651) 
 local Remotes = workspace.Remote 
 --\\ 
 --// Functions 
 local function plrName(plr) 
         local name = plr.Name 
         local disname = plr.DisplayName 
         if name ~= disname then 
                 return name..' ('..disname..')' 
         else return name end 
 end 
  
 local function getPlr(str) 
         if not str then return end 
         local str = string.lower(str) 
         local plr 
         local finding = true 
         for _, Player in ipairs(Players:GetPlayers()) do 
                 if finding then 
                         if string.lower(Player.Name):match('^'..str) or string.lower(Player.DisplayName):match('^'..str) then 
                                 plr = Player 
                                 finding = false 
                         end 
                 end 
         end 
         if plr then return plr else return nil end 
 end 
  
 local function getPos() 
         local pos 
         pcall(function() 
                 if user.Character:FindFirstChild('reanimFolder') then pos = user.Character.reanimFolder:WaitForChild('reanim').HumanoidRootPart.CFrame 
                 else pos = user.Character.HumanoidRootPart.CFrame end 
         end) 
         return pos 
 end 
  
 local function getCam() 
         return workspace.CurrentCamera.CFrame 
 end 
  
 local function getTeam() 
         return user.TeamColor.Name 
 end 
  
 local function isDead() 
         local dead 
         if not user.Character:FindFirstChild('reanimFolder') then 
                 if user.Character:FindFirstChild('Humanoid') and user.Character.Humanoid.Health > 0 then dead = false 
                 else dead = true end 
         else dead = false end 
         return dead 
 end 
  
 local function goTo(plr, dis) 
         pcall(function() 
                 local Distance = dis or CFrame.new(0,0,0) 
                 for _, v in next, workspace[user.Name]:GetDescendants() do 
                         if v.Name == 'HumanoidRootPart' or v:FindFirstChild('RootJoint') then 
                                 v.CFrame = plr.Character.HumanoidRootPart.CFrame*Distance*CFrame.Angles(0,0,0) 
                         else continue end 
                 end 
         end) 
 end 
  
 local function goToCF(CF) 
         pcall(function() 
                 for _, v in next, workspace[user.Name]:GetDescendants() do 
                         if v.Name == 'HumanoidRootPart' or v:FindFirstChild('RootJoint') then 
                                 v.CFrame = CF*CFrame.Angles(0,0,0) 
                         else continue end 
                 end 
         end) 
 end 
  
 local function killPlr(plr) 
         if not plr then return end 
         pcall(function() 
                 if workspace:FindFirstChild(plr.Name) then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[KillTool].ITEMPICKUP) 
                         local tool = user.Character:FindFirstChild(KillTool) or user.Backpack:FindFirstChild(KillTool) 
                         local event = { 
                                 [1] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [2] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [3] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [4] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [5] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [6] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [7] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [8] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [9] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, [10] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Head 
                                 }, 
                         } 
                         RepStorage.ShootEvent:FireServer(event, tool) 
                         tool.Handle:Destroy() 
                         tool.Parent = user.Character 
                         tool:Destroy() 
                 else return end 
         end) 
 end 
  
 local function killPlrs(p) 
         if not p then return end 
         pcall(function() 
                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[KillTool].ITEMPICKUP) 
                 local tool = user.Character:FindFirstChild(KillTool) or user.Backpack:FindFirstChild(KillTool) 
                 local event = {} 
                 for _,v in pairs(p) do 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                 end 
                 RepStorage.ShootEvent:FireServer(event, tool) 
                 tool.Handle:Destroy() 
                 tool.Parent = user.Character 
                 tool:Destroy() 
         end) 
 end 
  
 local function tasePlr(plr) 
         if not plr then return end 
         pcall(function() 
                 if workspace:FindFirstChild(plr.Name) then 
                         local position = getPos() 
                         local camPos = getCam() 
                         local team = getTeam() 
  
                         local tool = user.Character:FindFirstChild('Taser') or user.Backpack:FindFirstChild('Taser') 
                         if team ~= 'Bright blue' or not tool then 
                                 repeat  
                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                                 goToCF(position) 
                                 workspace.CurrentCamera.CFrame = camPos 
                                 tool = user.Character:FindFirstChild('Taser') or user.Backpack:FindFirstChild('Taser') 
                         end 
  
                         local event = { 
                                 [1] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[plr.Name].Torso 
                                 } 
                         } 
                         RepStorage.ShootEvent:FireServer(event, tool) 
                         RepStorage.ReloadEvent:FireServer(tool) 
                 else return end 
         end) 
 end 
  
 local function tasePlrs(p) 
         if not p then return end 
         pcall(function() 
                 local position = getPos() 
                 local camPos = getCam() 
                 local team = getTeam() 
                 local tool = user.Character:FindFirstChild('Taser') or user.Backpack:FindFirstChild('Taser') 
                 if team ~= 'Bright blue' or not tool then 
                         repeat  
                                 Remotes.loadchar:InvokeServer(nil, 'Bright blue')  
                                 RunService.Heartbeat:Wait() 
                         until getTeam() == 'Bright blue' 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         tool = user.Character:FindFirstChild('Taser') or user.Backpack:FindFirstChild('Taser') 
                 end 
  
                 local event = {} 
                 for _,v in pairs(p) do 
                         event[#event+1] = { 
                                 ["RayObject"] = Ray.new(), 
                                 ["Distance"] = 0, 
                                 ["Cframe"] = CFrame.new(), 
                                 ["Hit"] = v.Character.Head 
                         } 
                 end 
                 RepStorage.ShootEvent:FireServer(event, tool) 
                 RepStorage.ReloadEvent:FireServer(tool) 
         end) 
 end 
  
 local function bringPlr(plr, cf) 
         if not plr then return end 
         if isDead() then Remotes.loadchar:InvokeServer() end 
         local position = getPos() 
         local team = getTeam() 
         local newPos = CFrame.new(9e9, 9e9, 9e9) 
         repeat  
                 pcall(function() 
                         if not user.Backpack:FindFirstChild(TPTool) and not user.Character:FindFirstChild(TPTool) then 
                                 local items = workspace.Prison_ITEMS 
                                 if items.giver:FindFirstChild(TPTool) then Remotes.ItemHandler:InvokeServer(items.giver[TPTool].ITEMPICKUP) 
                                 elseif items.single:FindFirstChild(TPTool) then  
                                         if team ~= 'Bright blue' then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single[TPTool].ITEMPICKUP) 
                                         else  
                                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single[TPTool].ITEMPICKUP) 
                                                 Remotes.TeamEvent:FireServer('Bright blue') 
                                         end 
                                         Remotes.ItemHandler:InvokeServer(items.single[TPTool].ITEMPICKUP)  
                                 end 
                         end 
                         local tool = user.Backpack[TPTool] or user.Character[TPTool] 
                         local char = user.Character 
                         char.Humanoid.Name = 'fuck' 
                         local c = char.fuck:Clone() 
                         c.Name = 'Humanoid' 
                         c.Parent = char 
                         char.fuck:Destroy() 
                         workspace.CurrentCamera.CameraSubject = char 
                         char.Animate.Disabled = true 
                         wait() 
                         char.Animate.Disabled = false 
                         char.Humanoid.DisplayDistanceType = 'None' 
                         tool.Parent = char 
                         local counter = 0 
                         repeat 
                                 wait(.1) 
                                 if not user.Backpack:FindFirstChild(TPTool) and not user.Character:FindFirstChild(TPTool) then 
                                         local items = workspace.Prison_ITEMS 
                                         if items.giver:FindFirstChild(TPTool) then Remotes.ItemHandler:InvokeServer(items.giver[TPTool].ITEMPICKUP) 
                                         elseif items.single:FindFirstChild(TPTool) then  
                                                 if team ~= 'Bright blue' then 
                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single[TPTool].ITEMPICKUP) 
                                                 else  
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single[TPTool].ITEMPICKUP) 
                                                         Remotes.TeamEvent:FireServer('Bright blue') 
                                                 end 
                                                 Remotes.ItemHandler:InvokeServer(items.single[TPTool].ITEMPICKUP)  
                                         end 
                                 end 
                                 counter = counter + 1 
                                 goTo(plr,CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)) 
                         until (isDead() or not char:FindFirstChild('HumanoidRootPart') or tool.Parent ~= char) and counter > 2                         
                         counter = 0 
                         repeat 
                                 wait(.1) 
                                 counter = counter + 1 
                                 goToCF(cf) 
                         until (isDead() or not char:FindFirstChild('HumanoidRootPart') or tool.Parent ~= plr.Character or counter > 20) and counter > 2 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         newPos = plr.Character.HumanoidRootPart.CFrame 
                 end) 
                 wait() 
         until (cf.Position - newPos.Position).magnitude <= 5 
 end 
  
 local function flingPlr(plr) 
         if not plr then return end 
         local position = getPos() 
         repeat 
                 pcall(function()  
                         local char = user.Character 
                         local tool = user.Backpack:FindFirstChild('M9') or user.Character:FindFirstChild('M9') 
                         local flingPrt = char.HumanoidRootPart 
                         char.ClientInputHandler.Disabled = true 
                         if flingPrt:FindFirstChildOfClass('AlignPosition') then flingPrt:FindFirstChildOfClass('AlignPosition'):Destroy() end 
                         if flingPrt:FindFirstChildOfClass('AlignOrientation') then flingPrt:FindFirstChildOfClass('AlignOrientation'):Destroy() end 
                         if isDead() then Remotes.loadchar:InvokeServer() end 
                         if not flingPrt:FindFirstChildOfClass('BodyAngularVelocity') then 
                                 local bAV = Instance.new('BodyAngularVelocity', flingPrt) 
                                 bAV.AngularVelocity = Vector3.new(0,9e9,0) 
                                 bAV.MaxTorque=Vector3.new(9e9,9e9,9e9) 
                         end 
                         if char:FindFirstChild('reanimFolder') then 
                                 local bP  
                                 if not flingPrt:FindFirstChildOfClass('BodyPosition') then 
                                         local bP = Instance.new('BodyPosition', flingPrt) 
                                         bP.P = 9e9 
                                         bP.D = 9e9 
                                         bP.MaxForce=Vector3.new(99999,99999,99999) 
                                 else bP = flingPrt:FindFirstChildOfClass('BodyPosition') end 
                                 if plr.Character.Humanoid.Health > 0 or plr.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then 
                                         bP.Position = plr.Character.HumanoidRootPart.Position  
                                 else  
                                         bP.Position = char.Torso.Position 
                                 end 
                         end 
                         if plr.Character.Humanoid.Health > 0 or plr.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then 
                                 flingPrt.Position = plr.Character.HumanoidRootPart.Position  
                         else  
                                 flingPrt.Position = char.Torso.Position 
                         end 
                 end) 
                 RunService.Heartbeat:Wait() 
         until not plr or not workspace[plr.Name] or not workspace[plr.Name]:FindFirstChild('Humanoid') or workspace[plr.Name].Humanoid.Health <= 0 
         Remotes.loadchar:InvokeServer() 
         goToCF(position) 
 end 
  
 local function arrestPlr(plr) 
         if not plr then return end 
         pcall(function() 
                 if not workspace:FindFirstChild(plr.Name) then repeat wait() until workspace:FindFirstChild(plr.Name) or not plr end 
                 if plr then 
                         local position = getPos() 
                         local camPos = getCam() 
                         local team = getTeam() 
                         repeat 
                                 goTo(plr, CFrame.new(0, 0, 1)) 
                                 Remotes.arrest:InvokeServer(workspace[plr.Name].Head) 
                                 RunService.Heartbeat:Wait() 
                         until workspace[plr.Name].Head:FindFirstChild('handcuffedGui') 
                         wait() 
                         Remotes.loadchar:InvokeServer(nil, team) 
                         user.Character.Humanoid.Sit = false 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                 end 
         end) 
 end 
  
 local function spamArrest(plr, t) 
         for i = 1,t do 
                 Remotes.arrest:InvokeServer(workspace[plr.Name].Head) 
         end 
 end 
  
 local function createSound(sound, source, t) 
         for i = 1, t do 
                 RepStorage.SoundEvent:FireServer(sound, source) 
         end 
 end 
  
 local function godMode() 
         local char = user.Character 
         local folderName = 'reanimFolder' 
         local reanimName = 'reanim' 
         local hum = char.Humanoid 
         local cam = workspace.CurrentCamera 
         local godFunctions = {} 
         local vt3 = Vector3.new 
         local cf = CFrame.new 
         local function godFunction(func) table.insert(godFunctions, func) end 
         --// 
         for _, v in next, char:GetDescendants() do 
                 if v:IsA('BasePart') then 
                         godFunction(RunService.Heartbeat:Connect(function() 
                                 pcall(function() 
                                         v.Velocity = vt3(0,-30,0) 
                                         sethiddenproperty(user,'MaximumSimulationRadius',math.huge) 
                                         sethiddenproperty(user,'SimulationRadius',999999999) 
                                         user.ReplicationFocus = workspace 
                                 end) 
                         end)) 
                 end 
         end 
         --// 
         local folder = Instance.new('Folder', char) 
         folder.Name = folderName 
  
         char.Archivable = true 
         local reanim = char:Clone() 
         reanim.Name = reanimName 
  
         for _, v in next, reanim:GetDescendants() do 
                 if v:IsA('BasePart') or v:IsA('Decal') then v.Transparency = 1  end 
         end 
  
         user.Character = nil 
         user.Character = char 
         hum.AutoRotate = false 
         hum.WalkSpeed = 0 
         hum.JumpPower = 0 
         char.Torso.Anchored = true 
         wait(5.65) 
         char.Torso.Anchored = false 
         log('[ ✅ ]: Enabled god mode') 
         hum.Health = 0 
         reanim.Parent = folder 
         reanim.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame*CFrame.new(0,5,0) 
  
         local function create(part, par, pos, rot) 
                 Instance.new('Attachment',part) 
                 Instance.new('AlignPosition',part) 
                 Instance.new('AlignOrientation',part) 
                 Instance.new('Attachment',par) 
                 part.Attachment.Name = part.Name 
                 par.Attachment.Name = part.Name 
                 part.AlignPosition.Attachment0 = part[part.Name] 
                 part.AlignOrientation.Attachment0 = part[part.Name] 
                 part.AlignPosition.Attachment1 = par[part.Name] 
                 part.AlignOrientation.Attachment1 = par[part.Name] 
                 par[part.Name].Position = pos or vt3() 
                 part[part.Name].Orientation = rot or vt3() 
                 part.AlignPosition.MaxForce = 999999999 
                 part.AlignPosition.MaxVelocity = math.huge 
                 part.AlignPosition.ReactionForceEnabled = false 
                 part.AlignPosition.Responsiveness = math.huge 
                 part.AlignOrientation.Responsiveness = math.huge 
                 part.AlignPosition.RigidityEnabled = false 
                 part.AlignOrientation.MaxTorque = 999999999 
                 part.Massless=true 
         end 
  
         local function setpos(part, par, pos) 
                 Instance.new('Attachment',part) 
                 Instance.new('AlignPosition',part) 
                 Instance.new('Attachment',par) 
                 part.Attachment.Name = part.Name 
                 par.Attachment.Name = part.Name 
                 part.AlignPosition.Attachment0 = part[part.Name] 
                 part.AlignPosition.Attachment1 = par[part.Name] 
                 par[part.Name].Position = pos or vt3() 
                 part.AlignPosition.MaxForce = 999999999 
                 part.AlignPosition.MaxVelocity = math.huge 
                 part.AlignPosition.ReactionForceEnabled = false 
                 part.AlignPosition.Responsiveness = math.huge 
                 part.Massless=true 
         end 
  
         for _, v in next, char:GetDescendants() do 
                 if v:IsA('BasePart') then 
                         addFunction(RunService.Stepped:Connect(function() 
                                 v.CanCollide = false 
                         end)) 
                 end 
         end 
  
         for _, v in next, char:GetDescendants() do 
                 if v:IsA('Accessory') then         
                         create(v.Handle, reanim[v.Name].Handle) 
                 end 
         end 
  
         create(char['Head'],reanim['Head']) 
         create(char['Torso'],reanim['Torso']) 
         setpos(char['HumanoidRootPart'],reanim['Torso'],vt3(0,0,0)) 
         create(char['Right Arm'],reanim['Right Arm']) 
         create(char['Left Arm'],reanim['Left Arm']) 
         create(char['Right Leg'],reanim['Right Leg']) 
         create(char['Left Leg'],reanim['Left Leg']) 
  
         godFunction(UIS.JumpRequest:Connect(function() 
                 if reanim.Humanoid.FloorMaterial ~= Enum.Material.Air then  
                         reanim.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping) 
                         reanim.Humanoid.Sit = false  
                 end  
         end)) 
  
         local crouch = false 
         local crouchCD = false 
         local fighting = false 
         local fight = 'left' 
  
         char.ClientInputHandler.Disabled = true 
         reanim.ClientInputHandler.Disabled = true 
  
         local anim1 = Instance.new('Animation'); anim1.Name = 'fightL'; anim1.AnimationId = 'rbxassetid://484200742'; local fightL = reanim.Humanoid.Animator:LoadAnimation(anim1) 
         local anim2 = Instance.new('Animation'); anim2.Name = 'fightR'; anim2.AnimationId = 'rbxassetid://484926359'; local fightR = reanim.Humanoid.Animator:LoadAnimation(anim2)  
         local anim3 = Instance.new('Animation'); anim3.Name = 'crouchI'; anim3.AnimationId = 'rbxassetid://481089053'; local crouchI = reanim.Humanoid.Animator:LoadAnimation(anim3)  
         local anim4 = Instance.new('Animation'); anim4.Name = 'crouchW'; anim4.AnimationId = 'rbxassetid://481088553'; local crouchW = reanim.Humanoid.Animator:LoadAnimation(anim4) 
         godFunction(Mouse.KeyDown:Connect(function(k) 
                 if k == 'f' and not fighting and reanim.Humanoid.WalkSpeed == 16 then 
                         fighting = true 
                         for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do 
                                 if v.Animation.Name:match('fight') then v:Stop() end 
                         end 
                         if fight == 'left' then 
                                 fightL:Play() 
                                 fight = 'right' 
                         else 
                                 fightR:Play() 
                                 fight = 'left' 
                         end 
                         local p = Instance.new('Part', reanim) 
                         p.Transparency = 1 
                         p.Size = user.Character.Torso.Size 
                         p.CanCollide = false 
                         local w = Instance.new('Weld', p) 
                         w.Part0 = reanim.Torso 
                         w.Part1 = p 
                         w.C1 = CFrame.new(0, 0, 2) 
                         local punchCD 
                         local func 
                         func = p.Touched:connect(function(h) 
                                 if not punchCD and Players:FindFirstChild(h.Parent.Name) and h.Parent ~= user and workspace[h.Parent.Name].Humanoid.Health > 0 then 
                                         punchCD = true 
                                         RepStorage.meleeEvent:FireServer(Players[h.Parent.Name]) 
                                         local sound = h.Parent.Head.punchSound:Clone() 
                                         sound.Parent = h.Parent.Head 
                                         sound:Play() 
                                         RepStorage.SoundEvent:FireServer(h.Parent.Head.punchSound, h.Parent.Head) 
                                         func:Disconnect() 
                                 else func:Disconnect() return end 
                         end) 
                         wait(.65) 
                         fighting = false 
                 end 
                 if k == 'c' and not crouchCD then 
                         if not crouch then 
                                 crouchI:Play() 
                                 TweenService:Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,-4,0)}):Play() 
                                 reanim.Humanoid.WalkSpeed = 5 
                                 crouch = true 
                                 crouchCD = true; wait(.2); crouchCD = false 
                         else  
                                 for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do 
                                         if v.Animation.Name:match('crouch') then v:Stop() end 
                                 end 
                                 TweenService:Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,0,0)}):Play() 
                                 reanim.Humanoid.WalkSpeed = 16 
                                 crouch = false 
                                 crouchCD = true; wait(.2); crouchCD = false 
                         end 
                 end 
         end)) 
  
         godFunction(UIS.InputBegan:Connect(function(k) 
                 if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then 
                         reanim.Humanoid.WalkSpeed = 24 
                 end 
         end)) 
  
         godFunction(UIS.InputEnded:Connect(function(k) 
                 if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then 
                         reanim.Humanoid.WalkSpeed = 16 
                 end 
         end)) 
  
         godFunction(RunService.RenderStepped:Connect(function() 
                 if crouch and reanim.HumanoidRootPart.Velocity.Magnitude < 2 then 
                         for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do 
                                 if v.Animation.Name == 'crouchW' then v:Stop() end 
                         end 
                 end 
         end)) 
  
         godFunction(RunService.RenderStepped:Connect(function() 
                 reanim.Humanoid:Move(hum.MoveDirection,false) 
                 if crouch and not crouchW.IsPlaying then 
                         crouchW:Play() 
                 end 
                 for _,v in next, hum:GetPlayingAnimationTracks() do v:Stop() end 
         end)) 
  
         cam.CameraSubject = reanim.Humanoid 
  
         godFunction(RunService.RenderStepped:Connect(function() 
                 if not workspace:FindFirstChild(user.Name) or not workspace[user.Name]:FindFirstChild(folderName) then 
                         for _,v in pairs(godFunctions) do 
                                 v:Disconnect() 
                         end 
                 end 
         end)) 
 end 
  
 local function onePunch() 
         local p = Instance.new('Part', user.Character) 
         p.Transparency = 1 
         p.Size = user.Character.Torso.Size 
         p.CanCollide = false 
         local w = Instance.new('Weld', p) 
         w.Part0 = user.Character.Torso 
         w.Part1 = p 
         w.C1 = CFrame.new(0, 0, 2) 
         p.Touched:connect(function(h) 
                 if Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= user and workspace[h.Parent.Name].Humanoid.Health > 0 then 
                         punchCooldown = true 
                         for i= 1, 15 do 
                                 RepStorage.meleeEvent:FireServer(Players[h.Parent.Name]) 
                         end 
                 end 
         end) 
         wait(.1) 
         punchCooldown = false 
         p:Destroy() 
 end 
  
 local function infStamina() 
         for i,v in next, getgc() do  
                 if type(v) == 'function' and getfenv(v).script and user.Character:FindFirstChild('ClientInputHandler') and getfenv(v).script == user.Character.ClientInputHandler then  
                         for i2,v2 in next, debug.getupvalues(v) do  
                                 if type(v2) == 'number' and Toggles.InfStamina then  
                                         debug.setupvalue(v, i2, math.huge) 
                                 end 
                         end 
                 end 
         end 
 end 
 --\\ 
 --// Command functions 
 local function executeCmd(cmd, args) 
         local position = getPos() 
         local camPos = getCam() 
         local team = getTeam() 
         if cmd == 'whitelist' or cmd == 'wl' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if not Whitelisted[plr.Name] then 
                                                 Whitelisted[plr.Name] = true 
                                                 _G.settings.Whitelisted[plr.Name] = true 
                                                 save() 
                                                 log('[ ✅ ]: Whitelisted '..plrName(plr)) 
                                                 notif('Whitelisted '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already whitelisted '..plrName(plr))  
                                                 notif('Already whitelisted '..plrName(plr))  
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot whitelist yourself')  
                                         notif('Cannot whitelist yourself')  
                                 end 
                         else  
                                 log('[ ❌ ]: No player found')  
                         end 
                 end 
         elseif cmd == 'unwhitelist' or cmd == 'unwl' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if Whitelisted[plr.Name] then 
                                                 Whitelisted[plr.Name] = nil 
                                                 _G.settings.Whitelisted[plr.Name] = nil 
                                                 save() 
                                                 log('[ ✅ ]: Unwhitelisted '..plrName(plr)) 
                                                 notif(' Unwhitelisted '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already unwhitelisted '..plrName(plr))  
                                                 notif(' Already unwhitelisted '..plrName(plr)) 
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot unwhitelist yourself')  
                                         notif('Cannot unwhitelist yourself')  
                                 end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'getwhitelist' or cmd == 'getwl' then 
                 local str = '' 
                 for i, v in pairs(Whitelisted) do 
                         if not i or not v then continue end 
                         local plr = getPlr(i) 
                         if plr then 
                                 local name = plrName(plr) 
                                 if str == '' then str = '· '..name else 
                                         str = str..'\n · '..name 
                                 end 
                         else continue end 
                 end 
                 if str ~= '' then  
                         log('[ 📄 ]: Whitelisted players:\n'..str) 
                         executeCmd('logs')  
                 else  
                         log('[ 📄 ]: No players in the server are whitelisted')  
                         notif('No players in the server are whitelisted')  
                 end 
         elseif cmd == 'rank' or cmd == 'admin' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if not Ranked[plr.Name] then 
                                                 Ranked[plr.Name] = true 
                                                 chat('/w '..plr.Name..' [ ✅ ]: You have been ranked as admin. To view commands, chat '..prefix..'cmds') 
                                                 log('[ ✅ ]: Ranked '..plrName(plr)) 
                                                 notif('Ranked '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already ranked '..plrName(plr))  
                                                 notif('Already ranked '..plrName(plr))  
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot rank yourself')  
                                         notif('Cannot rank yourself')  
                                 end 
                         else  
                                 log('[ ❌ ]: No player found')  
                         end 
                 end 
         elseif cmd == 'unrank' or cmd == 'unadmin' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if Ranked[plr.Name] then 
                                                 Ranked[plr.Name] = nil 
                                                 chat('/w '..plr.Name..' [ ⚠️ ]: Your rank for admin commands has been revoked, you can no longer use admin commands') 
                                                 log('[ ✅ ]: Removed rank from '..plrName(plr)) 
                                                 notif(' Removed rank from '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already removed rank from '..plrName(plr))  
                                                 notif(' Already removed rank from '..plrName(plr)) 
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot remove rank from yourself')  
                                         notif('Cannot remove rank from yourself')  
                                 end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'permarank' or cmd == 'permaadmin' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if not _G.settings.Ranked[plr.Name] then 
                                                 Ranked[plr.Name] = true 
                                                 _G.settings.Ranked[plr.Name] = true 
                                                 save() 
                                                 chat('/w '..plr.Name..' [ ✅ ]: You have been ranked as admin. To view commands, chat '..prefix..'cmds') 
                                                 log('[ ✅ ]: Perma ranked '..plrName(plr)) 
                                                 notif('Perma ranked '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already perma ranked '..plrName(plr))  
                                                 notif('Already perma ranked '..plrName(plr))  
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot perma rank yourself')  
                                         notif('Cannot perma rank yourself')  
                                 end 
                         else  
                                 log('[ ❌ ]: No player found')  
                         end 
                 end 
         elseif cmd == 'unpermarank' or cmd == 'unpermaadmin' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if _G.settings.Ranked[plr.Name] then 
                                                 Ranked[plr.Name] = nil 
                                                 _G.settings.Ranked[plr.Name] = nil 
                                                 save() 
                                                 chat('/w '..plr.Name..' [ ⚠️ ]: Your rank for admin commands has been revoked, you can no longer use admin commands') 
                                                 log('[ ✅ ]: Removed perma rank from '..plrName(plr)) 
                                                 notif(' Removed perma rank from '..plrName(plr)) 
                                         else  
                                                 log('[ ❌ ]: Already removed perma rank from '..plrName(plr))  
                                                 notif(' Already removed perma rank from '..plrName(plr)) 
                                         end 
                                 else  
                                         log('[ ❌ ]: Cannot remove perma rank from yourself')  
                                         notif('Cannot remove perma rank from yourself')  
                                 end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'ranked' or cmd == 'admins' or cmd == 'getranked' or cmd == 'getadmins' then 
                 local str = '' 
                 for i, v in pairs(Ranked) do 
                         if not i or not v then continue end 
                         local plr = getPlr(i) 
                         if plr then 
                                 local name = plrName(plr) 
                                 if str == '' then str = '· '..name else 
                                         str = str..'\n · '..name 
                                 end 
                                 if _G.settings.Ranked[plr.Name] then 
                                         str = str..' (Permanent)' 
                                 end 
                         else continue end 
                 end 
                 if str ~= '' then  
                         log('[ 📄 ]: Ranked players:\n'..str) 
                         executeCmd('logs')  
                 else  
                         log('[ 📄 ]: No players in the server are ranked')  
                         notif('No players in the server are ranked')  
                 end 
         elseif cmd == 'tase' or cmd == 'taze' then 
                 if args[1] then 
                         local teamToTase = nil 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 teamToTase = {'Inmates', 'Bright orange'}  
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 teamToTase = {'Criminals', 'Really red'}  
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Bright blue' and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 if not user.Character:FindFirstChild('Taser') and not user.Backpack:FindFirstChild('Taser') then 
                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                         goToCF(position) 
                                         workspace.CurrentCamera.CFrame = camPos 
                                 end 
                                 tasePlrs(plrTable) 
                                 log('[ ✅ ]: Tased all players') 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else  
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                                 Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos 
                                         end 
                                         tasePlr(plr) 
                                         log('[ ✅ ]: Tased '..plrName(plr)) 
                                         if user.TeamColor.Name ~= team then 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                         Remotes.TeamEvent:FireServer(team) 
                                                 else 
                                                         Remotes.loadchar:InvokeServer(nil, team) 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos  
                                                 end 
                                         end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                         if teamToTase and teamToTase ~= nil then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == teamToTase[2] and workspace:FindFirstChild(plr.Name) then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                         goToCF(position) 
                                         workspace.CurrentCamera.CFrame = camPos 
                                 end 
                                 tasePlrs(plrTable) 
                                 log('[ ✅ ]: Tased all '..teamToTase[1]:lower()) 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         end 
                 end 
         elseif cmd == 'looptase' or cmd == 'looptaze' then 
                 if args[1] then 
                         local team = getTeam() 
                         local already 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if not Toggles.LoopTaseInmates then 
                                         Toggles.LoopTaseInmates = true 
                                         log('[ ✅ ]: Enabled loop tasing inmates') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop tasing inmates')  
                                         already = true 
                                 end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if not Toggles.LoopTaseCrims then 
                                         Toggles.LoopTaseCrims = true 
                                         log('[ ✅ ]: Enabled loop tasing criminals') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop tasing criminals')  
                                         already = true 
                                 end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if not Toggles.LoopTaseAll then 
                                         Toggles.LoopTaseAll = true 
                                         log('[ ✅ ]: Enabled loop tasing all players') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop tasing all players')  
                                         already = true 
                                 end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if not LoopTased[plr.UserId] then 
                                                 LoopTased[plr.UserId] = plr 
                                                 log('[ ✅ ]: Loop tasing '..plrName(plr)) 
                                                 repeat 
                                                         if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                                                 local newPos = getPos() 
                                                                 local newCam = getCam() 
                                                                 Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                                 goToCF(newPos) 
                                                                 workspace.CurrentCamera.CFrame = newCam 
                                                         end 
                                                         if not Whitelisted[plr.Name] and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                                 tasePlr(plr) 
                                                         end 
                                                         RunService.Heartbeat:Wait() 
                                                 until LoopTased[plr.UserId] == nil 
                                         else log('[ ❌ ]: Already loop tasing '..plrName(plr)) end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                         if not already then 
                                 if Toggles.LoopTaseInmates then 
                                         repeat 
                                                 if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                                         local newPos = getPos() 
                                                         local newCam = getCam() 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                         goToCF(newPos) 
                                                         workspace.CurrentCamera.CFrame = newCam 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseInmates  
                                 elseif Toggles.LoopTaseCrims then 
                                         repeat 
                                                 if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                                         local newPos = getPos() 
                                                         local newCam = getCam() 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                         goToCF(newPos) 
                                                         workspace.CurrentCamera.CFrame = newCam 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseCrims 
                                 elseif Toggles.LoopTaseAll then 
                                         repeat 
                                                 if not plr.Character:FindFirstChild('Taser') and not plr.Backpack:FindFirstChild('Taser') then 
                                                         local newPos = getPos() 
                                                         local newCam = getCam() 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                         goToCF(newPos) 
                                                         workspace.CurrentCamera.CFrame = newCam 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Bright blue' and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseAll 
                                 end 
                         end 
                 end 
         elseif cmd == 'unlooptase' or cmd == 'unlooptaze' then 
                 if args[1] then 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if Toggles.LoopTaseInmates then 
                                         Toggles.LoopTaseInmates = false 
                                         log('[ ✅ ]: Disabled loop tasing inmates') 
                                 else log('[ ❌ ]: Already disabled loop tasing inmates') end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if Toggles.LoopTaseCrims then 
                                         Toggles.LoopTaseCrims = false 
                                         log('[ ✅ ]: Disabled loop tasing criminals') 
                                 else log('[ ❌ ]: Already disabled loop tasing criminals') end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if Toggles.LoopTaseAll then 
                                         Toggles.LoopTaseAll = false 
                                         log('[ ✅ ]: Disabled loop tasing all players') 
                                 else log('[ ❌ ]: Already disabled loop tasing all players') end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if LoopTased[plr.UserId] then 
                                                 LoopTased[plr.UserId] = nil 
                                                 log('[ ✅ ]: Disabled loop tasing '..plrName(plr)) 
                                         else log('[ ❌ ]: Already disabled loop tasing '..plrName(plr)) end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'clearlooptase' or cmd == 'clearlooptaze' or cmd == 'clearlooptases' or cmd == 'clearlooptazes' then 
                 Toggles.LoopTaseAll = false 
                 Toggles.LoopTaseInmates = false 
                 Toggles.LoopTaseCrims = false 
                 LoopTased = {} 
                 log('[ ✅ ]: Cleared loop tasing all players') 
                 notif('Cleared loop tasing all players')  
         elseif cmd == 'arrest' then 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' or args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 local arrested = {} 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Really red' then 
                                                 arrestPlr(plr) 
                                                 arrested[#arrested+1] = plr 
                                         else continue end 
                                 end 
                                 if #arrested > 0 then log('[ ✅ ]: Arrested all players') 
                                 else log('[ ❌ ]: No players were arrested') end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr.TeamColor.Name ~= 'Really red' then 
                                                 log('[ 🔄 ]: Attempting to arrest '..plrName(plr)) 
                                                 repeat  
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until plr.TeamColor.Name == 'Really red' 
                                         end 
                                         arrestPlr(plr) 
                                         log('[ ✅ ]: Arrested '..plrName(plr)) 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 else log('[ ❌ ]: No player found') end 
         elseif cmd == 'spamarrest' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if SpamArresting ~= plr then 
                                                 SpamArresting = plr 
                                                 log('[ ✅ ]: Spam arresting '..plrName(plr)) 
                                                 if plr.TeamColor.Name ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until plr.TeamColor.Name == 'Really red' or SpamArresting ~= plr 
                                                 end 
                                                 repeat 
                                                         goTo(plr) 
                                                         for i = 1,100 do 
                                                                 spawn(function() 
                                                                         spamArrest(plr, math.huge) 
                                                                 end) 
                                                         end 
                                                         RunService.Heartbeat:Wait() 
                                                 until not Players:FindFirstChild(plr.Name) or not workspace[plr.Name] or plr.TeamColor.Name ~= 'Really red' or SpamArresting ~= plr 
                                                 Remotes.loadchar:InvokeServer() 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos 
                                         else log('[ ❌ ]: Already spam arresting '..plrName(plr)) end 
                                 else log("[ ❌ ]: You can't spam arrest yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'unspamarrest' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if SpamArresting then 
                                         if SpamArresting == plr then 
                                                 SpamArresting = nil 
                                                 log('[ ✅ ]: Disabled loop spam arresting '..plrName(plr)) 
                                         else log('[ ❌ ]: You are not spam arresting '..plrName(plr)) end 
                                 else log('[ ❌ ]: You are not spam arresting '..plrName(plr)) end 
                         else log('[ ❌ ]: No player found') end 
                 else  
                         if SpamArresting then 
                                 SpamArresting = nil 
                                 log('[ ✅ ]: Disabled spam arresting') 
                         else log('[ ❌ ]: You are not spam arresting anyone') end 
                 end 
         elseif cmd == 'clickarrest' then 
                 if not Toggles.ClickArrest then 
                         Toggles.ClickArrest = true 
                         log('[ ✅ ]: Enabled click arrest') 
                         notif('Enabled click arrest') 
                         local func 
                         func = Mouse.Button1Down:Connect(function() 
                                 if not Toggles.ClickArrest then func:Disconnect() return end 
                                 local hit = Mouse.Target 
                                 if hit:IsA('BasePart') and hit.Parent and getPlr(hit.Parent.Name) then 
                                         local plr = getPlr(hit.Parent.Name)  
                                         if not Whitelisted[plr.Name] and plr ~= user and not hit.Parent:FindFirstChild('handcuffedGui') then 
                                                 Remotes.arrest:InvokeServer(hit.Parent.Head) 
                                         end 
                                 else return end 
                         end) 
                 else  
                         log('[ ❌ ]: Already enabled click arrest')  
                         notif('Already enabled click arrest') 
                 end 
         elseif cmd == 'unclickarrest' or cmd == 'noclickarrest' then 
                 if Toggles.ClickArrest then 
                         Toggles.ClickArrest = false 
                         log('[ ✅ ]: Disabled click arrest') 
                 else log('[ ❌ ]: Already disabled click arrest') end 
         elseif cmd == 'arrestaura' then 
                 if not Toggles.ArrestAura then 
                         log('[ ✅ ]: Enabled arrest aura') 
                         Toggles.ArrestAura = true 
                         repeat 
                                 for i, v in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[v.Name] and v ~= user and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Head') and not v.Character:FindFirstChild('handcuffedGui') then 
                                                 local Distance = (v.Character:FindFirstChildOfClass('Part').Position - user.Character:FindFirstChildOfClass('Part').Position).magnitude 
                                                 if Distance <= 10 and Toggles.ArrestAura then 
                                                         Remotes.arrest:InvokeServer(workspace[v.Name].Head) 
                                                 end 
                                         else continue end 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.ArrestAura 
                 else log('[ ❌ ]: Already enabled arrest aura') end 
         elseif cmd == 'unarrestaura' or cmd == 'noarrestaura' then 
                 if Toggles.ArrestAura then 
                         log('[ ✅ ]: Disabled arrest aura') 
                         Toggles.ArrestAura = false 
                 else log('[ ❌ ]: Already disabled arrest aura') end 
         elseif cmd == 'killtool' or cmd == 'killgun' or cmd == 'killweapon' then 
                 if args[1] then 
                         local err 
                         if args[1] == 'ak' or args[1] == 'ak47' or args[1] == 'ak-47' then 
                                 if KillTool ~= 'AK-47' then KillTool = 'AK-47'  
                                 else  
                                         log('[ ❌ ]: Already set'..KillTool..' as kill tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'm4' or args[1] == 'm4a1' then 
                                 if KillTool ~= 'M4A1' then KillTool = 'M4A1'  
                                 else  
                                         log('[ ❌ ]: Already set'..KillTool..' as kill tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'm9' or args[1] == 'pistol' then 
                                 if KillTool ~= 'M9' then KillTool = 'M9'  
                                 else  
                                         log('[ ❌ ]: Already set'..KillTool..' as kill tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'remington' or args[1] == 'reming' or args[1] == 'shotgun' or args[1] == 'remington870' then 
                                 if KillTool ~= 'Remington 870' then KillTool = 'Remington 870'  
                                 else  
                                         log('[ ❌ ]: Already set'..KillTool..' as kill tool') 
                                         err = true 
                                 end 
                         else  
                                 log('[ ❌ ]: Input a valid gun') 
                                 err = true 
                         end 
                         if not err then 
                                 _G.settings.KillTool = KillTool 
                                 save() 
                                 log('[ ✅ ]: Set '..KillTool..' as kill tool') 
                         end 
                 else  
                         log('[ 📄 ]: '..KillTool..' is the kill tool') 
                         notif(KillTool..' is the kill tool') 
                 end 
         elseif cmd == 'kill' then 
                 local team = getTeam() 
                 if args[1] then 
                         local teamToKill = nil 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 teamToKill = {'Guards', 'Bright blue'}  
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 teamToKill = {'Inmates', 'Bright orange'}  
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 teamToKill = {'Criminals', 'Really red'}  
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Really red' then 
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 end 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= user and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 log('[ ✅ ]: Killed all players') 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 log('[ ✅ ]: Killed all enemies') 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if team == plr.TeamColor.Name then 
                                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                         end 
                                         killPlr(plr) 
                                         log('[ ✅ ]: Killed '..plrName(plr)) 
                                         notif('Killed '..plrName(plr)) 
                                         if user.TeamColor.Name ~= team then 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                         Remotes.TeamEvent:FireServer(team) 
                                                 else 
                                                         Remotes.loadchar:InvokeServer(nil, team) 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos  
                                                 end 
                                         end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                         if teamToKill and teamToKill ~= nil then 
                                 if team == teamToKill[2] then 
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 end 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == teamToKill[2] and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 log('[ ✅ ]: Killed all '..teamToKill[1]:lower()) 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         end 
                 end 
         elseif cmd == 'loopkill' or cmd == 'lkill' or cmd == 'lk' then 
                 if args[1] then 
                         local already 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if not Toggles.LoopKillGuards then 
                                         Toggles.LoopKillGuards = true 
                                         log('[ ✅ ]: Enabled loop killing guards') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop killing guards') 
                                         already = true 
                                 end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if not Toggles.LoopKillInmates then 
                                         Toggles.LoopKillInmates = true 
                                         log('[ ✅ ]: Enabled loop killing inmates') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop killing inmates')  
                                         already = true 
                                 end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if not Toggles.LoopKillCrims then 
                                         Toggles.LoopKillCrims = true 
                                         log('[ ✅ ]: Enabled loop killing criminals') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop killing criminals')  
                                         already = true 
                                 end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if not Toggles.LoopKillAll then 
                                         Toggles.LoopKillAll = true 
                                         log('[ ✅ ]: Enabled loop killing all players') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop killing all players')  
                                         already = true 
                                 end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if not Toggles.LoopKillEnemies then 
                                         Toggles.LoopKillEnemies = true 
                                         log('[ ✅ ]: Enabled loop killing enemies') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop killing enemies')  
                                         already = true 
                                 end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if not LoopKilled[plr.UserId] then 
                                                 LoopKilled[plr.UserId] = plr 
                                                 log('[ ✅ ]: Loop killing '..plrName(plr)) 
                                                 repeat 
                                                         if workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 local team = getTeam() 
                                                                 if team == plr.TeamColor.Name then 
                                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                                 end 
                                                                 killPlr(plr) 
                                                         end 
                                                         RunService.Heartbeat:Wait() 
                                                 until LoopKilled[plr.UserId] == nil 
                                         else log('[ ❌ ]: Already loop killing '..plrName(plr)) end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                         if not already then 
                                 if Toggles.LoopKillGuards then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright blue' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Bright blue' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillGuards 
                                 elseif Toggles.LoopKillInmates then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright orange' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillInmates  
                                 elseif Toggles.LoopKillCrims then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Really red' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillCrims 
                                 elseif Toggles.LoopKillAll then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Really red' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillAll 
                                 elseif Toggles.LoopKillEnemies then 
                                         repeat 
                                                 local team = getTeam() 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillEnemies 
                                 end 
                         end 
                 end 
         elseif cmd == 'unloopkill' or cmd == 'unlkill' or cmd == 'unlk' then 
                 if args[1] then 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if Toggles.LoopKillGuards then 
                                         Toggles.LoopKillGuards = false 
                                         log('[ ✅ ]: Disabled loop killing guards') 
                                 else log('[ ❌ ]: Already disabled loop killing guards') end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if Toggles.LoopKillInmates then 
                                         Toggles.LoopKillInmates = false 
                                         log('[ ✅ ]: Disabled loop killing inmates') 
                                 else log('[ ❌ ]: Already disabled loop killing inmates') end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if Toggles.LoopKillCrims then 
                                         Toggles.LoopKillCrims = false 
                                         log('[ ✅ ]: Disabled loop killing criminals') 
                                 else log('[ ❌ ]: Already disabled loop killing criminals') end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if Toggles.LoopKillAll then 
                                         Toggles.LoopKillAll = false 
                                         log('[ ✅ ]: Disabled loop killing all players') 
                                 else log('[ ❌ ]: Already disabled loop killing all players') end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if Toggles.LoopKillEnemies then 
                                         Toggles.LoopKillEnemies = false 
                                         log('[ ✅ ]: Disabled loop killing enemies') 
                                 else log('[ ❌ ]: Already disabled loop killing enemies') end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if LoopKilled[plr.UserId] then 
                                                 LoopKilled[plr.UserId] = nil 
                                                 log('[ ✅ ]: Disabled loop killing '..plrName(plr)) 
                                         else log('[ ❌ ]: Already disabled loop killing '..plrName(plr)) end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'clearloopkills' or cmd == 'clearloopkill' or cmd == 'clearlks' or cmd == 'clearlk' then 
                 Toggles.LoopKillAll = false 
                 Toggles.LoopKillGuards = false 
                 Toggles.LoopKillInmates = false 
                 Toggles.LoopKillCrims = false 
                 Toggles.LoopKillEnemies = false 
                 LoopKilled = {} 
                 log('[ ✅ ]: Cleared loop killing all players') 
                 notif('Cleared loop killing all players')  
         elseif cmd == 'clickkill' then 
                 if not Toggles.ClickKill then 
                         log('[ ✅ ]: Enabled click kill') 
                         Toggles.ClickKill = true 
                         local func 
                         func = Mouse.Button1Down:Connect(function() 
                                 if not Toggles.ClickKill then func:Disconnect() return end 
                                 local hit = Mouse.Target 
                                 if hit:IsA('BasePart') and hit.Parent and getPlr(hit.Parent.Name) then 
                                         local plr = getPlr(hit.Parent.Name)  
                                         if not Whitelisted[plr.Name] and hit.Parent:FindFirstChild('Humanoid') and hit.Parent.Humanoid.Health > 0 then 
                                                 local team = getTeam() 
                                                 if team == plr.TeamColor.Name then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 killPlr(plr) 
                                                 if user.TeamColor.Name ~= team then 
                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                 Remotes.TeamEvent:FireServer(team) 
                                                         else 
                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                 goToCF(position) 
                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                         end 
                                                 end 
                                         end 
                                 else return end 
                         end) 
                 else log('[ ❌ ]: Already enabled clickill') end 
         elseif cmd == 'noclickkill' or cmd == 'unclickkill' then 
                 if Toggles.ClickKill then 
                         log('[ ✅ ]: Disabled click kill') 
                         Toggles.ClickKill = false 
                 else log('[ ❌ ]: Already disabled click kill') end  
         elseif cmd == 'killaura' or cmd == 'aura' then 
                 local range = 10 
                 local plr 
                 local Return 
                 if args[1] then 
                         if tonumber(args[1]) then  
                                 range = tonumber(args[1])  
                                 if Toggles.KillAura then 
                                         if Toggles.KillAura.Range ~= range then 
                                                 Return = true 
                                                 Toggles.KillAura = {Toggled = true, Range = range} 
                                                 log('[ ✅ ]: Set aura range to '..range) 
                                         else  
                                                 Return = true 
                                                 log('[ ❌ ]: Already set aura range to'..range) 
                                         end 
                                 end 
                                 if Return then return end 
  
                                 if range < 1 or range > 20 then 
                                         Return = true 
                                         log('[ ❌ ]: Range must be between 1-20') 
                                 end 
                         else  
                                 local findPlr = getPlr(args[1]) 
                                 if findPlr then 
                                         if findPlr ~= user then plr = findPlr end 
                                 else 
                                         Return = true 
                                         log('[ ❌ ]: No player found') 
                                 end 
                                 if Return then return end 
  
                                 if args[2] then 
                                         if tonumber(args[2]) then 
                                                 range = tonumber(args[2])  
                                                 if Aura[plr.UserId] then 
                                                         if Aura[plr.UserId].Range ~= range then 
                                                                 Return = true 
                                                                 Aura[plr.UserId] = {Player = plr, Range = range} 
                                                                 log('[ ✅ ]: Set aura range for '..plr.Name..' to '..range) 
                                                         else  
                                                                 Return = true 
                                                                 log('[ ❌ ]: Already set aura range for '..plr.Name..' to '..range) 
                                                         end 
                                                 end 
                                                 if Return then return end 
                                         else  
                                                 Return = true 
                                                 log('[ ❌ ]: Input a valid range') 
                                         end 
                                 end 
                         end 
                 else  
                         if Toggles.KillAura then 
                                 Return = true 
                                 log('[ ❌ ]: Already enabled kill aura') 
                         end 
                 end 
                 if Return then return end 
  
                 if plr then 
                         Aura[plr.UserId] = {Player = plr, Range = range} 
                         log('[ ✅ ]: Gave aura to '..plr.Name..' (Range: '..range..')') 
                         repeat 
                                 for _, v in pairs(Players:GetPlayers()) do 
                                         pcall(function() 
                                                 if not Whitelisted[v.Name] and v ~= user and v ~= plr and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Humanoid') and workspace[v.Name].Humanoid.Health > 0 then 
                                                         local Distance = (v.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude 
                                                         if Distance <= Aura[plr.UserId].Range then 
                                                                 if team == v.TeamColor.Name then 
                                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                                 end 
                                                                 killPlr(v) 
                                                                 if user.TeamColor.Name ~= team then 
                                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                                 Remotes.TeamEvent:FireServer(team) 
                                                                         else 
                                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                                 goToCF(position) 
                                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                                         end 
                                                                 end 
                                                         end 
                                                 end 
                                         end) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until Aura[plr.UserId] == nil 
                 else 
                         Toggles.KillAura = {Toggled = true, Range = range} 
                         log('[ ✅ ]: Enabled kill aura (Range: '..range..')') 
                         repeat 
                                 for _, v in pairs(Players:GetPlayers()) do 
                                         pcall(function() 
                                                 if not Whitelisted[v.Name] and v ~= user and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Humanoid') and workspace[v.Name].Humanoid.Health > 0 then 
                                                         local Distance = (v.Character.HumanoidRootPart.Position - user.Character.HumanoidRootPart.Position).magnitude 
                                                         if Distance <= Toggles.KillAura.Range then 
                                                                 for i = 1, 15 do 
                                                                         RepStorage.meleeEvent:FireServer(v) 
                                                                 end 
                                                         end 
                                                 end 
                                         end) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.KillAura 
                 end 
         elseif cmd == 'unkillaura' or cmd == 'unaura' or cmd == 'nokillaura' or cmd == 'noaura' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if Aura[plr.UserId] then 
                                         Aura[plr.UserId] = nil 
                                         log('[ ✅ ]: Disabled kill aura from '..plrName(plr)) 
                                 else log('[ ❌ ]: Already disabled kill aura from '..plrName(plr)) end 
                         else log('[ ❌ ]: No player found') end 
                 else 
                         if Toggles.KillAura then 
                                 log('[ ✅ ]: Disabled kill aura') 
                                 Toggles.KillAura = false 
                         else log('[ ❌ ]: Already disabled kill aura') end 
                 end 
         elseif cmd == 'inmate' or cmd == 'inmates' or cmd == 'prisoner' or cmd == 'prisoners' then 
                 local team = getTeam() 
                 if team  ~= 'Bright orange' then 
                         Remotes.TeamEvent:FireServer('Bright orange') 
                         log('[ ✅ ]: Joined inmates team') 
                 else log('[ ❌ ]: Already joined inmates team') end 
         elseif cmd == 'guard' or cmd == 'guards' or cmd == 'police' or cmd == 'cop' or cmd == 'cops' then 
                 local team = getTeam() 
                 if team  ~= 'Bright blue' then 
                         Remotes.TeamEvent:FireServer('Bright blue') 
                         wait(.25) 
                         local newTeam = getTeam() 
                         if newTeam ~= 'Bright blue' then 
                                 log('[ ❌ ]: Cannot join guards team') 
                         else log('[ ✅ ]: Joined guards team') end 
                 else log('[ ❌ ]: Already joined guards team') end 
         elseif cmd == 'criminal' or cmd == 'crim' then 
                 local team = getTeam() 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Medium stone grey' and plr ~= user and plr.TeamColor.Name ~= 'Really red' then 
                                                 repeat  
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or plr.TeamColor.Name == 'Really red' 
                                         else continue end 
                                 end 
                                 log('[ ✅ ]: Made all players criminals') 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr ~= user then 
                                                 if plr.TeamColor.Name ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red' 
                                                         if Players:FindFirstChild(plr.Name) then 
                                                                 log('[ ✅ ]: Made '..plrName(plr)..' a criminal') 
                                                         end 
                                                 else  
                                                         notif(plrName(plr)..' is already a criminal')  
                                                         log('[ ❌ ]: '..plrName(plr)..' is already a criminal')  
                                                 end 
                                         else  
                                                 if team ~= 'Really red' then 
                                                         repeat 
                                                                 local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                                                 if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                                                         goToCF(CF) 
                                                                 end 
                                                                 RunService.Heartbeat:Wait() 
                                                         until getTeam() == 'Really red' 
                                                         goToCF(position) 
                                                         log('[ ✅ ]: Joined criminals team') 
                                                 else log('[ ❌ ]: Already joined criminals team') end 
                                         end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 else 
                         if team  ~= 'Really red' then 
                                 repeat 
                                         local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                         if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                                 goToCF(CF) 
                                         end 
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Really red' 
                                 goToCF(position) 
                                 log('[ ✅ ]: Joined criminals team') 
                         else log('[ ❌ ]: Already joined criminals team') end 
                 end 
         elseif cmd == 'criminals' or cmd == 'crims' then 
                 local team = getTeam() 
                 if team  ~= 'Really red' then 
                         repeat 
                                 local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                 if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                         goToCF(CF) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until getTeam() == 'Really red' 
                         goToCF(position) 
                         log('[ ✅ ]: Joined criminals team') 
                 else log('[ ❌ ]: Already joined criminals team') end 
         elseif cmd == 'neutral' or cmd == 'neutrals' then 
                 local team = getTeam() 
                 if team  ~= 'Medium stone grey' then 
                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                         log('[ ✅ ]: Joined neutral team') 
                 else log('[ ❌ ]: Already joined neutral team') end 
         elseif cmd == 'red' then 
                 local team = getTeam() 
                 if team ~= 'Bright red' then 
                         Remotes.loadchar:InvokeServer(nil, 'Bright red') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom red team') 
                 else log('[ ❌ ]: Already joined custom red team') end 
         elseif cmd == 'orange' then 
                 local team = getTeam() 
                 if team ~= 'Neon orange' then 
                         Remotes.loadchar:InvokeServer(nil, 'Neon orange') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom orange team') 
                 else log('[ ❌ ]: Already joined custom orange team') end 
         elseif cmd == 'yellow' then 
                 local team = getTeam() 
                 if team ~= 'Bright yellow' then 
                         Remotes.loadchar:InvokeServer(nil, 'Bright yellow') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom yellow team') 
                 else log('[ ❌ ]: Already joined custom yellow team') end 
         elseif cmd == 'green' then 
                 local team = getTeam() 
                 if team ~= 'Bright green' then 
                         Remotes.loadchar:InvokeServer(nil, 'Bright green') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom green team') 
                 else log('[ ❌ ]: Already joined custom green team') end 
         elseif cmd == 'blue' then 
                 local team = getTeam() 
                 if team ~= 'Deep blue' then 
                         Remotes.loadchar:InvokeServer(nil, 'Deep blue') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom blue team') 
                 else log('[ ❌ ]: Already joined custom blue team') end 
         elseif cmd == 'purple' then 
                 local team = getTeam() 
                 if team ~= 'Royal purple' then 
                         Remotes.loadchar:InvokeServer(nil, 'Royal purple') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom purple team') 
                 else log('[ ❌ ]: Already joined custom purple team') end 
         elseif cmd == 'pink' then 
                 local team = getTeam() 
                 if team ~= 'Hot pink' then 
                         Remotes.loadchar:InvokeServer(nil, 'Hot pink') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom pink team') 
                 else log('[ ❌ ]: Already joined custom pink team') end 
         elseif cmd == 'white' then 
                 local team = getTeam() 
                 if team ~= 'White' then 
                         Remotes.loadchar:InvokeServer(nil, 'White') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom white team') 
                 else log('[ ❌ ]: Already joined custom white team') end 
         elseif cmd == 'grey' or cmd == 'gray' then 
                 local team = getTeam() 
                 if team ~= 'Ghost grey' then 
                         Remotes.loadchar:InvokeServer(nil, 'Ghost grey') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom grey team') 
                 else log('[ ❌ ]: Already joined custom grey team') end 
         elseif cmd == 'brown' then 
                 local team = getTeam() 
                 if team ~= 'Brown' then 
                         Remotes.loadchar:InvokeServer(nil, 'Brown') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom brown team') 
                 else log('[ ❌ ]: Already joined custom brown team') end 
         elseif cmd == 'black' then 
                 local team = getTeam() 
                 if team ~= 'Brown' then 
                         Remotes.loadchar:InvokeServer(nil, 'Really black') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Joined custom black team') 
                 else log('[ ❌ ]: Already joined custom black team') end 
         elseif cmd == 'makecriminal' or cmd == 'makecrim' then 
                 local team = getTeam() 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 log('[ ✅ ]: Making all players criminals') 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Medium stone grey' and plr ~= user and plr.TeamColor.Name ~= 'Really red' then 
                                                 repeat 
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or plr.TeamColor.Name == 'Really red' 
                                         else continue end 
                                 end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr ~= user then 
                                                 if plr.TeamColor.Name ~= 'Really red' then 
                                                         repeat 
                                                                 bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red' 
                                                         if Players:FindFirstChild(plr.Name) then 
                                                                 log('[ ✅ ]: Made '..plrName(plr)..' a criminal') 
                                                         end 
                                                 else  
                                                         notif(plrName(plr)..' is already a criminal')  
                                                         log('[ ❌ ]: '..plrName(plr)..' is already a criminal')  
                                                 end 
                                         else  
                                                 if team ~= 'Really red' then 
                                                         if team == 'Bright orange' then 
                                                                 repeat 
                                                                         local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                                                         if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                                                                 goToCF(CF) 
                                                                         end 
                                                                         RunService.Heartbeat:Wait() 
                                                                 until getTeam() == 'Really red' 
                                                                 goToCF(position) 
                                                         else 
                                                                 Remotes.loadchar:InvokeServer(nil, 'Really red') 
                                                                 goToCF(position) 
                                                                 workspace.CurrentCamera.CFrame = camPos 
                                                         end 
                                                         log('[ ✅ ]: Joined criminals team') 
                                                 else log('[ ❌ ]: Already joined criminals team') end 
                                         end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'lag' then 
                 if args[1] then 
                         if typeof(tonumber(args[1])) == 'number' then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) 
                                 local tool = user.Character:FindFirstChild('Remington 870') or user.Backpack:FindFirstChild('Remington 870') 
                                 Toggles.Lag = true 
                                 log('[ ✅ ]: Lagging server for '..args[1]..' seconds') 
                                 for i = 1, (tonumber(args[1])*3) do 
                                         if not Toggles.Lag then break end 
                                         local event = { 
                                                 [1] = { 
                                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                                         ['Distance'] = 0,  
                                                         ['Cframe'] = CFrame.new(),  
                                                         ['Hit'] = workspace[user.Name].Head 
                                                 } 
                                         } 
                                         RepStorage.ShootEvent:FireServer(event, tool) 
                                 end 
                         else log('[ ❌ ]: Input a valid duration') end 
                 else log('[ ❌ ]: Input a valid duration') end 
         elseif cmd == 'unlag' then 
                 if Toggles.Lag then 
                         log('[ ✅ ]: Stopping lag') 
                         Toggles.Lag = false 
                         local tool = user.Character:FindFirstChild('Remington 870') or user.Backpack:FindFirstChild('Remington 870') 
                         tool.Handle:Destroy() 
                         tool.Parent = user.Character 
                         tool:Destroy() 
                 else log('[ ❌ ]: Already stopping lag') end 
         elseif cmd == 'crash' or cmd == 'crashserver' then 
                 if not Toggles.CrashServer then 
                         log('[ ✅ ]: Crashing server') 
                         Toggles.CrashServer = true 
                         local event = { 
                                 [1] = { 
                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                         ['Distance'] = 0,  
                                         ['Cframe'] = CFrame.new(),  
                                         ['Hit'] = workspace[user.Name].Head 
                                 } 
                         } 
                         repeat  
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) 
                                 local tool = user.Character:FindFirstChild('Remington 870') or user.Backpack:FindFirstChild('Remington 870') 
                                 for i = 1, 100 do 
                                         spawn(function() 
                                                 event[#event+1] = { 
                                                         ['RayObject'] = Ray.new(Vector3.new(), Vector3.new()),  
                                                         ['Distance'] = 0,  
                                                         ['Cframe'] = CFrame.new(),  
                                                         ['Hit'] = workspace[user.Name].Head 
                                                 } 
                                                 RunService.Heartbeat:Wait() 
                                                 RepStorage.ShootEvent:FireServer(event, tool) 
                                         end) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.CrashServer 
                 else log('[ ❌ ]: Already crashing server') end 
         elseif cmd == 'uncrash' or cmd == 'uncrashserver' then 
                 if Toggles.CrashServer then 
                         log('[ ✅ ]: Uncrashing server') 
                         Toggles.CrashServer = false 
                         local tool = user.Character:FindFirstChild('Remington 870') or user.Backpack:FindFirstChild('Remington 870') 
                         tool.Handle:Destroy() 
                         tool.Parent = user.Character 
                         tool:Destroy() 
                 else log('[ ❌ ]: Already uncrashing server') end 
         elseif cmd == 'dropfps' or cmd == 'spikefps' then 
                 if not Toggles.DropFPS then 
                         if SWAT then 
                                 log('[ ✅ ]: FPS spiking all players') 
                                 Toggles.DropFPS = true 
                                 repeat 
                                         local team = getTeam() 
                                         if team ~= 'Bright blue' then 
                                                 log('[ 🔄 ]: Switching to guard team, please wait...') 
                                                 repeat 
                                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                                         RunService.Heartbeat:Wait() 
                                                 until user.TeamColor.Name  == 'Bright blue' 
                                         end 
                                         spawn(function() 
                                                 for i = 1,100 do 
                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP) 
                                                 end 
                                         end) 
                                         RunService.Heartbeat:Wait() 
                                 until not Toggles.DropFPS 
                         else log('[ ❌ ]: You need the SWAT gamepass to use this command') end 
                 else log('[ ❌ ]: Already FPS spiking all players') end 
         elseif cmd == 'undropfps' or cmd == 'unspikefps ' then 
                 if Toggles.DropFPS then 
                         log('[ ✅ ]: Disabled FPS spiking all players') 
                         Toggles.DropFPS = false 
                         repeat 
                                 Remotes.loadchar:InvokeServer() 
                                 RunService.Heartbeat:Wait() 
                         until not workspace[user.Name]:FindFirstChild('vest')  
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                 else log('[ ❌ ]: Already disabled FPS spiking all players') end 
         elseif cmd == 'infstamina' then 
                 if not Toggles.InfStamina then 
                         local shitexecutor 
                         local getgcollector = getgc or debug.getregistry 
                         local setupvalue = debug.setupvalue or setupvalue or setupval 
                         local getupvalues = debug.getupvalues or getupvalues or getupvals 
                         for _, v in next, {getgcollector, setupvalue, getupvalues} do 
                                 if typeof(v) ~= 'function' then 
                                         shitexecutor = true 
                                         log("[ ❌ ]: Your executor doesn't support this command") 
                                         break 
                                 end 
                         end 
                         if not shitexecutor then 
                                 Toggles.InfStamina = true 
                                 log('[ ✅ ]: Enabled infinite stamina') 
                                 infStamina() 
                         end 
                 else log('[ ❌ ]: Already enabled infinite stamina') end 
         elseif cmd == 'uninfstamina' or cmd == 'noinfstamina' then 
                 if Toggles.InfStamina then 
                         Toggles.InfStamina = false 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         log('[ ✅ ]: Disabled infinite stamina') 
                 else log('[ ❌ ]: Already disabled infinite stamina') end 
         elseif cmd == 'earbang' or cmd == 'earrape' then 
                 local intensity = 5 
                 if args[1] then 
                         if not tonumber(args[1]) then 
                                 intensity = nil 
                                 log('[ ❌ ]: Input a valid number')  
                         else intensity = tonumber(args[1]) end 
                 end 
                 if not intensity then return end 
                 if not Toggles.Earbang then 
                         Toggles.Earbang = {true, intensity} 
                         log('[ ✅ ]: Enabled earbang (Intensity level: '..intensity..')') 
                         repeat 
                                 for _ ,plr in pairs(Players:GetPlayers()) do 
                                         if not Toggles.Earbang then break end 
                                         if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) or workspace[plr.Name]:FindFirstChild('Head') then 
                                                 local h = plr.Character.Head 
                                                 local s = workspace['Prison_guardspawn'].spawn.Sound 
                                                 createSound(s, h, Toggles.Earbang[2]) 
                                         end 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.Earbang 
                 else 
                         if args[1] then 
                                 if not tonumber(args[1]) then 
                                         intensity = nil 
                                         log('[ ❌ ]: Input a valid number')  
                                 else  
                                         intensity = tonumber(args[1]) 
                                         if intensity ~= Toggles.Earbang[2] then  
                                                 Toggles.Earbang = {true, intensity} 
                                                 log('[ ✅ ]: Set earbang intensity to '..intensity) 
                                         else log('[ ❌ ]: Already set earbang intensity to'..intensity) end 
                                 end 
                         else log('[ ❌ ]: Already enabled earbang') end 
                 end 
         elseif cmd == 'noearbang' or cmd == 'unearbang' or cmd == 'noearape' or cmd == 'unearrape' then 
                 if Toggles.Earbang then 
                         Toggles.Earbang = false 
                         log('[ ✅ ]: Disabled earbang') 
                 else log('[ ❌ ]: Already disabled earbang') end 
         elseif cmd == 'reset' or cmd == 'oof ' then 
                 user.Character:BreakJoints() 
                 log('[ ✅ ]: Successfully reset') 
         elseif cmd == 'respawn' or cmd == 'res' then 
                 Remotes.loadchar:InvokeServer() 
                 log('[ ✅ ]: Successfully respawned') 
         elseif cmd == 'refresh' or cmd == 're' then 
                 local newPos = getPos() 
                 local newCam = getCam() 
                 Remotes.loadchar:InvokeServer() 
                 goToCF(newPos) 
                 workspace.CurrentCamera.CFrame = newCam 
                 log('[ ✅ ]: Successfully refreshed') 
         elseif cmd == 'autorefresh' or cmd == 'autore' then 
                 if not Toggles.AutoRefresh then 
                         log('[ ✅ ]: Enabled auto refresh') 
                         Toggles.AutoRefresh = true 
                         repeat 
                                 pcall(function() 
                                         if user.Character.Humanoid.Health <= 0 then 
                                                 local newPos = getPos() 
                                                 local newCam = getCam() 
                                                 Remotes.loadchar:InvokeServer() 
                                                 goToCF(newPos) 
                                                 workspace.CurrentCamera.CFrame = newCam 
                                         end 
                                 end) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AutoRefresh 
                 else log('[ ❌ ]: Already enabled auto refresh') end 
         elseif cmd == 'unautorefresh' or cmd == 'unautore' then 
                 if Toggles.AutoRefresh then 
                         log('[ ✅ ]: Disabled auto refresh') 
                         Toggles.AutoRefresh = false 
                 else log('[ ❌ ]: Already disabled auto refresh') end 
         elseif cmd == 'god' or cmd == 'godmode' then 
                 if not user.Character:FindFirstChild('reanimFolder') then 
                         if sethiddenproperty and typeof(sethiddenproperty) == 'function' then 
                                 log('[ 🔄 ]: Enabling god mode, please wait...') 
                                 godMode() 
                         else  
                                 log("[ ❌ ]: Your executor doesn't support this command") 
                         end 
                 else log('[ ❌ ]: Already enabled god mode') end 
         elseif cmd == 'ungod' or cmd == 'ungodmode' then 
                 if user.Character:FindFirstChild('reanimFolder') then 
                         log('[ ✅ ]: Disabled god mode') 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                 else log('[ ❌ ]: Already disabled god mode') end 
         elseif cmd == 'swatgod' or cmd == 'swatgodmode' then 
                 if not Toggles.SwatGodMode then 
                         if SWAT then 
                                 log('[ ✅ ]: Enabled swat god mode') 
                                 Toggles.SwatGodMode = true 
                                 repeat 
                                         if user.TeamColor.Name ~= 'Bright blue' then 
                                                 Remotes.TeamEvent:FireServer('Bright blue') 
                                         end 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP) 
                                         if workspace[user.Name]:FindFirstChild('vest') then workspace[user.Name].vest:Destroy() end 
                                         RunService.Heartbeat:Wait() 
                                 until not Toggles.SwatGodMode 
                         else log('[ ❌ ]: You need the SWAT gamepass to use this command') end 
                 else log('[ ❌ ]: Already enabled swat god mode') end 
         elseif cmd == 'unswatgod' or cmd == 'unswatgodmode' then 
                 if Toggles.SwatGodMode then 
                         Toggles.SwatGodMode = false 
                         log('[ ✅ ]: Disabled swat god mode') 
                 else log('[ ❌ ]: Already disabled swat god mode') end 
         elseif cmd == 'nodaycycle' or cmd == 'alwaysday' then 
                 if not Toggles.AlwaysDay then 
                         log('[ ✅ ]: Disabled day cycle') 
                         Toggles.AlwaysDay = true 
                         local func 
                         func = RunService.RenderStepped:Connect(function() 
                                 if not Toggles.AlwaysDay then func:Disconnect() return end 
                                 Lighting.Brightness = 2 
                                 Lighting.ClockTime = 14 
                                 Lighting.FogEnd = 100000 
                                 Lighting.GlobalShadows = false 
                                 Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128) 
                         end) 
                 else log('[ ❌ ]: Already disabled day cycle') end 
         elseif cmd == 'daycycle' or cmd == 'unalwaysday' then 
                 if Toggles.AlwaysDay then 
                         log('[ ✅ ]: Enabled day cycle') 
                         Toggles.AlwaysDay = false 
                 else log('[ ❌ ]: Already enabled day cycle') end 
         elseif cmd == 'showinventory' or cmd == 'showinv' then 
                 game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true) 
                 log('[ ✅ ]: Showed inventory') 
         elseif cmd == 'autoshowinventory' or cmd == 'autoshowinv' then 
                 if not Toggles.AutoShowInv then 
                         log('[ ✅ ]: Enabled auto show inventory') 
                         Toggles.AutoShowInv = true 
                         repeat 
                                 game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AutoShowInv 
                 else log('[ ❌ ]: Already enabled auto show inventory') end 
         elseif cmd == 'unautoshowinventory' or cmd == 'unautoshowinv' then 
                 if Toggles.AutoShowInv then 
                         log('[ ✅ ]: Disabled auto show inventory') 
                         Toggles.AutoShowInv = false 
                 else log('[ ❌ ]: Already disabled auto show inventory') end 
         elseif cmd == 'view' or cmd == 'spectate' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if Spectating ~= plr then 
                                                 Spectating = plr 
                                                 log('[ ✅ ]: Spectating '..plrName(plr)) 
                                                 local func 
                                                 func = RunService.RenderStepped:Connect(function() 
                                                         if Spectating ~= plr then  
                                                                 func:Disconnect()  
                                                                 workspace.CurrentCamera.CameraSubject = user.Character 
                                                         else  
                                                                 if workspace.CurrentCamera.CameraSubject ~= plr.Character or plr.Character.Humanoid.Health <= 0 then 
                                                                         workspace.CurrentCamera.CameraSubject = plr.Character 
                                                                 end 
                                                         end 
                                                 end) 
                                         else log('[ ❌ ]: Already spectating '..plrName(plr)) end 
                                 else log("[ ❌ ]: You can't spectate yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'unview' or cmd == 'unspectate' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if Spectating then 
                                         if plr == Spectating then 
                                                 Spectating = nil 
                                                 workspace.CurrentCamera.CameraSubject = user.Character 
                                                 log('[ ✅ ]: Stopped spectating '..plrName(plr)) 
                                         else log('[ ❌ ]: You are not spectating '..plrName(plr)) end 
                                 else log('[ ❌ ]: You are not spectating '..plrName(plr)) end 
                         else log('[ ❌ ]: No player found') end 
                 else          
                         if Spectating then 
                                 Spectating = nil 
                                 workspace.CurrentCamera.CameraSubject = user.Character 
                                 log('[ ✅ ]: Stopped spectating') 
                         else log('[ ❌ ]: You are not spectating anyone') end 
                 end 
         elseif cmd == 'goto' or cmd == 'to' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         goTo(plr) 
                                         log('[ ✅ ]: Teleported to '..plrName(plr)) 
                                 else log("[ ❌ ]: You can't teleport to yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'tptool' then 
                 if args[1] then 
                         local err 
                         if args[1] == 'ak' or args[1] == 'ak47' or args[1] == 'ak-47' then 
                                 if TPTool ~= 'AK-47' then TPTool = 'AK-47'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'm4' or args[1] == 'm4a1' then 
                                 if TPTool ~= 'M4A1' then TPTool = 'M4A1'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'm9' or args[1] == 'pistol' then 
                                 if TPTool ~= 'M9' then TPTool = 'M9'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'remington' or args[1] == 'reming' or args[1] == 'shotgun' or args[1] == 'remington870' then 
                                 if TPTool ~= 'Remington 870' then TPTool = 'Remington 870'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'hammer' then 
                                 if TPTool ~= 'Hammer' then TPTool = 'Hammer'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         elseif args[1] == 'crudeknife' or args[1] == 'knife' or args[1] == 'shank'  then 
                                 if TPTool ~= 'Crude Knife' then TPTool = 'Crude Knife'  
                                 else  
                                         log('[ ❌ ]: Already set'..TPTool..' as TP tool') 
                                         err = true 
                                 end 
                         else  
                                 log('[ ❌ ]: Input a valid tool') 
                                 err = true 
                         end 
                         if not err then 
                                 _G.settings.TPTool = TPTool 
                                 save() 
                                 log('[ ✅ ]: Set '..TPTool..' as TP tool') 
                         end 
                 else  
                         log('[ 📄 ]: '..TPTool..' is the TP tool') 
                         notif(TPTool..' is the TP tool') 
                 end 
         elseif cmd == 'bring' then 
                 local teamToBring = nil 
                 if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                         teamToBring = {'Guards', 'Bright blue'}  
                 elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                         teamToBring = {'Inmates', 'Bright orange'}  
                 elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                         teamToBring = {'Criminals', 'Really red'}  
                 elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                         for _, plr in ipairs(Players:GetPlayers()) do 
                                 if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Medium stone grey' and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= user then 
                                         bringPlr(plr, position) 
                                 end 
                         end 
                         log('[ ✅ ]: Brought all players') 
                 elseif args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         bringPlr(plr, position) 
                                         log('[ ✅ ]: Brought '..plrName(plr)) 
                                 else log("[ ❌ ]: You can't bring yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
                 if teamToBring and teamToBring ~= nil then 
                         for _, plr in ipairs(Players:GetPlayers()) do 
                                 if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= user and plr.TeamColor.Name == teamToBring[2] then 
                                         bringPlr(plr, position) 
                                 end 
                         end 
                         log('[ ✅ ]: Brought all '..teamToBring[1]:lower()) 
                 end 
         elseif cmd == 'loopbring' then 
                 if args[1] then 
                         local already 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if not Toggles.LoopBringGuards then 
                                         Toggles.LoopBringGuards = true 
                                         Toggles.LoopBringAll = false 
                                         Toggles.LoopBringInmates = false 
                                         Toggles.LoopBringCrims = false 
                                         Toggles.LoopBringEnemies = false 
                                         Bringing = nil 
                                         log('[ ✅ ]: Enabled loop bringing guards') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop bringing guards') 
                                         already = true 
                                 end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if not Toggles.LoopBringInmates then 
                                         Toggles.LoopBringInmates = true 
                                         Toggles.LoopBringAll = false 
                                         Toggles.LoopBringGuards = false 
                                         Toggles.LoopBringCrims = false 
                                         Toggles.LoopBringEnemies = false 
                                         Bringing = nil 
                                         log('[ ✅ ]: Enabled loop bringing inmates') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop bringing inmates')  
                                         already = true 
                                 end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if not Toggles.LoopBringCrims then 
                                         Toggles.LoopBringCrims = true 
                                         Toggles.LoopBringAll = false 
                                         Toggles.LoopBringGuards = false 
                                         Toggles.LoopBringInmates = false 
                                         Toggles.LoopBringEnemies = false 
                                         Bringing = nil 
                                         log('[ ✅ ]: Enabled loop bringing criminals') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop bringing criminals')  
                                         already = true 
                                 end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if not Toggles.LoopBringAll then 
                                         Toggles.LoopBringAll = true 
                                         Toggles.LoopBringGuards = false 
                                         Toggles.LoopBringInmates = false 
                                         Toggles.LoopBringCrims = false 
                                         Toggles.LoopBringEnemies = false 
                                         Bringing = nil 
                                         log('[ ✅ ]: Enabled loop bringing all players') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop bringing all players')  
                                         already = true 
                                 end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if not Toggles.LoopBringEnemies then 
                                         Toggles.LoopBringEnemies = true 
                                         Toggles.LoopBringAll = false 
                                         Toggles.LoopBringGuards = false 
                                         Toggles.LoopBringInmates = false 
                                         Toggles.LoopBringCrims = false 
                                         Bringing = nil 
                                         log('[ ✅ ]: Enabled loop bringing enemies') 
                                 else  
                                         log('[ ❌ ]: Already enabled loop bringing enemies')  
                                         already = true 
                                 end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr ~= user then 
                                                 if Bringing ~= plr then 
                                                         Bringing = plr 
                                                         Toggles.LoopBringAll = false 
                                                         Toggles.LoopBringGuards = false 
                                                         Toggles.LoopBringInmates = false 
                                                         Toggles.LoopBringCrims = false 
                                                         Toggles.LoopBringEnemies = false 
                                                         log('[ ✅ ]: Loop bringing '..plrName(plr)) 
                                                         repeat 
                                                                 pcall(function() 
                                                                         if getPlr(plr.Name) then 
                                                                                 bringPlr(plr, position) 
                                                                         end 
                                                                 end) 
                                                                 RunService.Heartbeat:Wait() 
                                                         until Bringing ~= plr 
                                                 else log('[ ❌ ]: Already loop bringing '..plrName(plr)) end 
                                         else log("[ ❌ ]: You can't loop bring yourself") end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                         if not already then 
                                 if Toggles.LoopBringGuards then 
                                         repeat 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if Toggles.LoopBringGuards and not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Bright blue' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and (not workspace[plr.Name].Humanoid.Sit) and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 bringPlr(plr, position) 
                                                         end 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until not Toggles.LoopBringGuards 
                                 elseif Toggles.LoopBringInmates then 
                                         repeat 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if Toggles.LoopBringInmates and not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and (not workspace[plr.Name].Humanoid.Sit) and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 bringPlr(plr, position) 
                                                         end 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until not Toggles.LoopBringInmates  
                                 elseif Toggles.LoopBringCrims then 
                                         repeat 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if Toggles.LoopBringCrims and not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and (not workspace[plr.Name].Humanoid.Sit) and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 bringPlr(plr, position) 
                                                         end 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until not Toggles.LoopBringCrims 
                                 elseif Toggles.LoopBringAll then 
                                         repeat 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if Toggles.LoopBringAll and not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name ~= 'Medium stone grey' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and (not workspace[plr.Name].Humanoid.Sit) and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 bringPlr(plr, position) 
                                                         end 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until not Toggles.LoopBringAll 
                                 elseif Toggles.LoopBringEnemies then 
                                         repeat 
                                                 local team = getTeam() 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if Toggles.LoopBringEnemies and not Whitelisted[plr.Name] and plr ~= user and plr.TeamColor.Name ~= team and plr.TeamColor.Name ~= 'Medium stone grey' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and (not workspace[plr.Name].Humanoid.Sit) and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 bringPlr(plr, position) 
                                                         end 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until not Toggles.LoopBringEnemies 
                                 end 
                         end 
                 end 
         elseif cmd == 'unloopbring' then 
                 if args[1] then 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if Toggles.LoopBringGuards then 
                                         Toggles.LoopBringGuards = false 
                                         log('[ ✅ ]: Disabled loop bringing guards') 
                                 else log('[ ❌ ]: Already disabled loop bringing guards') end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if Toggles.LoopBringInmates then 
                                         Toggles.LoopBringInmates = false 
                                         log('[ ✅ ]: Disabled loop bringing inmates') 
                                 else log('[ ❌ ]: Already disabled loop bringing inmates') end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if Toggles.LoopBringCrims then 
                                         Toggles.LoopBringCrims = false 
                                         log('[ ✅ ]: Disabled loop bringing criminals') 
                                 else log('[ ❌ ]: Already disabled loop bringing criminals') end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if Toggles.LoopBringAll then 
                                         Toggles.LoopBringAll = false 
                                         log('[ ✅ ]: Disabled loop bringing all players') 
                                 else log('[ ❌ ]: Already disabled loop bringing all players') end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if Toggles.LoopBringEnemies then 
                                         Toggles.LoopBringEnemies = false 
                                         log('[ ✅ ]: Disabled loop bringing enemies') 
                                 else log('[ ❌ ]: Already disabled loop bringing enemies') end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if Bringing then 
                                                 if Bringing == plr then 
                                                         Bringing = nil 
                                                         log('[ ✅ ]: Disabled loop bringing '..plrName(plr)) 
                                                 else log('[ ❌ ]: You are not loop bringing '..plrName(plr)) end 
                                         else log('[ ❌ ]: You are not loop bringing '..plrName(plr)) end 
                                 else log('[ ❌ ]: No player found') end 
                         end 
                 else  
                         if Toggles.LoopBringEnemies then 
                                 Toggles.LoopBringEnemies = false 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         elseif Toggles.LoopBringCrims then 
                                 Toggles.LoopBringCrims = false 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         elseif Toggles.LoopBringAll then 
                                 Toggles.LoopBringAll = false 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         elseif Toggles.LoopBringGuards then 
                                 Toggles.LoopBringGuards = false 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         elseif Toggles.LoopBringInmates then 
                                 Toggles.LoopBringInmates = false 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         elseif Bringing then 
                                 Bringing = nil 
                                 log('[ ✅ ]: Disabled loop bringing') 
                         else log('[ ❌ ]: Already disabled loop bringing') end 
                 end 
         elseif cmd == 'antibring' then 
                 if not Toggles.AntiBring then 
                         log('[ ✅ ]: Enabled antibring') 
                         Toggles.AntiBring = true 
                         repeat 
                                 pcall(function() 
                                         local arm = user.Character['Right Arm'] 
                                         local hum = user.Character.Humanoid 
                                         if arm:FindFirstChild('RightGrip') and arm.RightGrip:IsA('Weld') then 
                                                 local prt0 = arm.RightGrip.Part1.Parent 
                                                 if prt0:IsA('Tool') then 
                                                         for _, plr in next, Players:GetPlayers() do 
                                                                 if plr ~= user then 
                                                                         local plrArm = plr.Character['Right Arm'] 
                                                                         if plrArm:FindFirstChild('RightGrip') and plrArm.RightGrip:IsA('Weld') then 
                                                                                 local prt1 = plrArm.RightGrip.Part1.Parent 
                                                                                 if prt0 == prt1 then  
                                                                                         arm.RightGrip:Destroy() 
                                                                                         plrArm.RightGrip:Destroy() 
                                                                                         prt0.Handle:Destroy() 
                                                                                         prt0:Destroy() 
                                                                                         hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false) 
                                                                                         hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false) 
                                                                                 end 
                                                                         else continue end 
                                                                 else continue end 
                                                         end 
                                                 end 
                                         end 
                                 end) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AntiBring 
                 else log('[ ❌ ]: Already enabled antibring') end 
         elseif cmd == 'unantibring' or cmd == 'noantibring' then 
                 if Toggles.AntiBring then 
                         log('[ ✅ ]: Disabled antibring') 
                         Toggles.AntiBring = false 
                 else log('[ ❌ ]: Already disabled antibring') end 
         elseif cmd == 'fling' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         flingPlr(plr) 
                                         log('[ ✅ ]: Flinged '..plrName(plr)) 
                                         if user.TeamColor.Name ~= team then 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                         Remotes.TeamEvent:FireServer(team) 
                                                 else 
                                                         Remotes.loadchar:InvokeServer(nil, team) 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos  
                                                 end 
                                         end 
                                 else log("[ ❌ ]: You can't fling yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'loopfling' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         if Flinging ~= plr then 
                                                 Flinging = plr 
                                                 log('[ ✅ ]: Loop flinging '..plrName(plr)) 
                                                 repeat 
                                                         pcall(function()  
                                                                 local char = user.Character 
                                                                 local flingPrt = char.HumanoidRootPart 
                                                                 if flingPrt:FindFirstChildOfClass('AlignPosition') then flingPrt:FindFirstChildOfClass('AlignPosition'):Destroy() end 
                                                                 if flingPrt:FindFirstChildOfClass('AlignOrientation') then flingPrt:FindFirstChildOfClass('AlignOrientation'):Destroy() end 
                                                                 if isDead() then Remotes.loadchar:InvokeServer() end 
                                                                 if not flingPrt:FindFirstChildOfClass('BodyAngularVelocity') then 
                                                                         local bAV = Instance.new('BodyAngularVelocity', flingPrt) 
                                                                         bAV.AngularVelocity = Vector3.new(0,9e9,0) 
                                                                         bAV.MaxTorque=Vector3.new(9e9,9e9,9e9) 
                                                                 end 
                                                                 if char:FindFirstChild('reanimFolder') then 
                                                                         local bP  
                                                                         if not flingPrt:FindFirstChildOfClass('BodyPosition') then 
                                                                                 local bP = Instance.new('BodyPosition', flingPrt) 
                                                                                 bP.P = 9e9 
                                                                                 bP.D = 9e9 
                                                                                 bP.MaxForce=Vector3.new(99999,99999,99999) 
                                                                         else bP = flingPrt:FindFirstChildOfClass('BodyPosition') end 
                                                                         if plr.Character.Humanoid.Health > 0 or plr.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then 
                                                                                 bP.Position = plr.Character.HumanoidRootPart.Position  
                                                                         else  
                                                                                 bP.Position = char.Torso.Position 
                                                                         end 
                                                                 end 
                                                                 if plr.Character.Humanoid.Health > 0 or plr.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then 
                                                                         flingPrt.Position = plr.Character.HumanoidRootPart.Position  
                                                                 else  
                                                                         flingPrt.Position = char.Torso.Position 
                                                                 end 
                                                         end) 
                                                         RunService.Heartbeat:Wait() 
                                                 until Flinging ~= plr 
                                         else log('[ ❌ ]: Already loop flinging '..plrName(plr)) end 
                                 else log("[ ❌ ]: You can't loop fling yourself") end 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'unloopfling' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if Flinging then 
                                         if Flinging == plr then 
                                                 Flinging = nil 
                                                 local flingPrt = user.Character.HumanoidRootPart 
                                                 if flingPrt:FindFirstChildOfClass('BodyAngularVelocity') then flingPrt:FindFirstChildOfClass('BodyAngularVelocity'):Destroy() end 
                                                 if flingPrt:FindFirstChildOfClass('BodyPosition') then flingPrt:FindFirstChildOfClass('BodyPosition'):Destroy() end 
                                                 if not user.Character:FindFirstChild('reanimFolder') then Remotes.loadchar:InvokeServer() end 
                                                 log('[ ✅ ]: Disabled loop flinging '..plrName(plr)) 
                                         else log('[ ❌ ]: You are not loop flinging '..plrName(plr)) end 
                                 else log('[ ❌ ]: You are not loop flinging '..plrName(plr)) end 
                         else log('[ ❌ ]: No player found') end 
                 else  
                         if Flinging then 
                                 Flinging = nil 
                                 log('[ ✅ ]: Disabled loop flinging') 
                         else log('[ ❌ ]: You are not loop flinging anyone') end 
                 end 
         elseif cmd == 'antifling' then 
                 if not Toggles.AntiFling then 
                         log('[ ✅ ]: Enabled antifling') 
                         Toggles.AntiFling = true 
                         repeat 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if plr ~= user then 
                                                 for _, v in pairs(plr.Character:GetChildren()) do 
                                                         if v:IsA('BasePart') and v.RotVelocity.Magnitude >= 60 then 
                                                                 v.CanCollide = false 
                                                                 v.AssemblyAngularVelocity = Vector3.new(0, 0, 0) 
                                                                 v.AssemblyLinearVelocity = Vector3.new(0, 0, 0) 
                                                                 v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0) 
                                                         else continue end 
                                                 end 
                                         else continue end 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AntiFling 
                 else log('[ ❌ ]: Already enabled antifling') end 
         elseif cmd == 'unantifling' or cmd == 'noantifling' then 
                 if Toggles.AntiFling then 
                         log('[ ✅ ]: Disabled antifling') 
                         Toggles.AntiFling = false 
                 else log('[ ❌ ]: Already disabled antifling') end 
         elseif cmd == 'antitaser' or cmd == 'taserbypass' then 
                 if not Toggles.TaserBypass then 
                         local team = getTeam() 
                         if team ~= 'Bright blue' then 
                                 log('[ ✅ ]: Enabled taser bypass') 
                                 Toggles.TaserBypass = true 
                                 repeat 
                                         local animations = user.Character.Humanoid:GetPlayingAnimationTracks() 
                                         for _, v in next, animations do 
                                                 if v.Animation.AnimationId == 'rbxassetid://279227693' or v.Animation.AnimationId == 'rbxassetid://279229192' then 
                                                         getsenv(user.Character.ClientInputHandler).cs.isTazed = false 
                                                         v:Stop() 
                                                         game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true) 
                                                         user.Character.Humanoid.WalkSpeed = 16 
                                                         user.Character.Humanoid.JumpPower = 50 
                                                 else continue end 
                                         end 
                                         RunService.Heartbeat:Wait() 
                                 until not Toggles.TaserBypass 
                         else log("[ ❌ ]: You can't enable taser bypass") end 
                 else log('[ ❌ ]: Already enabled taser bypass') end 
         elseif cmd == 'unantitaser' or cmd == 'untaserbypass' or cmd == 'noantitaser' or cmd == 'notaserbypass' then 
                 if Toggles.TaserBypass then 
                         log('[ ✅ ]: Disabled taser bypass') 
                         Toggles.TaserBypass = false 
                 else log('[ ❌ ]: Already disabled taser bypass') end 
         elseif cmd == 'antishield' or cmd == 'antishields' or cmd == 'noshields' then 
                 if not Toggles.AntiShield then 
                         local team = getTeam() 
                         log('[ ✅ ]: Enabled anti shields') 
                         Toggles.AntiShield = true 
                         repeat 
                                 pcall(function() 
                                         for _, plr in pairs(Players:GetPlayers()) do 
                                                 if plr == user then continue end 
                                                 local folder = plr.Character.Torso:FindFirstChild('ShieldFolder') 
                                                 if folder then 
                                                         local shield = folder:FindFirstChild('shield') 
                                                         shield.Mesh.MeshId = '' 
                                                         shield.Size = Vector3.new(0,0,0) 
                                                 else continue end 
                                         end 
                                 end) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AntiShield 
                 else log('[ ❌ ]: Already enabled anti sheilds') end 
         elseif cmd == 'unantishield' or cmd == 'unantishields' or cmd == 'shields' then 
                 if Toggles.AntiShield then 
                         log('[ ✅ ]: Disabled anti sheilds') 
                         Toggles.AntiShield = false 
                         for _, plr in pairs(Players:GetPlayers()) do 
                                 if plr == user then continue end 
                                 local folder = plr.Character.Torso:FindFirstChild('ShieldFolder') 
                                 if folder then 
                                         local shield = folder:FindFirstChild('shield') 
                                         shield.Mesh.MeshId = 'rbxassetid://82265009' 
                                         shield.Size = Vector3.new(2.6, 4.2, 0.4) 
                                 else continue end 
                         end 
                 else log('[ ❌ ]: Already disabled anti sheilds') end 
         elseif cmd == 'fastpunch' or cmd == 'speedpunch' then 
                 if not Toggles.FastPunch then 
                         log('[ ✅ ]: Enabled fast punching') 
                         Toggles.FastPunch = true 
                         repeat 
                                 if getsenv(user.Character.ClientInputHandler).cs.isFighting ~= false then 
                                         getsenv(user.Character.ClientInputHandler).cs.isFighting = false 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.FastPunch 
                 else log('[ ❌ ]: Already enabled fast punching') end 
         elseif cmd == 'unfastpunch' or cmd == 'unspeedpunch' or cmd == 'slowpunch' or cmd == 'nofastpunch' then 
                 if Toggles.FastPunch then 
                         Toggles.FastPunch = false 
                         log('[ ✅ ]: Disabled fast punching') 
                 else log('[ ❌ ]: Already disabled fast punching') end 
         elseif cmd == 'onepunch' or cmd == 'oneshotpunch' then 
                 if not Toggles.OnePunch then 
                         log('[ ✅ ]: Enabled one punching') 
                         Toggles.OnePunch = true 
                         local func 
                         func = Mouse.KeyDown:connect(function(k) 
                                 if not Toggles.OnePunch then func:Disconnect() return end 
                                 if k:lower() == 'f' and not punchCooldown then 
                                         onePunch() 
                                 end         
                         end) 
                 else log('[ ❌ ]: Already enabled one punching') end 
         elseif cmd == 'unonepunch' or cmd == 'unoneshotpunch' or cmd == 'noonepunch' or cmd == 'nooneshotpunch' then 
                 if Toggles.OnePunch then 
                         Toggles.OnePunch = false 
                         log('[ ✅ ]: Disabled one punching') 
                 else log('[ ❌ ]: Already disabled one punching') end 
         elseif cmd == 'freepunch' then 
                 if not Toggles.FreePunch then 
                         log('[ ✅ ]: Enabled free punching') 
                         Toggles.FreePunch = true 
                         local func 
                         func = Mouse.KeyDown:connect(function(k) 
                                 if not Toggles.FreePunch then func:Disconnect() return end 
                                 if k:lower() == 'f' then 
                                         if getsenv(user.Character.ClientInputHandler).cs.isRunning ~= false then 
                                                 getsenv(user.Character.ClientInputHandler).cs.isRunning = false 
                                                 wait(.1) 
                                                 getsenv(user.Character.ClientInputHandler).cs.isRunning = true 
                                         end 
                                         if getsenv(user.Character.ClientInputHandler).cs.isCrouching ~= false then 
                                                 getsenv(user.Character.ClientInputHandler).cs.isCrouching = false 
                                                 wait(.1) 
                                                 getsenv(user.Character.ClientInputHandler).cs.isCrouching = true 
                                         end 
                                 end                 
                         end) 
                 else log('[ ❌ ]: Already enabled free punching') end 
         elseif cmd == 'unfreepunch' or cmd == 'nofreepunch' then 
                 if Toggles.FreePunch then 
                         Toggles.FreePunch = false 
                         log('[ ✅ ]: Disabled free punching') 
                 else log('[ ❌ ]: Already disabled free punching') end 
         elseif cmd == 'superpunch' or cmd == 'allpunch' then 
                 if not Toggles.OnePunch then 
                         log('[ ✅ ]: Enabled super punching') 
                         Toggles.FastPunch = false 
                         Toggles.FreePunch = false 
                         Toggles.OnePunch = false 
                         Toggles.SuperPunch = true 
                         local func 
                         func = Mouse.KeyDown:connect(function(k) 
                                 if not Toggles.SuperPunch then func:Disconnect() return end 
                                 if k:lower() == 'f' and not punchCooldown then 
                                         onePunch() 
                                         if getsenv(user.Character.ClientInputHandler).cs.isFighting ~= false then 
                                                 getsenv(user.Character.ClientInputHandler).cs.isFighting = false 
                                         end 
                                         if getsenv(user.Character.ClientInputHandler).cs.isRunning ~= false then 
                                                 getsenv(user.Character.ClientInputHandler).cs.isRunning = false 
                                                 wait(.1) 
                                                 getsenv(user.Character.ClientInputHandler).cs.isRunning = true 
                                         end 
                                         if getsenv(user.Character.ClientInputHandler).cs.isCrouching ~= false then 
                                                 getsenv(user.Character.ClientInputHandler).cs.isCrouching = false 
                                                 wait(.1) 
                                                 getsenv(user.Character.ClientInputHandler).cs.isCrouching = true 
                                         end 
                                 end         
                         end) 
                 else log('[ ❌ ]: Already enabled super punching') end 
         elseif cmd == 'unsuperpunch' or cmd == 'nosuperpunch' or cmd == 'unallpunch' or cmd == 'noallpunch' or cmd == 'normalpunch' then 
                 if Toggles.SuperPunch then 
                         Toggles.SuperPunch = false 
                         log('[ ✅ ]: Disabled super punching') 
                 else log('[ ❌ ]: Already disabled super punching') end 
         elseif cmd == 'dropitems' then 
                 if not Toggles.DropItems then 
                         Toggles.DropItems = true 
                         if team ~= 'Bright blue' then 
                                 log('[ 🔄 ]: Switching to guard team, please wait...') 
                                 repeat  
                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                         end 
                         if args[1] then 
                                 local plr = getPlr(args[1]) 
                                 if plr and plr ~= user then 
                                         log('[ ✅ ]: Enabled item dropping on '..plrName(plr)) 
                                         repeat  
                                                 pcall(function() 
                                                         if plr then 
                                                                 user.Character:BreakJoints() 
                                                                 Remotes.loadchar:InvokeServer() 
                                                                 goToCF(plr.Character.HumanoidRootPart.CFrame) 
                                                                 wait(.15) 
                                                         end 
                                                 end) 
                                         until not Toggles.DropItems 
                                 elseif plr and plr == user then 
                                         log('[ ✅ ]: Enabled item dropping') 
                                         repeat  
                                                 user.Character:BreakJoints() 
                                                 Remotes.loadchar:InvokeServer() 
                                                 goToCF(position) 
                                                 wait(.15) 
                                         until not Toggles.DropItems 
                                 else log('[ ❌ ]: No player found') end 
                         else  
                                 log('[ ✅ ]: Enabled item dropping') 
                                 repeat  
                                         user.Character:BreakJoints() 
                                         Remotes.loadchar:InvokeServer() 
                                         goToCF(position) 
                                         wait(.15) 
                                 until not Toggles.DropItems 
                         end 
                 else log('[ ❌ ]: Already enabled item dropping') end 
         elseif cmd == 'undropitems' then 
                 if Toggles.DropItems then 
                         Toggles.DropItems = false 
                         log('[ ✅ ]: Disabled item dropping') 
                 else log('[ ❌ ]: Already disabled item dropping') end 
         elseif cmd == 'food' then 
                 local tools = {'Breakfast', 'Lunch', 'Dinner'} 
                 local toolAvailable 
                 for _,v in pairs(tools) do 
                         if workspace.Prison_ITEMS.giver:FindFirstChild(v) then 
                                 toolAvailable = v 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[v].ITEMPICKUP) 
                                 break 
                         else continue end 
                 end 
                 if toolAvailable then 
                         if args[1] then 
                                 local plr = getPlr(args[1]) 
                                 if plr and plr ~= user then 
                                         local char = user.Character 
                                         char.Humanoid.Name = 'fuck' 
                                         local c = char.fuck:Clone() 
                                         c.Name = 'Humanoid' 
                                         c.Parent = char 
                                         char.fuck:Destroy() 
                                         workspace.CurrentCamera.CameraSubject = char 
                                         char.Animate.Disabled = true 
                                         wait() 
                                         char.Animate.Disabled = false 
                                         char.Humanoid.DisplayDistanceType = 'None' 
                                         local tool = user.Backpack:FindFirstChild(toolAvailable) or user.Character:FindFirstChild(toolAvailable) 
                                         tool.Parent = char 
                                         repeat 
                                                 goTo(plr) 
                                                 RunService.Heartbeat:Wait() 
                                         until not plr or tool.Parent ~= user.Character 
                                         wait(.5) 
                                         goToCF(position) 
                                         Remotes.loadchar:InvokeServer() 
                                         goToCF(position) 
                                         log('[ ✅ ]: Gave'..toolAvailable..' to '..plrName(plr)) 
                                 elseif plr and plr == user then 
                                         if user.Character:FindFirstChild(toolAvailable) or user.Backpack:FindFirstChild(toolAvailable) then  
                                                 log('[ ✅ ]: Obtained '..toolAvailable) 
                                         else log('[ ❌ ]: You already obtained '..toolAvailable) end 
                                 else log('[ ❌ ]: No player found') end 
                         else 
                                 if user.Character:FindFirstChild(toolAvailable) or user.Backpack:FindFirstChild(toolAvailable) then  
                                         log('[ ✅ ]: Obtained '..toolAvailable) 
                                 else log('[ ❌ ]: You already obtained '..toolAvailable) end 
                         end 
                 else log('[ ❌ ]: Failed to obtain a food item') end  
         elseif cmd == 'handcuffs' or cmd == 'cuffs' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if not user.Backpack:FindFirstChild('Handcuffs') and not user.Character:FindFirstChild('Handcuffs') then 
                                         if team ~= 'Bright blue' then 
                                                 log('[ 🔄 ]: Switching to guard team, please wait...') 
                                                 repeat  
                                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                                         RunService.Heartbeat:Wait() 
                                                 until getTeam() == 'Bright blue' 
                                                 Remotes.loadchar:InvokeServer() 
                                         else Remotes.loadchar:InvokeServer() end 
                                 end 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Handcuffs') or user.Character:FindFirstChild('Handcuffs') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                         Remotes.TeamEvent:FireServer(team) 
                                 elseif team == 'Really red' then 
                                         repeat 
                                                 local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                                 if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                                         goToCF(CF) 
                                                 end 
                                                 RunService.Heartbeat:Wait() 
                                         until getTeam() == 'Really red' 
                                 end 
                                 goToCF(position) 
                                 log('[ ✅ ]: Gave handcuffs to '..plrName(plr)) 
                         else log('[ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'key' or cmd == 'keycard' or cmd == 'card' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         log('[ 🔄 ]: Attempting to give key to '..plrName(plr)) 
                                         local position = getPos() 
                                         if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                         else  
                                                 if team ~= 'Bright blue' then 
                                                         log('[ 🔄 ]: Switching to guard team, please wait...') 
                                                         repeat  
                                                                 Remotes.TeamEvent:FireServer('Bright blue')  
                                                                 RunService.Heartbeat:Wait() 
                                                         until getTeam() == 'Bright blue' or not Toggles.FindKey 
                                                 end 
                                                 repeat 
                                                         goToCF(CFrame.new(-365.976562, 84.2401199, 1987.99207)) 
                                                         user.Character:BreakJoints() 
                                                         Remotes.loadchar:InvokeServer() 
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or workspace.Prison_ITEMS.single:FindFirstChild('Key card') 
                                         end 
                                         if plr then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                 local char = user.Character 
                                                 char.Humanoid.Name = 'fuck' 
                                                 local c = char.fuck:Clone() 
                                                 c.Name = 'Humanoid' 
                                                 c.Parent = char 
                                                 char.fuck:Destroy() 
                                                 workspace.CurrentCamera.CameraSubject = char 
                                                 char.Animate.Disabled = true 
                                                 wait() 
                                                 char.Animate.Disabled = false 
                                                 char.Humanoid.DisplayDistanceType = 'None' 
                                                 local tool = user.Backpack:FindFirstChild('Key card') or user.Character:FindFirstChild('Key card') 
                                                 tool.Parent = char 
                                                 repeat 
                                                         goTo(plr) 
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or tool.Parent ~= user.Character 
                                                 wait(.5) 
                                                 goToCF(position) 
                                                 Remotes.loadchar:InvokeServer() 
                                                 goToCF(position) 
                                                 log('[ ✅ ]: Gave key card to '..plrName(plr)) 
                                         else log('[ ❌ ]: Failed to give key card to '..plrName(plr)) end 
                                 else  
                                         if not user.Character:FindFirstChild('Key card') and not user.Backpack:FindFirstChild('Key card') then 
                                                 Toggles.FindKey = true 
                                                 if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                         log('[ ✅ ]: Obtained key card')  
                                                         Toggles.FindKey = false 
                                                 else  
                                                         log('[ 🔄 ]: Switching to guard team, please wait...') 
                                                         if team ~= 'Bright blue' then 
                                                                 repeat 
                                                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                                                         RunService.Heartbeat:Wait() 
                                                                 until getTeam() == 'Bright blue' or not Toggles.FindKey 
                                                         end 
                                                         repeat 
                                                                 goToCF(CFrame.new(-365.976562, 84.2401199, 1987.99207)) 
                                                                 user.Character:BreakJoints() 
                                                                 Remotes.loadchar:InvokeServer() 
                                                                 RunService.Heartbeat:Wait() 
                                                         until workspace.Prison_ITEMS.single:FindFirstChild('Key card') or not Toggles.FindKey 
                                                         if Toggles.FindKey then 
                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                 goToCF(position) 
                                                                 workspace.CurrentCamera.CFrame = camPos 
                                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                                 log('[ ✅ ]: Obtained key card') 
                                                                 Toggles.FindKey = false 
                                                         end 
                                                 end 
                                         else log('[ ❌ ]: You already obtained a key card') end 
                                 end 
                         else log('[ ❌ ]: No player found') end 
                 else  
                         if not Toggles.FindKey then 
                                 if not user.Character:FindFirstChild('Key card') and not user.Backpack:FindFirstChild('Key card') then 
                                         Toggles.FindKey = true 
                                         if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                 log('[ ✅ ]: Obtained key card')  
                                                 Toggles.FindKey = false 
                                         else  
                                                 log('[ 🔄 ]: Switching to guard team, please wait...') 
                                                 if team ~= 'Bright blue' then 
                                                         repeat 
                                                                 Remotes.TeamEvent:FireServer('Bright blue')  
                                                                 RunService.Heartbeat:Wait() 
                                                         until getTeam() == 'Bright blue' or not Toggles.FindKey 
                                                 end 
                                                 repeat 
                                                         goToCF(CFrame.new(-365.976562, 84.2401199, 1987.99207)) 
                                                         user.Character:BreakJoints() 
                                                         Remotes.loadchar:InvokeServer() 
                                                         RunService.Heartbeat:Wait() 
                                                 until workspace.Prison_ITEMS.single:FindFirstChild('Key card') or not Toggles.FindKey 
                                                 if Toggles.FindKey then 
                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                 Remotes.TeamEvent:FireServer(team) 
                                                         else 
                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                 goToCF(position) 
                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                         end 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos 
                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                         log('[ ✅ ]: Obtained key card') 
                                                         Toggles.FindKey = false 
                                                 end 
                                         end 
                                 else log('[ ❌ ]: You already obtained a key card') end 
                         else log('[ ❌ ]: Already finding key card') end 
                 end 
         elseif cmd == 'findkey' or cmd == 'findkeycard' or cmd == 'findcard' then 
                 if not Toggles.FindKey then 
                         if not user.Character:FindFirstChild('Key card') and not user.Backpack:FindFirstChild('Key card') then 
                                 if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                         log('[ ✅ ]: Obtained key card')  
                                 else  
                                         Toggles.FindKey = true 
                                         log('[ 🔄 ]: Finding key card...') 
                                         repeat  
                                                 RunService.Heartbeat:Wait() 
                                         until workspace.Prison_ITEMS.single:FindFirstChild('Key card') 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                         log('[ ✅ ]: Obtained key card') 
                                         Toggles.FindKey = false 
                                 end 
                         else log('[ ❌ ]: You already obtained a key card') end 
                 else log('[ ❌ ]: Already finding key card') end 
         elseif cmd == 'unfindkey' or cmd == 'unfindkeycard' or cmd == 'unfindcard' then 
                 if not Toggles.FindKey then 
                         Toggles.FindKey = false 
                         log('[ ✅ ]: Stopped finding key card') 
                 else log('[ ❌ ]: Already stopped finding key card') end 
         elseif cmd == 'crudeknife' or cmd == 'knife' or cmd == 'shank' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if team ~= 'Bright blue' then 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                                 else  
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                                         Remotes.TeamEvent:FireServer('Bright blue') 
                                 end 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Crude Knife') or user.Character:FindFirstChild('Crude Knife') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 log('[ ✅ ]: Gave knife to '..plrName(plr)) 
                         else log('[ ❌ ]: No player found') end 
                 elseif not user.Character:FindFirstChild('Crude Knife') and not user.Backpack:FindFirstChild('Crude Knife') then 
                         local team = getTeam() 
                         if team ~= 'Bright blue' then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                         else  
                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                                 Remotes.TeamEvent:FireServer('Bright blue') 
                         end 
                         log('[ ✅ ]: Obtained crude knife')  
                 else log('[ ❌ ]: You already obtained a knife') end 
         elseif cmd == 'superknife' or cmd == 'oneshotknife' or cmd == 'supershank' then 
                 local obtained 
                 if not user.Character:FindFirstChild('Crude Knife') and not user.Backpack:FindFirstChild('Crude Knife') then 
                         if team ~= 'Bright blue' then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                         else  
                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                                 Remotes.TeamEvent:FireServer('Bright blue') 
                         end 
                         obtained = true 
                 end 
                 Toggles.SuperKnife = true 
                 if obtained then log('[ ✅ ]: Obtained super knife') else log('[ ✅ ]: Enabled super knife') end 
                 local tool = user.Character:FindFirstChild('Crude Knife') or user.Backpack:FindFirstChild('Crude Knife') 
                 tool.Activated:Connect(function() 
                         if Toggles.SuperKnife and not knifeCooldown then 
                                 local handle = user.Character['Crude Knife'].Handle 
                                 handle.Touched:connect(function(h) 
                                         if Toggles.SuperKnife and not knifeCooldown then 
                                                 if Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= user and workspace[h.Parent.Name].Humanoid.Health > 0 then 
                                                         knifeCooldown = true 
                                                         for i = 1,15 do 
                                                                 RepStorage.meleeEvent:FireServer(Players[h.Parent.Name]) 
                                                         end 
                                                         knifeCooldown = false 
                                                 else knifeCooldown = false end 
                                         end 
                                 end) 
                         end 
                 end) 
         elseif cmd == 'unsuperknife' or cmd == 'unoneshotknife' or cmd == 'unsupershank' or cmd == 'normalknife' then 
                 if not user.Character:FindFirstChild('Crude Knife') and not user.Backpack:FindFirstChild('Crude Knife') then 
                         Toggles.SuperKnife = false 
                         log('[ ❌ ]: Already disabled super knife') 
                 else  
                         if Toggles.SuperKnife then 
                                 Toggles.SuperKnife = false 
                                 log('[ ✅ ]: Disabled super knife') 
                         else log('[ ❌ ]: Already disabled super knife') end 
                 end 
         elseif cmd == 'hammer' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if team ~= 'Bright blue' then 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                                 else  
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                                         Remotes.TeamEvent:FireServer('Bright blue') 
                                 end 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Hammer') or user.Character:FindFirstChild('Hammer') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 log('[ ✅ ]: Gave hammer to '..plrName(plr)) 
                         else log('[ ❌ ]: No player found') end 
                 elseif not user.Character:FindFirstChild('Hammer') and not user.Backpack:FindFirstChild('Hammer') then 
                         local team = getTeam() 
                         if team ~= 'Bright blue' then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                         else  
                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                                 Remotes.TeamEvent:FireServer('Bright blue') 
                         end 
                         log('[ ✅ ]: Obtained a hammer') 
                 else log('[ ❌ ]: You already obtained a hammer') end 
         elseif cmd == 'baseballbat' or cmd == 'bat' then 
                 if not user.Character:FindFirstChild('Bat') and not user.Backpack:FindFirstChild('Bat') then 
                         local tool = Instance.new('Tool') 
                         tool.Name = 'Bat' 
                         tool.GripPos = Vector3.new(0, -1.15, 0) 
                         local handle = Instance.new('Part', tool) 
                         handle.Name = 'Handle' 
                         handle.Size = Vector3.new(0.4, 5, 0.4) 
                         local mesh = Instance.new('SpecialMesh', handle) 
                         mesh.MeshId = 'rbxassetid://1387483758' 
                         local anim = Instance.new('Animation', tool) 
                         anim.AnimationId = 'rbxassetid://218504594' 
                         local track = user.Character.Humanoid.Animator:LoadAnimation(anim) 
                         tool.Parent = user.Backpack 
                         tool.Activated:Connect(function() 
                                 if not batCooldown then 
                                         track:Play() 
                                         handle.Touched:Connect(function(h) 
                                                 if not batCooldown then 
                                                         if Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= user and workspace[h.Parent.Name].Humanoid.Health > 0 then 
                                                                 batCooldown = true 
                                                                 for i = 1,15 do 
                                                                         RepStorage.meleeEvent:FireServer(Players[h.Parent.Name]) 
                                                                 end 
                                                                 batCooldown = false 
                                                         else batCooldown = false end 
                                                 end 
                                         end) 
                                 end 
                         end) 
                         log('[ ✅ ]: Obtained a baseball bat') 
                 else log('[ ❌ ]: You already obtained baseball bat') end 
         elseif cmd == 'shield' then 
                 if SWAT then 
                         local team = getTeam() 
                         if team ~= 'Bright blue' then 
                                 log('[ 🔄 ]: Switching to guard team, please wait...') 
                                 repeat 
                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                         end 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Riot Shield'].ITEMPICKUP) 
                         if args[1] then 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         local char = user.Character 
                                         char.Humanoid.Name = 'fuck' 
                                         local c = char.fuck:Clone() 
                                         c.Name = 'Humanoid' 
                                         c.Parent = char 
                                         char.fuck:Destroy() 
                                         workspace.CurrentCamera.CameraSubject = char 
                                         char.Animate.Disabled = true 
                                         wait() 
                                         char.Animate.Disabled = false 
                                         char.Humanoid.DisplayDistanceType = 'None' 
                                         local tool = user.Backpack:FindFirstChild('Riot Shield') or user.Character:FindFirstChild('Riot Shield') 
                                         tool.Parent = char 
                                         repeat 
                                                 goTo(plr) 
                                                 RunService.Heartbeat:Wait() 
                                         until not plr or tool.Parent ~= user.Character 
                                         wait(.5) 
                                         goToCF(position) 
                                         Remotes.loadchar:InvokeServer() 
                                         log('[ ✅ ]: Gave shield to '..plrName(plr)) 
                                 else log('[ ❌ ]: No player found') end 
                         else  
                                 if not user.Character:FindFirstChild('Riot Shield') and not user.Backpack:FindFirstChild('Riot Shield') then log('[ ❌ ]: You already obtained Riot Shield') 
                                 else log('[ ✅ ]: Obtained Riot Shield') end 
                         end 
                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                 Remotes.TeamEvent:FireServer(team) 
                         elseif team == 'Really red' then 
                                 repeat 
                                         local CF = CFrame.new(-975.127686, 109.323769, 2045.06262) 
                                         if user.Character.HumanoidRootPart.CFrame ~= CF then  
                                                 goToCF(CF) 
                                         end 
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Really red' 
                         end 
                         goToCF(position) 
                 else  
                         notif('You need the SWAT gamepass to use this command')   
                         log('[ ❌ ]: You need the SWAT gamepass to use this command')   
                 end 
         elseif cmd == 'm9' or cmd == 'pistol' then 
                 if not user.Character:FindFirstChild('M9') and not user.Backpack:FindFirstChild('M9') then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP) 
                         log('[ ✅ ]: Obtained M9') 
                 else log('[ ❌ ]: You already obtained M9') end 
         elseif cmd == 'remington870' or cmd == 'remington' or cmd == 'reming' or cmd == 'shotgun' then 
                 if not user.Character:FindFirstChild('Remington 870') and not user.Backpack:FindFirstChild('Remington 870') then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) 
                         log('[ ✅ ]: Obtained Remington 870') 
                 else log('[ ❌ ]: You already obtained Remington 870') end 
         elseif cmd == 'ak47' or cmd == 'ak' then 
                 if not user.Character:FindFirstChild('AK-47') and not user.Backpack:FindFirstChild('AK-47') then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP) 
                         log('[ ✅ ]: Obtained AK-47') 
                 else log('[ ❌ ]: You already obtained AK-47') end 
         elseif cmd == 'm4a1' or cmd == 'm4' or cmd == 'ar' then 
                 if not user.Character:FindFirstChild('M4A1') and not user.Backpack:FindFirstChild('M4A1') then 
                         if SWAT then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP) 
                                 log('[ ✅ ]: Obtained M4A1') 
                         else  
                                 notif('You need the SWAT gamepass to use this command')   
                                 log('[ ❌ ]: You need the SWAT gamepass to use this command')   
                         end 
                 else log('[ ❌ ]: You already obtained M4A1') end 
         elseif cmd == 'pp' or cmd == 'willy' then 
                 if not Toggles.Penis then 
                         Toggles.Penis = true 
                         log('[ ✅ ]: Enabled penis') 
                         repeat 
                                 pcall(function() 
                                         local char = user.Character 
                                         local function findTool(n) 
                                                 return char:FindFirstChild(n) or user.Backpack:FindFirstChild(n) 
                                         end 
  
                                         if not findTool('M9') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP) end 
                                         if not findTool('Remington 870') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) end 
                                         if not findTool('AK-47') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP) end 
                                         if SWAT and not findTool('M4A1') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP) end 
                                         local team = getTeam() 
                                         if not findTool('Hammer') or not findTool('Crude Knife') then 
                                                 if team == 'Bright blue' then Remotes.TeamEvent:FireServer('Medium stone grey') end 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP)  
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)  
                                                 if team == 'Bright blue' then Remotes.TeamEvent:FireServer(team) end 
                                         end 
  
                                         local reming = findTool('Remington 870') 
                                         local ak = findTool('AK-47') 
                                         local m9 = findTool('M9') 
                                         local ham = findTool('Hammer') 
                                         local knife = findTool('Crude Knife') 
  
                                         if reming.Parent ~= char then reming.Parent = char end 
                                         if ham.Parent ~= char then ham.Parent = char end 
                                         if m9.Parent ~= char then m9.Parent = char end 
                                         if knife.Parent ~= char then knife.Parent = char end 
                                         if ak.Parent ~= char then ak.Parent = char end 
                                         if SWAT then  
                                                 local m4 = findTool('M4A1') 
                                                 if m4.Parent ~= char then m4.Parent = char end 
                                                 reming.Grip = CFrame.new(.9,2,0) 
                                                 ak.Grip = CFrame.new(.9,2,6) 
                                                 m9.Grip = CFrame.new(.9,2,3.55) 
                                                 m4.Grip = CFrame.new(.9,2,10.3)  
                                                 ham.Grip = CFrame.new(.9,-15.5,1.5) * CFrame.Angles(math.rad(90), 0, 0) 
                                                 knife.Grip = CFrame.new(.84,-18.75,1.5) * CFrame.Angles(math.rad(90), 0, 0) 
                                         else 
                                                 reming.Grip = CFrame.new(.9,2,0) 
                                                 ak.Grip = CFrame.new(.9,2,6) 
                                                 m9.Grip = CFrame.new(.9,2,3.55) 
                                                 ham.Grip = CFrame.new(.9,-11,1.5) * CFrame.Angles(math.rad(90), 0, 0) 
                                                 knife.Grip = CFrame.new(.84,-14,1.5) * CFrame.Angles(math.rad(90), 0, 0) 
                                         end 
                                 end) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.Penis 
                 else log('[ ❌ ]: Already enabled penis') end 
         elseif cmd == 'nopp' or cmd == 'unpp' or cmd == 'nowilly' or cmd == 'unwilly' then 
                 if Toggles.Penis then 
                         Toggles.Penis = false 
                         log('[ ✅ ]: Disabled penis') 
                         for _,v in next, user.Character:GetChildren() do 
                                 if v:IsA('Tool') then v.Parent = user.Backpack; v.Grip = CFrame.new(0,0,0) * CFrame.Angles(0,0,0) end 
                         end 
                 else log('[ ❌ ]: Already disabled penis') end 
         elseif cmd == 'gun' or cmd == 'guns' then 
                 local inv = #user.Backpack:GetChildren() 
                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP) 
                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) 
                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP) 
                 if SWAT then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP) 
                 end 
                 if #user.Backpack:GetChildren() ~= inv then 
                         log('[ ✅ ]: Obtained all guns') 
                 else log('[ ❌ ]: Already obtained all guns') end 
         elseif cmd == 'autogun' or cmd == 'autoguns' then 
                 if not Toggles.AutoGuns then 
                         Toggles.AutoGuns = true 
                         log('[ ✅ ]: Enabled auto guns') 
                         repeat 
                                 pcall(function() 
                                         local function findTool(n) 
                                                 return user.Character:FindFirstChild(n) or user.Backpack:FindFirstChild(n) 
                                         end 
  
                                         if not findTool('M9') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP) end 
                                         if not findTool('Remington 870') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP) end 
                                         if not findTool('AK-47') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP) end 
                                         if SWAT and not findTool('M4A1') then Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP) end 
                                 end)         
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AutoGuns 
                 else log('[ ❌ ]: Already enabled auto guns') end 
         elseif cmd == 'unautogun' or cmd == 'unautoguns' then 
                 if Toggles.AutoGuns then 
                         Toggles.AutoGuns = false 
                         log('[ ✅ ]: Disabled auto guns') 
                 else log('[ ❌ ]: Already disabled auto guns') end 
         elseif cmd == 'refreshgun' or cmd == 'regun' then 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') then 
                                 local name = tool.Name 
                                 if ModdedGuns[name] then ModdedGuns[name] = nil end 
                                 tool.Parent = user.Backpack 
                                 tool.Handle:Destroy() 
                                 tool.Parent = user.Character 
                                 tool:Destroy() 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[name].ITEMPICKUP) 
                                 local newTool = user.Backpack[name] 
                                 newTool.Parent = user.Character 
                                 log('[ ✅ ]: Refreshed '..name) 
                         else log('[ ❌ ]: Equip a gun before using this command') end 
                 else log('[ ❌ ]: Equip a gun before using this command') end 
         elseif cmd == 'refreshguns' or cmd == 'reguns' then 
                 local tools = {} 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') then 
                                 local name = tool.Name 
                                 if ModdedGuns[name] then ModdedGuns[name] = nil end 
                                 tool.Parent = user.Backpack 
                                 tool.Handle:Destroy() 
                                 tool.Parent = user.Character 
                                 tool:Destroy() 
                                 table.insert(tools, name) 
                         end 
                 end 
                 for _, tool in next, user.Backpack:GetChildren() do 
                         if tool:FindFirstChild('GunStates') then 
                                 local name = tool.Name 
                                 tool.Parent = user.Backpack 
                                 tool.Handle:Destroy() 
                                 tool.Parent = user.Character 
                                 tool:Destroy() 
                                 table.insert(tools, name) 
                         end 
                 end 
                 if #tools > 0 then 
                         for _,v in pairs(tools) do 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[v].ITEMPICKUP) 
                         end 
                         log('[ ✅ ]: Refreshed all guns') 
                 else log('[ ❌ ]: No guns were refreshed') end 
         elseif cmd == 'oneshotgun' then 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') then 
                                 local req = require(tool.GunStates) 
                                 req.Spread = 0 
                                 req.Bullets = 25 
                                 req.Damage = math.huge 
                                 log('[ ✅ ]: Made '..tool.Name..' one shot') 
                         else log('[ ❌ ]: Equip a gun before using this command') end 
                 else log('[ ❌ ]: Equip a gun before using this command') end 
         elseif cmd == 'firerate' then 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') then 
                                 if args[1] and tonumber(args[1]) then 
                                         local req = require(tool.GunStates) 
                                         req.FireRate = tonumber(args[1]) 
                                         log('[ ✅ ]: Set fire rate for '..tool.Name..' to '..args[1]) 
                                 else log('[ ❌ ]: Input a valid number') end 
                         else log('[ ❌ ]: Equip a gun before using this command') end 
                 else log('[ ❌ ]: Equip a gun before using this command') end 
         elseif cmd == 'autofire' or cmd == 'rapidfire' then 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') then 
                                 local req = require(tool.GunStates) 
                                 req.FireRate = 0 
                                 req.AutoFire = true 
                                 log('[ ✅ ]: Made '..tool.Name..' rapid fire') 
                         else log('[ ❌ ]: Equip a gun before using this command') end 
                 else log('[ ❌ ]: Equip a gun before using this command') end 
         elseif cmd == 'modgun' or cmd == 'supergun' then 
                 if user.Character:FindFirstChildOfClass('Tool') then 
                         local tool = user.Character:FindFirstChildOfClass('Tool') 
                         if tool:FindFirstChild('GunStates') and tool.Name ~= 'Taser' then 
                                 if not ModdedGuns[tool.Name] then 
                                         ModdedGuns[tool.Name] = true 
                                         log('[ ✅ ]: Enabled gun mods for '..tool.Name) 
                                         repeat 
                                                 pcall(function() 
                                                         if user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name) then 
                                                                 local toolInInv = user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name)  
                                                                 local req = require(toolInInv.GunStates) 
                                                                 req.Damage = math.huge 
                                                                 req.Range = math.huge 
                                                                 req.FireRate = -math.huge 
                                                                 req.ReloadTime = -math.huge 
                                                                 req.AutoFire = true 
                                                                 if req.CurrentAmmo <= 0 then 
                                                                         local orig = toolInInv.Parent 
                                                                         toolInInv.Handle:Destroy() 
                                                                         toolInInv.Parent = user.Character 
                                                                         toolInInv:Destroy() 
                                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP) 
                                                                         local newTool = user.Backpack:FindFirstChild(tool.Name)  
                                                                         newTool.Parent = orig 
                                                                 end 
                                                         end 
                                                 end) 
                                                 RunService.Heartbeat:Wait() 
                                         until not ModdedGuns[tool.Name] 
                                 else log('[ ❌ ]: Already enabled gun mods for '..tool.Name) end 
                         else log('[ ❌ ]: Equip a gun before using this command') end 
                 else log('[ ❌ ]: Equip a gun before using this command') end 
         elseif cmd == 'automodguns' or cmd == 'autosuperguns' then 
                 if not Toggles.AutoModGuns then 
                         Toggles.AutoModGuns = true 
                         log('[ ✅ ]: Enabled auto mod guns') 
                         if user.Character:FindFirstChildOfClass('Tool') and user.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then 
                                 local tool = user.Character:FindFirstChildOfClass('Tool') 
                                 if tool.Name ~= 'Taser' then 
                                         spawn(function() 
                                                 repeat 
                                                         pcall(function() 
                                                                 if user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name) then 
                                                                         local toolInInv = user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name)  
                                                                         local req = require(toolInInv.GunStates) 
                                                                         if req.FireRate > -999999999 then 
                                                                                 req.Damage = math.huge 
                                                                                 req.Range = math.huge 
                                                                                 req.FireRate = -math.huge 
                                                                                 req.ReloadTime = -math.huge 
                                                                                 req.AutoFire = true 
                                                                         end 
                                                                         if req.CurrentAmmo <= 0 then 
                                                                                 local orig = toolInInv.Parent 
                                                                                 toolInInv.Handle:Destroy() 
                                                                                 toolInInv.Parent = user.Character 
                                                                                 toolInInv:Destroy() 
                                                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP) 
                                                                                 local newTool = user.Backpack:FindFirstChild(tool.Name)  
                                                                                 newTool.Parent = orig 
                                                                         end 
                                                                 end 
                                                         end) 
                                                         RunService.Heartbeat:Wait() 
                                                 until not Toggles.AutoModGuns 
                                         end) 
                                 end 
                         end 
                         repeat 
                                 for _, tool in pairs(user.Backpack:GetChildren()) do 
                                         if tool:FindFirstChild('GunStates') and tool.Name ~= 'Taser' then 
                                                 spawn(function() 
                                                         repeat 
                                                                 pcall(function() 
                                                                         if user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name) then 
                                                                                 local toolInInv = user.Character:FindFirstChild(tool.Name) or user.Backpack:FindFirstChild(tool.Name)  
                                                                                 local req = require(toolInInv.GunStates) 
                                                                                 if req.FireRate > -999999999 then 
                                                                                         req.Damage = math.huge 
                                                                                         req.Range = math.huge 
                                                                                         req.FireRate = -math.huge 
                                                                                         req.ReloadTime = -math.huge 
                                                                                         req.AutoFire = true 
                                                                                 end 
                                                                                 if req.CurrentAmmo <= 0 then 
                                                                                         local orig = toolInInv.Parent 
                                                                                         toolInInv.Handle:Destroy() 
                                                                                         toolInInv.Parent = user.Character 
                                                                                         toolInInv:Destroy() 
                                                                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP) 
                                                                                         local newTool = user.Backpack:FindFirstChild(tool.Name)  
                                                                                         newTool.Parent = orig 
                                                                                 end 
                                                                         end 
                                                                 end) 
                                                                 RunService.Heartbeat:Wait() 
                                                         until not Toggles.AutoModGuns 
                                                 end) 
                                         end 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AutoModGuns 
                 else log('[ ❌ ]: Already enabled auto mod guns') end 
         elseif cmd == 'unautomodguns' or cmd == 'unautosuperguns' then 
                 if Toggles.AutoModGuns then 
                         Toggles.AutoModGuns = false 
                         ModdedGuns = {} 
                         if user.Character:FindFirstChildOfClass('Tool') and user.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then 
                                 local tool = user.Character:FindFirstChildOfClass('Tool') 
                                 if tool.Name ~= 'Taser' then 
                                         tool.Handle:Destroy() 
                                         local toolPar = tool.Parent 
                                         repeat RunService.Heartbeat:Wait()until not tool:FindFirstChild('Handle') 
                                         tool.Parent = user.Character 
                                         tool:Destroy()                                 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP) 
                                         user.Backpack[tool.Name].Parent = toolPar 
                                 end 
                         end 
                         for _, tool in pairs(user.Backpack:GetChildren()) do 
                                 if tool:FindFirstChild('GunStates') and tool.Name ~= 'Taser' then 
                                         tool.Handle:Destroy() 
                                         local toolPar = tool.Parent 
                                         repeat  RunService.Heartbeat:Wait() until not tool:FindFirstChild('Handle') 
                                         tool.Parent = user.Character 
                                         tool:Destroy()                                 
                                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP) 
                                         user.Backpack[tool.Name].Parent = toolPar 
                                 end 
                         end 
                         log('[ ✅ ]: Disabled auto mod guns') 
                 else log('[ ❌ ]: Already disabled auto mod guns') end 
         elseif cmd == 'gate' or cmd == 'frontgate' then 
                 local dest = CFrame.new(492.763, 98.039917, 2216.74878) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the gate')  
                         else log('[ ❌ ]: Failed to teleport to the gate') end 
                 else log('[ ❌ ]: Already teleported to the gate') end 
         elseif cmd == 'opengate' or cmd == 'openfrontgate' then 
                 if not Toggles.GateOpen then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons['Prison Gate']['Prison Gate']) 
                         spawn(function() 
                                 Toggles.GateOpen = true 
                                 wait(13) 
                                 Toggles.GateOpen = false 
                         end) 
                         log('[ ✅ ]: Opened gate') 
                 else log('[ ❌ ]: Already opened gate') end 
         elseif cmd == 'gateroom' then 
                 local dest = CFrame.new(504.324646, 102.039917, 2246.05103) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the gate room')   
                         else log('[ ❌ ]: Failed to teleport to the gate room') end 
                 else log('[ ❌ ]: Already teleported to the gate room') end 
         elseif cmd == 'gatetower' then 
                 local dest =  CFrame.new(502.72168, 125.039917, 2321.00098) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the gate tower')  
                         else log('[ ❌ ]: Failed to teleport to the gate tower') end 
                 else log('[ ❌ ]: Already teleported to the gate tower') end 
         elseif cmd == 'tower' then 
                 local dest = CFrame.new(823.014832, 130.039886, 2589.46802) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the tower')  
                         else log('[ ❌ ]: Failed to teleport to the tower') end 
                 else log('[ ❌ ]: Already teleported to the tower') end 
         elseif cmd == 'yard' then 
                 local dest = CFrame.new(780.596985, 97.9999237, 2468.43457) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the gate tower')  
                         else log('[ ❌ ]: Failed to teleport to the yard') end 
                 else log('[ ❌ ]: Already teleported to the yard') end 
         elseif cmd == 'armory' or cmd == 'guardroom' then 
                 local dest = CFrame.new(836.632568, 99.9899826, 2260.18994) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the armory')  
                         else log('[ ❌ ]: Failed to teleport to the armory') end 
                 else log('[ ❌ ]: Already teleported to the armory') end 
         elseif cmd == 'nexus' or cmd == 'nex' or cmd == 'prison' then 
                 local dest = CFrame.new(915.108398, 99.9899826, 2378.2648) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the nexus')  
                         else log('[ ❌ ]: Failed to teleport to the nexus') end 
                 else log('[ ❌ ]: Already teleported to the nexus') end 
         elseif cmd == 'backnexus' or cmd == 'backnex' then 
                 local dest = CFrame.new(980.860535, 99.9899826, 2316.87769) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the back of the nexus')  
                         else log('[ ❌ ]: Failed to teleport to the back of the nexus') end 
                 else log('[ ❌ ]: Already teleported to the back of the nexus') end 
         elseif cmd == 'sewer' or cmd == 'sewers' then 
                 local dest = CFrame.new(916.570679, 78.7003937, 2323.39136) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the sewers')  
                         else log('[ ❌ ]: Failed to teleport to the sewers') end 
                 else log('[ ❌ ]: Already teleported to the sewers') end 
         elseif cmd == 'cafeteria' or cmd == 'cafe' then 
                 local dest = CFrame.new(919.365601, 99.9899368, 2285.1748) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the cafeteria')  
                         else log('[ ❌ ]: Failed to teleport to the cafeteria') end 
                 else log('[ ❌ ]: Already teleported to the cafeteria') end 
         elseif cmd == 'roof' then 
                 local dest = CFrame.new(917.232056, 139.926025, 2314.79761) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the roof')  
                         else log('[ ❌ ]: Failed to teleport to the roof') end 
                 else log('[ ❌ ]: Already teleported to the roof') end 
         elseif cmd == 'crimbase' or cmd == 'criminalbase' or cmd == 'base' then 
                 local dest = CFrame.new(-943.724854, 94.1287613, 2064.69312) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the criminal base')  
                         else log('[ ❌ ]: Failed to teleport to the criminal base') end 
                 else log('[ ❌ ]: Already teleported to the criminal base') end 
         elseif cmd == 'neutralspawn' then 
                 local dest = CFrame.new(880.4111328125, 27.78998565673828, 2349.805419921875) 
                 if (dest.Position - position.Position).magnitude > 5 then 
                         goToCF(dest) 
                         local newPos = getPos() 
                         if not isDead() and (dest.Position - newPos.Position).magnitude <= 5 then 
                                 log('[ ✅ ]: Teleported to the neutral spawn')  
                         else log('[ ❌ ]: Failed to teleport to the neutral spawn') end 
                 else log('[ ❌ ]: Already teleported to the neutral spawn') end 
         elseif cmd == 'antivoid' or cmd == 'antifall' then 
                 if not Toggles.AntiVoid then 
                         Toggles.AntiVoid = true 
                         log('[ ✅ ]: Enabled anti void') 
                         repeat 
                                 pcall(function() 
                                         if user.Character.HumanoidRootPart.Position.Y < 1 then 
                                                 goToCF(CFrame.new(780.596985, 97.9999237, 2468.43457)) 
                                         end 
                                 end) 
                                 RunService.Heartbeat:Wait() 
                         until not Toggles.AntiVoid 
                 else log('[ ❌ ]: Already enabled anti void') end 
         elseif cmd == 'unantivoid' or cmd == 'unantifall' then 
                 if Toggles.AntiVoid then 
                         Toggles.AntiVoid = false 
                         log('[ ✅ ]: Disabled anti void') 
                 else log('[ ❌ ]: Already disabled anti void') end 
         elseif cmd == 'antiafk' then 
                 if not Toggles.AntiAfk then 
                         Toggles.AntiAfk = true 
                         log('[ ✅ ]: Enabled anti-afk') 
                         local VirtualUser = game:GetService("VirtualUser") 
                         local func 
                         func = user.Idled:connect(function() 
                                 if not Toggles.AntiAfk then func:Disconnect() return end 
                                 VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame) 
                                 wait(1) 
                                 VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame) 
                         end) 
                 else log('[ ❌ ]: Already enabled anti-afk') end 
         elseif cmd == 'unantiafk' then 
                 if Toggles.AntiAfk then 
                         Toggles.AntiAfk = false 
                         log('[ ✅ ]: Disabled anti-afk') 
                 else log('[ ❌ ]: Already disabled anti-afk') end 
         elseif cmd == 'rejoin' or cmd == 'rj' then 
                 log('[ ✅ ]: Rejoining server') 
                 notif('Rejoining server') 
                 TeleportService:Teleport(game.PlaceId, user) 
         elseif cmd == 'serverhop' or cmd == 'shop' then 
                 log('[ ✅ ]: Joining new server') 
                 notif('Joining new server') 
                 local httprequest =  (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request 
                 if httprequest then 
                         local servers = {} 
                         local req = httprequest({Url = string.format('https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100', game.PlaceId)}) 
                         local body =         JSONDecode(req.Body) 
                         if body and body.data then 
                                 for i, v in next, body.data do 
                                         if type(v) == 'table' and tonumber(v.playing) and tonumber(v.maxplrs) and v.playing < v.maxplrs and v.id ~= game.JobId then 
                                                 table.insert(servers, 1, v.id) 
                                         end  
                                 end 
                         end 
                         if #servers > 0 then 
                                 TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], user) 
                         else 
                                 log('[ ❌ ]: Failed to server hop') 
                                 notif('Failed to server hop') 
                         end 
                 else TeleportService:Teleport(game.PlaceId) end 
         elseif cmd == 'prefix' then 
                 if args[1] then 
                         if prefix ~= args[1] then 
                                 prefix = args[1] 
                                 _G.settings.prefix = args[1] 
                                 save() 
                                 if ChatCmd then CmdBar.PlaceholderText = 'Command Bar ('..args[1]..')' end 
                                 log('[ ✅ ]: Set prefix to '..args[1]) 
                         else log('[ ❌ ]: Already set prefix to '..args[1]) end 
                 else  
                         log('[ 📄 ]: Prefix is '..prefix) 
                         notif('Prefix is '..prefix) 
                 end 
         elseif cmd == 'notifs' or cmd == 'notifications' then 
                 if not notifs then 
                         notifs = true 
                         _G.settings.notifs = true 
                         save() 
                         log('[ ✅ ]: Enabled notifications') 
                         notif('Enabled notifications') 
                 else log('[ ❌ ]: Already enabled notifications') end 
         elseif cmd == 'nonotifs' or cmd == 'nonotifications' then 
                 if not notifs then 
                         notif('Disabled notifications') 
                         notifs = false 
                         _G.settings.notifs = false 
                         save() 
                         log('[ ✅ ]: Disabled notifications') 
                 else log('[ ❌ ]: Already disabled notifications') end 
         elseif cmd == 'chatcmd' then 
                 if not ChatCmd then 
                         ChatCmd = true 
                         _G.settings.ChatCmd = true 
                         save() 
                         CmdBar.PlaceholderText = 'Command Bar ('..prefix..')' 
                         log('[ ✅ ]: Enabled chat commands') 
                         notif('Enabled chat commands') 
                 else log('[ ❌ ]: Already enabled chat commands') end 
         elseif cmd == 'unchatcmd' or cmd == 'nochatcmd' then 
                 if ChatCmd then 
                         notif('Disabled notifications') 
                         ChatCmd = false 
                         _G.settings.ChatCmd = false 
                         save() 
                         CmdBar.PlaceholderText = 'Command Bar' 
                         log('[ ✅ ]: Disabled chat commands') 
                         notif('Disabled chat commands') 
                 else log('[ ❌ ]: Already disabled chat commands') end 
         elseif cmd == 'logs' or cmd == 'openlogs' then 
                 toggleLogs(true) 
         elseif cmd == 'nologs' or cmd == 'closelogs' then 
                 toggleLogs(false) 
         elseif cmd == 'version' or cmd == 'ver' then 
                 if pcall(function() ls('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/version') end) then 
                         if ver ~= _Version then 
                                 log('[ ⚠️ ]: Please update to new version: '.._Version) 
                                 notif('Please update to new version: '.._Version) 
                         else  
                                 log('[ 📄 ]: Version is up-to-date') 
                                 notif('Version is up-to-date') 
                         end 
                 end 
         elseif cmd == 'reload' or cmd == 'reloadgui' or cmd == 'reloadscript' then 
                 loadstr('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/source') 
         elseif cmd == 'destroy' or cmd == 'destroygui' or cmd == 'destroyscript' then 
                 CmdGUI:Remove() 
         end 
 end 
 --\\ 
 --// Rank commands 
 local function executeRankedCmd(speaker, cmd, args) 
         local position = getPos() 
         local camPos = getCam() 
         local team = getTeam() 
         local plrPos = speaker.Character.HumanoidRootPart.CFrame or nil 
         local plrTeam = speaker.TeamColor.Name 
  
         if cmd == 'cmd' or cmd == 'cmds' then 
                 chat('/w '..speaker.Name..' Prefix is '..prefix..' | cmds | tase <plr / team / all> | looptase <plr / team / all> | unlooptase <plr / team / all> | clearlooptase | arrest <plr / all> | kill <plr / team / all>'); wait(.1) 
                 chat('/w '..speaker.Name..' loopkill <plr / team / all> | unloopkill <plr / team / all> | clearloopkill | aura [plr] [range] | noaura [plr] | crim [plr / all] | goto <plr> | bring <plr / team / all>'); wait(.1) 
                 chat('/w '..speaker.Name..' fling <plr> | dropitems | undropitems | key [plr] | food [plr] | cuffs [plr] | hammer [plr] | knife [plr] | shield [plr] | gate | opengate | gateroom | gatetower | tower'); wait(.1) 
                 chat('/w '..speaker.Name..' yard | armory | nex | backnex | sewer | cafeteria | roof | base | neutralspawn'); wait(.1) 
         elseif cmd == 'tase' or cmd == 'taze' then 
                 if args[1] then 
                         local teamToTase = nil 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 teamToTase = {'Inmates', 'Bright orange'}  
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 teamToTase = {'Criminals', 'Really red'}  
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         local currentTeam = getTeam() 
                                         if currentTeam ~= 'Bright blue' then 
                                                 Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos 
                                         end 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Bright blue' and plr ~= speaker and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 tasePlrs(plrTable) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Tased all players') 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else  
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr.TeamColor.Name ~= 'Bright blue' then 
                                                 tasePlr(plr) 
                                                 chat('/w '..plr.Name..' [ ✅ ]: Tased '..plrName(plr)) 
                                                 if user.TeamColor.Name ~= team then 
                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                 Remotes.TeamEvent:FireServer(team) 
                                                         else 
                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                 goToCF(position) 
                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                         end 
                                                 end 
                                         else chat('/w '..plr.Name..' [ ❌ ]: Cannot tase player') end 
                                 else chat('/w '..plr.Name..' [ ❌ ]: No player found') end 
                         end 
                         if teamToTase and teamToTase ~= nil then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         local currentTeam = getTeam() 
                                         if currentTeam ~= 'Bright blue' then 
                                                 Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                         end 
                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == teamToTase[2] and workspace:FindFirstChild(plr.Name) then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 tasePlrs(plrTable) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Tased all '..teamToTase[1]:lower()) 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         end 
                 end 
         elseif cmd == 'looptase' or cmd == 'looptaze' then 
                 if args[1] then 
                         local team = getTeam() 
                         local already 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if not Toggles.LoopTaseInmates then 
                                         Toggles.LoopTaseInmates = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop tasing inmates') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop tasing inmates')  
                                         already = true 
                                 end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if not Toggles.LoopTaseCrims then 
                                         Toggles.LoopTaseCrims = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop tasing criminals') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop tasing criminals')  
                                         already = true 
                                 end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if not Toggles.LoopTaseAll then 
                                         Toggles.LoopTaseAll = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop tasing all players') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop tasing all players')  
                                         already = true 
                                 end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr.TeamColor.Name ~= 'Bright blue' then 
                                                 if not LoopTased[plr.UserId] then 
                                                         LoopTased[plr.UserId] = plr 
                                                         chat('/w '..speaker.Name..' [ ✅ ]: Loop tasing '..plrName(plr)) 
                                                         repeat 
                                                                 local team = getTeam() 
                                                                 if team ~= 'Bright blue' then 
                                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                                 end 
                                                                 if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                                         tasePlr(plr) 
                                                                 end 
                                                                 RunService.Heartbeat:Wait() 
                                                         until LoopTased[plr.UserId] == nil 
                                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already loop tasing '..plrName(plr)) end 
                                         else chat('/w '..speaker.Name..' [ ❌ ]: Cannot tase player') end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                         if not already then 
                                 if Toggles.LoopTaseInmates then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team ~= 'Bright blue' then 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseInmates  
                                 elseif Toggles.LoopTaseCrims then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team ~= 'Bright blue' then 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseCrims 
                                 elseif Toggles.LoopTaseAll then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team ~= 'Bright blue' then 
                                                         local newPos = getPos() 
                                                         local newCam = getCam() 
                                                         Remotes.loadchar:InvokeServer(nil, 'Bright blue') 
                                                         goToCF(newPos) 
                                                         workspace.CurrentCamera.CFrame = newCam 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr.TeamColor.Name ~= 'Bright blue' and plr ~= user and workspace:FindFirstChild(plr.Name) then 
                                                                 table.insert(plrTable, plr) 
                                                         else continue end 
                                                 end 
                                                 tasePlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopTaseAll 
                                 end 
                         end 
                 end 
         elseif cmd == 'unlooptase' or cmd == 'unlooptaze' then 
                 if args[1] then 
                         if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if Toggles.LoopTaseInmates then 
                                         Toggles.LoopTaseInmates = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop tasing inmates') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop tasing inmates') end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if Toggles.LoopTaseCrims then 
                                         Toggles.LoopTaseCrims = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop tasing criminals') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop tasing criminals') end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if Toggles.LoopTaseAll then 
                                         Toggles.LoopTaseAll = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop tasing all players') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop tasing all players') end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if LoopTased[plr.UserId] then 
                                                 LoopTased[plr.UserId] = nil 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop tasing '..plrName(plr)) 
                                         else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop tasing '..plrName(plr)) end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'clearlooptase' or cmd == 'clearlooptaze' or cmd == 'clearlooptases' or cmd == 'clearlooptazes' then 
                 Toggles.LoopTaseAll = false 
                 Toggles.LoopTaseInmates = false 
                 Toggles.LoopTaseCrims = false 
                 LoopTased = {} 
                 chat('/w '..speaker.Name..' [ ✅ ]: Cleared loop tasing all players') 
         elseif cmd == 'arrest' then 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' or args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 local arrested = {} 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Really red' then 
                                                 arrestPlr(plr) 
                                                 arrested[#arrested+1] = plr 
                                         else continue end 
                                 end 
                                 if #arrested > 0 then chat('/w '..speaker.Name..' [ ✅ ]: Arrested all players') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No players were arrested') end 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr.TeamColor.Name ~= 'Really red' then 
                                                 chat('/w '..speaker.Name..' [ 🔄 ]: Attempting to arrest '..plrName(plr)) 
                                                 repeat  
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until plr.TeamColor.Name == 'Really red' 
                                         end 
                                         arrestPlr(plr) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Arrested '..plrName(plr)) 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
         elseif cmd == 'kill' then 
                 local team = getTeam() 
                 if args[1] then 
                         local teamToKill = nil 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 teamToKill = {'Guards', 'Bright blue'}  
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 teamToKill = {'Inmates', 'Bright orange'}  
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 teamToKill = {'Criminals', 'Really red'}  
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Really red' then 
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 end 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: KiIIed all players') 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name ~= plrTeam and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: KiIIed all enemies') 
                         else 
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if team == plr.TeamColor.Name then 
                                                 Remotes.TeamEvent:FireServer('Medium stone grey') 
                                         end 
                                         killPlr(plr) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: KiIIed '..plrName(plr)) 
                                         if user.TeamColor.Name ~= team then 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                         Remotes.TeamEvent:FireServer(team) 
                                                 else 
                                                         Remotes.loadchar:InvokeServer(nil, team) 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos  
                                                 end 
                                         end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                         if teamToKill and teamToKill ~= nil then 
                                 if team == teamToKill[2] then 
                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                 end 
                                 local plrTable = {} 
                                 for _, plr in pairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == teamToKill[2] and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                 table.insert(plrTable, plr) 
                                         else continue end 
                                 end 
                                 killPlrs(plrTable) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: KiIIed all '..teamToKill[1]:lower()) 
                                 if user.TeamColor.Name ~= team then 
                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                 Remotes.TeamEvent:FireServer(team) 
                                         else 
                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                 goToCF(position) 
                                                 workspace.CurrentCamera.CFrame = camPos  
                                         end 
                                 end 
                         end 
                 end 
         elseif cmd == 'loopkill' or cmd == 'lkill' or cmd == 'lk' then 
                 if args[1] then 
                         local already 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if not Toggles.LoopKillGuards then 
                                         Toggles.LoopKillGuards = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop kiIIing guards') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop kiIIing guards') 
                                         already = true 
                                 end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if not Toggles.LoopKillInmates then 
                                         Toggles.LoopKillInmates = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop kiIIing inmates') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop killing inmates')  
                                         already = true 
                                 end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if not Toggles.LoopKillCrims then 
                                         Toggles.LoopKillCrims = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop kiIIing criminals') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop kiIIing criminals')  
                                         already = true 
                                 end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if not Toggles.LoopKillAll then 
                                         Toggles.LoopKillAll = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop kiIIing all players') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop killing all players')  
                                         already = true 
                                 end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if not Toggles.LoopKillEnemies then 
                                         Toggles.LoopKillEnemies = true 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled loop kiIIing enemies') 
                                 else  
                                         chat('/w '..speaker.Name..' [ ❌ ]: Already enabled loop kiIIing enemies')  
                                         already = true 
                                 end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if not LoopKilled[plr.UserId] then 
                                                 LoopKilled[plr.UserId] = plr 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Loop kiIIing '..plrName(plr)) 
                                                 repeat 
                                                         if workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 local team = getTeam() 
                                                                 if team == plr.TeamColor.Name then 
                                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                                 end 
                                                                 killPlr(plr) 
                                                         end 
                                                         RunService.Heartbeat:Wait() 
                                                 until LoopKilled[plr.UserId] == nil 
                                         else chat('/w '..speaker.Name..' [ ❌ ]: Already loop kiIIing '..plrName(plr)) end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                         if not already then 
                                 if Toggles.LoopKillGuards then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright blue' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Bright blue' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillGuards 
                                 elseif Toggles.LoopKillInmates then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright orange' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillInmates  
                                 elseif Toggles.LoopKillCrims then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Really red' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillCrims 
                                 elseif Toggles.LoopKillAll then 
                                         repeat 
                                                 local team = getTeam() 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Really red' then 
                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                 end 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillAll 
                                 elseif Toggles.LoopKillEnemies then 
                                         repeat 
                                                 local team = getTeam() 
                                                 local plrTable = {} 
                                                 for _, plr in pairs(Players:GetPlayers()) do 
                                                         if not Whitelisted[plr.Name] and plr ~= speaker and plr ~= user and plr.TeamColor.Name ~= plrTeam and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then 
                                                                 table.insert(plrTable, plr) 
                                                         end 
                                                 end 
                                                 killPlrs(plrTable) 
                                                 wait(.5) 
                                         until not Toggles.LoopKillEnemies 
                                 end 
                         end 
                 end 
         elseif cmd == 'unloopkill' or cmd == 'unlkill' or cmd == 'unlk' then 
                 if args[1] then 
                         if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                                 if Toggles.LoopKillGuards then 
                                         Toggles.LoopKillGuards = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop kiIIing guards') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing guards') end 
                         elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                                 if Toggles.LoopKillInmates then 
                                         Toggles.LoopKillInmates = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop killing inmates') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing inmates') end 
                         elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                                 if Toggles.LoopKillCrims then 
                                         Toggles.LoopKillCrims = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop kiIIing criminals') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing criminals') end 
                         elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 if Toggles.LoopKillAll then 
                                         Toggles.LoopKillAll = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop kiIIing all players') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing all players') end 
                         elseif args[1] == 'enemies' or args[1] == 'enemy' then 
                                 if Toggles.LoopKillEnemies then 
                                         Toggles.LoopKillEnemies = false 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop kiIIing enemies') 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing enemies') end 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if LoopKilled[plr.UserId] then 
                                                 LoopKilled[plr.UserId] = nil 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Disabled Ioop kiIIing '..plrName(plr)) 
                                         else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled Ioop kiIIing '..plrName(plr)) end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'clearloopkills' or cmd == 'clearloopkill' or cmd == 'clearlks' or cmd == 'clearlk' then 
                 Toggles.LoopKillAll = false 
                 Toggles.LoopKillGuards = false 
                 Toggles.LoopKillInmates = false 
                 Toggles.LoopKillCrims = false 
                 Toggles.LoopKillEnemies = false 
                 LoopKilled = {} 
                 chat('/w '..speaker.Name..' [ ✅ ]: Cleared loop kiIIing all players') 
         elseif cmd == 'killaura' or cmd == 'aura' then 
                 local range = 10 
                 local plr 
                 local Return 
                 if args[1] then 
                         if tonumber(args[1]) then  
                                 range = tonumber(args[1])  
                                 if Toggles.KillAura then 
                                         if Aura[speaker.UserId].Range ~= range then 
                                                 Return = true 
                                                 Aura[speaker.UserId] = {Player = speaker, Range = range} 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Set aura range to '..range) 
                                         else  
                                                 Return = true 
                                                 chat('/w '..speaker.Name..' [ ❌ ]: Already set aura range to'..range) 
                                         end 
                                 end 
                         else  
                                 local findPlr = getPlr(args[1]) 
                                 if findPlr then  
                                         if findPlr == user then 
                                                 Return = true 
                                                 chat('/w '..speaker.Name..' [ ❌ ]: Cannot give aura to '..plrName(findPlr)) 
                                         else plr = findPlr end 
                                 else 
                                         Return = true 
                                         chat('/w '..speaker.Name..' [ ❌ ]: No player found') 
                                 end 
                                 if Return then return end 
  
                                 if args[2] then 
                                         if tonumber(args[2]) then 
                                                 range = tonumber(args[2])  
                                                 if Aura[plr.UserId] then 
                                                         if Aura[plr.UserId].Range ~= range then 
                                                                 Return = true 
                                                                 Aura[plr.UserId] = {Player = plr, Range = range} 
                                                                 chat('/w '..speaker.Name..' [ ✅ ]: Set aura range for '..plr.Name..' to '..range) 
                                                         else  
                                                                 Return = true 
                                                                 chat('/w '..speaker.Name..' [ ❌ ]: Already set aura range for '..plr.Name..' to '..range) 
                                                         end 
                                                 end 
                                                 if Return then return end 
                                         else  
                                                 Return = true 
                                                 chat('/w '..speaker.Name..' [ ❌ ]: Input a valid range') 
                                         end 
                                 end 
                         end 
                 else  
                         if Toggles.KillAura then 
                                 Return = true 
                                 chat('/w '..speaker.Name..' [ ❌ ]: Already enabled kill aura') 
                         end 
                 end 
                 if Return then return end 
  
                 if plr then 
                         Aura[plr.UserId] = {Player = plr, Range = range} 
                         chat('/w '..speaker.Name..' [ ✅ ]: Gave aura to '..plr.Name..' (Range: '..range..')') 
                         repeat 
                                 for _, v in pairs(Players:GetPlayers()) do 
                                         pcall(function() 
                                                 if not Whitelisted[v.Name] and v ~= user and v ~= plr and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Humanoid') and workspace[v.Name].Humanoid.Health > 0 then 
                                                         local Distance = (v.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude 
                                                         if Distance <= Aura[plr.UserId].Range then 
                                                                 if team == v.TeamColor.Name then 
                                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                                 end 
                                                                 killPlr(v) 
                                                                 if user.TeamColor.Name ~= team then 
                                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                                 Remotes.TeamEvent:FireServer(team) 
                                                                         else 
                                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                                 goToCF(position) 
                                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                                         end 
                                                                 end 
                                                         end 
                                                 end 
                                         end) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until Aura[plr.UserId] == nil 
                 else 
                         Aura[speaker.UserId] = {Player = speaker, Range = range} 
                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled kill aura (Range: '..range..')') 
                         repeat 
                                 for _, v in pairs(Players:GetPlayers()) do 
                                         pcall(function() 
                                                 local team = getTeam() 
                                                 if not Whitelisted[v.Name] and v ~= user and v ~= speaker and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Humanoid') and workspace[v.Name].Humanoid.Health > 0 then 
                                                         local Distance = (v.Character.HumanoidRootPart.Position - speaker.Character.HumanoidRootPart.Position).magnitude 
                                                         if Distance <= Aura[speaker.UserId].Range then 
                                                                 if team == v.TeamColor.Name then 
                                                                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                                                                 end 
                                                                 killPlr(v) 
                                                                 if user.TeamColor.Name ~= team then 
                                                                         if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                                                 Remotes.TeamEvent:FireServer(team) 
                                                                         else 
                                                                                 Remotes.loadchar:InvokeServer(nil, team) 
                                                                                 goToCF(position) 
                                                                                 workspace.CurrentCamera.CFrame = camPos  
                                                                         end 
                                                                 end 
                                                         end 
                                                 end 
                                         end) 
                                 end 
                                 RunService.Heartbeat:Wait() 
                         until Aura[speaker.UserId] == nil 
                 end 
         elseif cmd == 'unkillaura' or cmd == 'unaura' or cmd == 'nokillaura' or cmd == 'noaura' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if Aura[plr.UserId] then 
                                         Aura[plr.UserId] = nil 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled kill aura from '..plrName(plr)) 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled kill aura from '..plrName(plr)) end 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 else 
                         if Aura[speaker.UserId]  then 
                                 Aura[speaker.UserId] = nil 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Disabled kill aura') 
                         else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled kill aura') end 
                 end 
         elseif cmd == 'criminal' or cmd == 'crim' then 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Medium stone grey' and plr ~= user and plr.TeamColor.Name ~= 'Really red' then 
                                                 repeat  
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or plr.TeamColor.Name == 'Really red' 
                                         else continue end 
                                 end 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Made all players criminals') 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr ~= speaker then 
                                                 if plr.TeamColor.Name ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red' 
                                                         if Players:FindFirstChild(plr.Name) then 
                                                                 chat('/w '..speaker.Name..' [ ✅ ]: Made '..plrName(plr)..' a criminal') 
                                                         end 
                                                 else  
                                                         chat('/w '..speaker.Name..' [ ❌ ]: '..plrName(plr)..' is already a criminal')  
                                                 end 
                                         else  
                                                 if plrTeam  ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(speaker, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(speaker.Name)) or speaker.TeamColor.Name == 'Really red' 
                                                         Remotes.loadchar:InvokeServer(nil, 'Really red') 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos 
                                                         chat('/w '..speaker.Name..' [ ✅ ]: Joined criminals team') 
                                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already joined criminals team') end 
                                         end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                 else 
                         if plrTeam  ~= 'Really red' then 
                                 repeat  
                                         bringPlr(speaker, CFrame.new(-919, 96, 2138))  
                                         RunService.Heartbeat:Wait() 
                                 until (not Players:FindFirstChild(speaker.Name)) or speaker.TeamColor.Name == 'Really red' 
                                 Remotes.loadchar:InvokeServer(nil, 'Really red') 
                                 goToCF(position) 
                                 workspace.CurrentCamera.CFrame = camPos 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Joined criminals team') 
                         else chat('/w '..speaker.Name..' [ ❌ ]: Already joined criminals team') end 
                 end 
         elseif cmd == 'criminals' or cmd == 'crims' then 
                 if plrTeam  ~= 'Really red' then 
                         repeat  
                                 bringPlr(speaker, CFrame.new(-919, 96, 2138))  
                                 RunService.Heartbeat:Wait() 
                         until (not Players:FindFirstChild(speaker.Name)) or speaker.TeamColor.Name == 'Really red' 
                         Remotes.loadchar:InvokeServer(nil, 'Really red') 
                         goToCF(position) 
                         workspace.CurrentCamera.CFrame = camPos 
                         chat('/w '..speaker.Name..' [ ✅ ]: Joined criminals team') 
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already joined criminals team') end 
         elseif cmd == 'makecrim' or cmd == 'makecriminal' then 
                 if args[1] then 
                         if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                                 for _, plr in ipairs(Players:GetPlayers()) do 
                                         if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Medium stone grey' and plr ~= user and plr.TeamColor.Name ~= 'Really red' then 
                                                 repeat  
                                                         bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or plr.TeamColor.Name == 'Really red' 
                                         else continue end 
                                 end 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Made all players criminals') 
                         else  
                                 local plr = getPlr(args[1]) 
                                 if plr then 
                                         if plr ~= speaker then 
                                                 if plr.TeamColor.Name ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(plr, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red' 
                                                         if Players:FindFirstChild(plr.Name) then 
                                                                 chat('/w '..speaker.Name..' [ ✅ ]: Made '..plrName(plr)..' a criminal') 
                                                         end 
                                                 else  
                                                         chat('/w '..speaker.Name..' [ ❌ ]: '..plrName(plr)..' is already a criminal')  
                                                 end 
                                         else  
                                                 if plrTeam  ~= 'Really red' then 
                                                         repeat  
                                                                 bringPlr(speaker, CFrame.new(-919, 96, 2138))  
                                                                 RunService.Heartbeat:Wait() 
                                                         until (not Players:FindFirstChild(speaker.Name)) or speaker.TeamColor.Name == 'Really red' 
                                                         Remotes.loadchar:InvokeServer(nil, 'Really red') 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos 
                                                         chat('/w '..speaker.Name..' [ ✅ ]: Joined criminals team') 
                                                 else chat('/w '..speaker.Name..' [ ❌ ]: Already joined criminals team') end 
                                         end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         end 
                 end 
         elseif cmd == 'goto' or cmd == 'to' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= speaker then 
                                         pcall(function() 
                                                 local dest = plr.Character.HumanoidRootPart.CFrame 
                                                 bringPlr(speaker, dest) 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Teleported to '..plrName(plr)) 
                                         end) 
                                 else chat('/w '..speaker.Name.."[ ❌ ]: You can't teleport to yourself") end 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'bring' then 
                 local teamToBring = nil 
                 if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then 
                         teamToBring = {'Guards', 'Bright blue'}  
                 elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then 
                         teamToBring = {'Inmates', 'Bright orange'}  
                 elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then 
                         teamToBring = {'Criminals', 'Really red'}  
                 elseif args[1] == 'all' or args[1] == 'other' or args[1] == 'others' then 
                         for _, plr in ipairs(Players:GetPlayers()) do 
                                 if not Whitelisted[plr.Name] and plr ~= speaker and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= user then 
                                         if plr == user then goTo(speaker) else  bringPlr(plr, plrPos) end 
                                 else continue end 
                         end 
                         chat('/w '..speaker.Name..' [ ✅ ]: Brought all players') 
                 elseif args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr == user then 
                                         goTo(speaker) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Brought '..plrName(user)) 
                                 elseif plr ~= speaker then 
                                         repeat  
                                                 bringPlr(plr, plrPos) 
                                                 RunService.Heartbeat:Wait() 
                                         until (plrPos.Position - plr.Character.HumanoidRootPart.Position).magnitude <= 5 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Brought '..plrName(plr)) 
                                 else chat('/w '..speaker.Name.."[ ❌ ]: You can't bring yourself") end 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 end 
                 if teamToBring and teamToBring ~= nil then 
                         for _, plr in ipairs(Players:GetPlayers()) do 
                                 if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= user and plr.TeamColor.Name == teamToBring[2] then 
                                         repeat  
                                                 bringPlr(plr, plrPos) 
                                                 RunService.Heartbeat:Wait() 
                                         until (plrPos.Position - plr.Character.HumanoidRootPart.Position).magnitude <= 5 
                                 end 
                         end 
                         chat('/w '..speaker.Name..' [ ✅ ]: Brought all '..teamToBring[1]:lower()) 
                 end 
         elseif cmd == 'fling' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr == user then chat('/w '..speaker.Name..' [ ❌ ]: Cannot fling '..plrName(plr)) 
                                 elseif plr ~= speaker then 
                                         flingPlr(plr) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Flinged '..plrName(plr)) 
                                         if user.TeamColor.Name ~= team then 
                                                 if team == 'Bright blue' or team == 'Bright orange' or team == 'Medium stone grey' then 
                                                         Remotes.TeamEvent:FireServer(team) 
                                                 else 
                                                         Remotes.loadchar:InvokeServer(nil, team) 
                                                         goToCF(position) 
                                                         workspace.CurrentCamera.CFrame = camPos  
                                                 end 
                                         end 
                                 else chat('/w '..speaker.Name.."[ ❌ ]: You can't fling yourself") end 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 end 
         elseif cmd == 'dropitems' then 
                 if not Toggles.DropItems then 
                         Toggles.DropItems = true 
                         if team ~= 'Bright blue' then 
                                 chat('/w '..speaker.Name..' [ 🔄 ]: Switching to guard team, please wait...') 
                                 repeat  
                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                         end 
                         chat('/w '..speaker.Name..' [ ✅ ]: Enabled item dropping') 
                         repeat  
                                 user.Character:BreakJoints() 
                                 Remotes.loadchar:InvokeServer() 
                                 goTo(speaker) 
                                 wait(.15) 
                         until not Toggles.DropItems 
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already enabled item dropping') end 
         elseif cmd == 'undropitems' then 
                 if Toggles.DropItems then 
                         Toggles.DropItems = false 
                         chat('/w '..speaker.Name..' [ ✅ ]: Disabled item dropping') 
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already disabled item dropping') end 
         elseif cmd == 'food' then 
                 local tools = {'Breakfast', 'Lunch', 'Dinner'} 
                 local toolAvailable 
                 for _,v in pairs(tools) do 
                         if workspace.Prison_ITEMS.giver:FindFirstChild(v) then 
                                 toolAvailable = v 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[v].ITEMPICKUP) 
                                 break 
                         else continue end 
                 end 
                 if toolAvailable then 
                         if args[1] then 
                                 local plr = getPlr(args[1]) 
                                 if plr and plr ~= user then 
                                         local char = user.Character 
                                         char.Humanoid.Name = 'fuck' 
                                         local c = char.fuck:Clone() 
                                         c.Name = 'Humanoid' 
                                         c.Parent = char 
                                         char.fuck:Destroy() 
                                         workspace.CurrentCamera.CameraSubject = char 
                                         char.Animate.Disabled = true 
                                         wait() 
                                         char.Animate.Disabled = false 
                                         char.Humanoid.DisplayDistanceType = 'None' 
                                         local tool = user.Backpack:FindFirstChild(toolAvailable) or user.Character:FindFirstChild(toolAvailable) 
                                         tool.Parent = char 
                                         repeat 
                                                 goTo(plr) 
                                                 RunService.Heartbeat:Wait() 
                                         until not plr or tool.Parent ~= user.Character 
                                         wait(.5) 
                                         goToCF(position) 
                                         Remotes.loadchar:InvokeServer() 
                                         goToCF(position) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Gave'..toolAvailable..' to '..plrName(plr)) 
                                 elseif plr and plr == user then 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Gave'..toolAvailable..' to '..plrName(plr)) 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         else 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild(toolAvailable) or user.Character:FindFirstChild(toolAvailable) 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(speaker) 
                                         RunService.Heartbeat:Wait() 
                                 until not speaker or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Obtained '..toolAvailable) 
                         end 
                 else chat('/w '..speaker.Name..' [ ❌ ]: Failed to obtain a food item') end  
         elseif cmd == 'handcuffs' or cmd == 'cuffs' then 
                 if not user.Backpack:FindFirstChild('Handcuffs') and not user.Character:FindFirstChild('Handcuffs') then 
                         if team ~= 'Bright blue' then 
                                 chat('/w '..speaker.Name..' [ 🔄 ]: Switching to guard team, please wait...') 
                                 repeat  
                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                                 Remotes.loadchar:InvokeServer() 
                         else Remotes.loadchar:InvokeServer() end 
                 end 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr ~= user then 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Handcuffs') or user.Character:FindFirstChild('Handcuffs') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Gave handcuffs to '..plrName(plr)) 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 else  
                         local char = user.Character 
                         char.Humanoid.Name = 'fuck' 
                         local c = char.fuck:Clone() 
                         c.Name = 'Humanoid' 
                         c.Parent = char 
                         char.fuck:Destroy() 
                         workspace.CurrentCamera.CameraSubject = char 
                         char.Animate.Disabled = true 
                         wait() 
                         char.Animate.Disabled = false 
                         char.Humanoid.DisplayDistanceType = 'None' 
                         local tool = user.Backpack:FindFirstChild('Handcuffs') or user.Character:FindFirstChild('Handcuffs') 
                         tool.Parent = char 
                         repeat 
                                 goTo(speaker) 
                                 RunService.Heartbeat:Wait() 
                         until not speaker or tool.Parent ~= user.Character 
                         wait(.5) 
                         goToCF(position) 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Obtained handcuffs') 
                 end 
         elseif cmd == 'shield' then 
                 if SWAT then 
                         if team ~= 'Bright blue' then 
                                 chat('/w '..speaker.Name..' [ 🔄 ]: Switching to guard team, please wait...') 
                                 repeat 
                                         Remotes.TeamEvent:FireServer('Bright blue')  
                                         RunService.Heartbeat:Wait() 
                                 until getTeam() == 'Bright blue' 
                         end 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Riot Shield'].ITEMPICKUP) 
                         if args[1] then 
                                 local plr = getPlr(args[1]) 
                                 if plr ~= user then 
                                         local char = user.Character 
                                         char.Humanoid.Name = 'fuck' 
                                         local c = char.fuck:Clone() 
                                         c.Name = 'Humanoid' 
                                         c.Parent = char 
                                         char.fuck:Destroy() 
                                         workspace.CurrentCamera.CameraSubject = char 
                                         char.Animate.Disabled = true 
                                         wait() 
                                         char.Animate.Disabled = false 
                                         char.Humanoid.DisplayDistanceType = 'None' 
                                         local tool = user.Backpack:FindFirstChild('Riot Shield') or user.Character:FindFirstChild('Riot Shield') 
                                         tool.Parent = char 
                                         repeat 
                                                 goTo(plr) 
                                                 RunService.Heartbeat:Wait() 
                                         until not plr or tool.Parent ~= user.Character 
                                         wait(.5) 
                                         goToCF(position) 
                                         Remotes.loadchar:InvokeServer() 
                                         goToCF(position) 
                                         chat('/w '..speaker.Name..' [ ✅ ]: Gave shield to '..plrName(plr)) 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                         else  
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Riot Shield') or user.Character:FindFirstChild('Riot Shield') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(speaker) 
                                         RunService.Heartbeat:Wait() 
                                 until not speaker or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Obtained shield') 
                         end 
                 end 
         elseif cmd == 'key' or cmd == 'keycard' or cmd == 'card' then 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 if plr ~= user then 
                                         chat('/w '..speaker.Name..' [ 🔄 ]: Attempting to give key to '..plrName(plr)) 
                                         local position = getPos() 
                                         if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                         else  
                                                 if team ~= 'Bright blue' then 
                                                         chat('/w '..speaker.Name..' [ 🔄 ]: Switching to guard team, please wait...') 
                                                         repeat  
                                                                 Remotes.TeamEvent:FireServer('Bright blue')  
                                                                 RunService.Heartbeat:Wait() 
                                                         until getTeam() == 'Bright blue' 
                                                 end 
                                                 repeat 
                                                         goToCF(CFrame.new(-365.976562, 84.2401199, 1987.99207)) 
                                                         user.Character:BreakJoints() 
                                                         Remotes.loadchar:InvokeServer() 
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or workspace.Prison_ITEMS.single:FindFirstChild('Key card') 
                                         end 
                                         if plr then 
                                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                                                 local char = user.Character 
                                                 char.Humanoid.Name = 'fuck' 
                                                 local c = char.fuck:Clone() 
                                                 c.Name = 'Humanoid' 
                                                 c.Parent = char 
                                                 char.fuck:Destroy() 
                                                 workspace.CurrentCamera.CameraSubject = char 
                                                 char.Animate.Disabled = true 
                                                 wait() 
                                                 char.Animate.Disabled = false 
                                                 char.Humanoid.DisplayDistanceType = 'None' 
                                                 local tool = user.Backpack:FindFirstChild('Key card') or user.Character:FindFirstChild('Key card') 
                                                 tool.Parent = char 
                                                 repeat 
                                                         goTo(plr) 
                                                         RunService.Heartbeat:Wait() 
                                                 until not plr or tool.Parent ~= user.Character 
                                                 wait(.5) 
                                                 Remotes.loadchar:InvokeServer() 
                                                 goToCF(position) 
                                                 chat('/w '..speaker.Name..' [ ✅ ]: Gave key card to '..plrName(plr)) 
                                         else chat('/w '..speaker.Name..' [ ❌ ]: Failed to give key card to '..plrName(plr)) end 
                                 else chat('/w '..speaker.Name..' [ ❌ ]: Cannot give key card to '..plrName(plr)) end 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 else  
                         chat('/w '..speaker.Name..' [ 🔄 ]: Attempting to obtain key card') 
                         if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then 
                                 Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                         else  
                                 if team ~= 'Bright blue' then 
                                         chat('/w '..speaker.Name..' [ 🔄 ]: Switching to guard team, please wait...') 
                                         repeat  
                                                 Remotes.TeamEvent:FireServer('Bright blue')  
                                                 RunService.Heartbeat:Wait() 
                                         until getTeam() == 'Bright blue' 
                                 end 
                                 repeat 
                                         goToCF(CFrame.new(-365.976562, 84.2401199, 1987.99207)) 
                                         user.Character:BreakJoints() 
                                         Remotes.loadchar:InvokeServer() 
                                         RunService.Heartbeat:Wait() 
                                 until workspace.Prison_ITEMS.single:FindFirstChild('Key card') 
                         end 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP) 
                         local char = user.Character 
                         char.Humanoid.Name = 'fuck' 
                         local c = char.fuck:Clone() 
                         c.Name = 'Humanoid' 
                         c.Parent = char 
                         char.fuck:Destroy() 
                         workspace.CurrentCamera.CameraSubject = char 
                         char.Animate.Disabled = true 
                         wait() 
                         char.Animate.Disabled = false 
                         char.Humanoid.DisplayDistanceType = 'None' 
                         local tool = user.Backpack:FindFirstChild('Key card') or user.Character:FindFirstChild('Key card') 
                         tool.Parent = char 
                         repeat 
                                 goTo(speaker) 
                                 RunService.Heartbeat:Wait() 
                         until not speaker or tool.Parent ~= user.Character 
                         wait(.5) 
                         goToCF(position) 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Obtained key card') 
                 end 
         elseif cmd == 'crudeknife' or cmd == 'knife' or cmd == 'shank' then 
                 if team ~= 'Bright blue' then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                 else  
                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP) 
                         Remotes.TeamEvent:FireServer('Bright blue') 
                 end 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr then 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Crude Knife') or user.Character:FindFirstChild('Crude Knife') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Gave knife to '..plrName(plr)) 
                         elseif plr and plr == user then chat('/w '..speaker.Name..' [ ✅ ]: Gave knife to '..plrName(plr)) 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 else 
                         local char = user.Character 
                         char.Humanoid.Name = 'fuck' 
                         local c = char.fuck:Clone() 
                         c.Name = 'Humanoid' 
                         c.Parent = char 
                         char.fuck:Destroy() 
                         workspace.CurrentCamera.CameraSubject = char 
                         char.Animate.Disabled = true 
                         wait() 
                         char.Animate.Disabled = false 
                         char.Humanoid.DisplayDistanceType = 'None' 
                         local tool = user.Backpack:FindFirstChild('Crude Knife') or user.Character:FindFirstChild('Crude Knife') 
                         tool.Parent = char 
                         repeat 
                                 goTo(speaker) 
                                 RunService.Heartbeat:Wait() 
                         until not speaker or tool.Parent ~= user.Character 
                         wait(.5) 
                         goToCF(position) 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Obtained crude knife')  
                 end 
         elseif cmd == 'hammer' then 
                 if team ~= 'Bright blue' then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                 else  
                         Remotes.TeamEvent:FireServer('Medium stone grey') 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single.Hammer.ITEMPICKUP) 
                         Remotes.TeamEvent:FireServer('Bright blue') 
                 end 
                 if args[1] then 
                         local plr = getPlr(args[1]) 
                         if plr and plr ~= user then 
                                 local char = user.Character 
                                 char.Humanoid.Name = 'fuck' 
                                 local c = char.fuck:Clone() 
                                 c.Name = 'Humanoid' 
                                 c.Parent = char 
                                 char.fuck:Destroy() 
                                 workspace.CurrentCamera.CameraSubject = char 
                                 char.Animate.Disabled = true 
                                 wait() 
                                 char.Animate.Disabled = false 
                                 char.Humanoid.DisplayDistanceType = 'None' 
                                 local tool = user.Backpack:FindFirstChild('Hammer') or user.Character:FindFirstChild('Hammer') 
                                 tool.Parent = char 
                                 repeat 
                                         goTo(plr) 
                                         RunService.Heartbeat:Wait() 
                                 until not plr or tool.Parent ~= user.Character 
                                 wait(.5) 
                                 goToCF(position) 
                                 Remotes.loadchar:InvokeServer() 
                                 goToCF(position) 
                                 chat('/w '..speaker.Name..' [ ✅ ]: Gave hammer to '..plrName(plr)) 
                         elseif plr and plr == user then chat('/w '..speaker.Name..' [ ✅ ]: Gave hammer to '..plrName(plr)) 
                         else chat('/w '..speaker.Name..' [ ❌ ]: No player found') end 
                 else 
                         local char = user.Character 
                         char.Humanoid.Name = 'fuck' 
                         local c = char.fuck:Clone() 
                         c.Name = 'Humanoid' 
                         c.Parent = char 
                         char.fuck:Destroy() 
                         workspace.CurrentCamera.CameraSubject = char 
                         char.Animate.Disabled = true 
                         wait() 
                         char.Animate.Disabled = false 
                         char.Humanoid.DisplayDistanceType = 'None' 
                         local tool = user.Backpack:FindFirstChild('Hammer') or user.Character:FindFirstChild('Hammer') 
                         tool.Parent = char 
                         repeat 
                                 goTo(speaker) 
                                 RunService.Heartbeat:Wait() 
                         until not speaker or tool.Parent ~= user.Character 
                         wait(.5) 
                         goToCF(position) 
                         Remotes.loadchar:InvokeServer() 
                         goToCF(position) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Obtained hammer')  
                 end 
         elseif cmd == 'gate' or cmd == 'frontgate' then 
                 local dest = CFrame.new(492.763, 98.039917, 2216.74878) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the gate')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the gate') end 
         elseif cmd == 'opengate' or cmd == 'openfrontgate' then 
                 if not Toggles.GateOpen then 
                         Remotes.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons['Prison Gate']['Prison Gate']) 
                         spawn(function() 
                                 Toggles.GateOpen = true 
                                 wait(13) 
                                 Toggles.GateOpen = false 
                         end) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Opened gate') 
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already opened gate') end 
         elseif cmd == 'gateroom' then 
                 local dest = CFrame.new(504.324646, 102.039917, 2246.05103) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the gate room')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the gate room') end 
         elseif cmd == 'gatetower' then 
                 local dest =  CFrame.new(502.72168, 125.039917, 2321.00098) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the gate tower')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the gate tower') end 
         elseif cmd == 'tower' then 
                 local dest = CFrame.new(823.014832, 130.039886, 2589.46802) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the tower')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the tower') end 
         elseif cmd == 'yard' then 
                 local dest = CFrame.new(780.596985, 97.9999237, 2468.43457) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the yard')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the yard') end 
         elseif cmd == 'armory' or cmd == 'guardroom' then 
                 local dest = CFrame.new(836.632568, 99.9899826, 2260.18994) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the armory')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the armory') end 
         elseif cmd == 'nexus' or cmd == 'nex' or cmd == 'prison' then 
                 local dest = CFrame.new(915.108398, 99.9899826, 2378.2648) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the nexus')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the nexus') end 
         elseif cmd == 'backnexus' or cmd == 'backnex' then 
                 local dest = CFrame.new(980.860535, 99.9899826, 2316.87769) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the back nexus')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the back nexus') end 
         elseif cmd == 'sewer' or cmd == 'sewers' then 
                 local dest = CFrame.new(916.570679, 78.7003937, 2323.39136) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the sewers')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the sewers') end 
         elseif cmd == 'cafeteria' or cmd == 'cafe' then 
                 local dest = CFrame.new(919.365601, 99.9899368, 2285.1748) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the cafeteria')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the cafeteria') end 
         elseif cmd == 'roof' then 
                 local dest = CFrame.new(917.232056, 139.926025, 2314.79761) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the roof')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the roof') end 
         elseif cmd == 'crimbase' or cmd == 'criminalbase' or cmd == 'base' then 
                 local dest = CFrame.new(-943.724854, 94.1287613, 2064.69312) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the criminal base')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the criminal base') end 
         elseif cmd == 'neutralspawn' then 
                 local dest = CFrame.new(880.4111328125, 27.78998565673828, 2349.805419921875) 
                 if (dest.Position - plrPos.Position).magnitude > 5 then 
                         bringPlr(speaker, dest) 
                         chat('/w '..speaker.Name..' [ ✅ ]: Teleported to the neutral spawn')  
                 else chat('/w '..speaker.Name..' [ ❌ ]: Already teleported to the neutral spawn') end 
         end 
 end 
  
 addFunction(Players.PlayerAdded:Connect(function(plr)  
         local counter = 0 
         local func 
         func = plr.CharacterAdded:Connect(function(char) 
                 ContentProvider:PreloadAsync(char:GetChildren()) 
                 if Ranked[plr.Name] then chat('/w '..plr.Name..' [ ✅ ]: You have been ranked as admin. To view commands, chat '..prefix..'cmds') end 
                 if counter > 0 then func:Disconnect() else counter = counter + 1 end 
         end) 
 end)) 
  
 spawn(function() 
         if not reload then 
                 for _, plr in next, Players:GetPlayers() do 
                         if Ranked[plr.Name] then chat('/w '..plr.Name..' [ ✅ ]: You have been ranked as admin. To view commands, chat '..prefix..'cmds') else continue end 
                 end 
         end 
 end) 
 --\\ 
 --// Search bar 
 CmdBar.Changed:Connect(function() 
         if CmdBar.Text ~= '' then 
                 local args = string.split(CmdBar.Text, ' ') 
                 local cmd 
                 if args[2] then cmd = args[1] else cmd = CmdBar.Text end 
                 CmdHandler.CanvasPosition = Vector2.new(0,0) 
                 for _, v in pairs(CmdHandler:GetChildren()) do 
                         if v:IsA('TextButton') then 
                                 if not string.find(string.lower(v.Text),string.lower(cmd)) then 
                                         v.Visible = false 
                                 else  
                                         if v.Visible == false then v.Visible = true end 
                                 end 
                         end 
                 end 
         else 
                 for _, v in pairs(CmdHandler:GetChildren()) do 
                         if v:IsA('TextButton') then 
                                 if not v.Visible then 
                                         v.Visible = true 
                                 end 
                         end 
                 end 
         end 
 end) 
  
 CmdBar.FocusLost:Connect(function(_) 
         if _ then  
                 local args = string.split(CmdBar.Text, ' ') 
                 local cmd = args[1]:lower() 
                 table.remove(args, 1) 
                 CmdBar.Text = '' 
                 executeCmd(cmd, args) 
         end 
 end) 
 --\\ 
 --// Chat 
 local chatbox = game.WaitForChild(user.PlayerGui, 'Chat').Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 
 addFunction(chatbox:GetPropertyChangedSignal('Text'):Connect(function() 
         if ChatCmd then 
                 local p = string.match(chatbox.Text, '^%s*(.)') 
                 if p == prefix then 
                         local txt = chatbox.Text:gsub('%'..prefix, ''):split(' ')[1]:lower() 
                         if txt ~= '' then 
                                 CmdHandler.CanvasPosition = Vector2.new(0, 0) 
                                 for _, v in pairs(CmdHandler:GetChildren()) do 
                                         if v:IsA('TextButton') then 
                                                 if not string.find(string.lower(v.Text),string.lower(txt)) then 
                                                         v.Visible = false 
                                                 else  
                                                         if v.Visible == false then v.Visible = true end 
                                                 end 
                                         end 
                                 end 
                         else 
                                 for _, v in pairs(CmdHandler:GetChildren()) do 
                                         if v:IsA('TextButton') then 
                                                 if not v.Visible then 
                                                         v.Visible = true 
                                                 end 
                                         end 
                                 end 
                         end 
                 else  
                         for _, v in pairs(CmdHandler:GetChildren()) do 
                                 if v:IsA('TextButton') then 
                                         if not v.Visible then 
                                                 v.Visible = true 
                                         end 
                                 end 
                         end 
                 end 
         end 
 end)) 
  
 addFunction(chatbox.FocusLost:Connect(function() 
         if ChatCmd then 
                 for _, v in pairs(CmdHandler:GetChildren()) do 
                         if v:IsA('TextButton') then 
                                 if not v.Visible then 
                                         v.Visible = true 
                                 end 
                         end 
                 end 
                 return 
         end 
 end)) 
  
 addFunction(chatevents.OnMessageDoneFiltering.OnClientEvent:Connect(function(d) 
         local plr = Players:FindFirstChild(d.FromSpeaker) 
         local c = d.Message 
         if plr == user then 
                 if ChatCmd then 
                         local p = string.match(c, '^%s*(.)') 
                         if p == prefix then 
                                 local args = c:gsub('%'..prefix, ''):split(' ') 
                                 local cmd = args[1]:lower() 
                                 table.remove(args, 1) 
                                 executeCmd(cmd, args) 
                         end 
                 end 
         else 
                 if Ranked[plr.Name] then  
                         local p = string.match(c, '^%s*(.)') 
                         if p == prefix then 
                                 local args = c:gsub('%'..prefix, ''):split(' ') 
                                 local cmd = args[1]:lower() 
                                 table.remove(args, 1) 
                                 executeRankedCmd(plr, cmd, args) 
                         end 
                 end 
         end 
 end)) 
 --\\ 
 --// Stop entire script when removed 
 addFunction(CmdGUI:GetPropertyChangedSignal('Parent'):Connect(function() 
         LoopKilled = {} 
         LoopTased = {} 
         Aura = {} 
         Whitelisted = {} 
         ModdedGuns = {} 
         Toggles = {} 
         Spectating = nil 
         Bringing = nil 
         Flinging = nil 
         SpamArresting = nil 
         punchCooldown = nil 
         knifeCooldown = nil 
         batCooldown = nil 
         for _, v in pairs(Functions) do v:Disconnect() end 
         CmdGUI:Destroy() 
 end))
